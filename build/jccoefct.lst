ARM GAS  /tmp/cc7UMkoE.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"jccoefct.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.start_iMCU_row,"ax",%progbits
  18              		.align	1
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv5-sp-d16
  24              	start_iMCU_row:
  25              	.LFB3:
  26              		.file 1 "Middlewares/Third_Party/LibJPEG/source/jccoefct.c"
   1:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** /*
   2:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****  * jccoefct.c
   3:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****  *
   4:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****  * Copyright (C) 1994-1997, Thomas G. Lane.
   5:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****  * Modified 2003-2011 by Guido Vollbeding.
   6:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****  * This file is part of the Independent JPEG Group's software.
   7:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****  * For conditions of distribution and use, see the accompanying README file.
   8:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****  *
   9:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****  * This file contains the coefficient buffer controller for compression.
  10:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****  * This controller is the top level of the JPEG compressor proper.
  11:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****  * The coefficient buffer lies between forward-DCT and entropy encoding steps.
  12:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****  */
  13:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** 
  14:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** #define JPEG_INTERNALS
  15:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** #include "jinclude.h"
  16:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** #include "jpeglib.h"
  17:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** 
  18:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** 
  19:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** /* We use a full-image coefficient buffer when doing Huffman optimization,
  20:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****  * and also for writing multiple-scan JPEG files.  In all cases, the DCT
  21:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****  * step is run during the first pass, and subsequent passes need only read
  22:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****  * the buffered coefficients.
  23:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****  */
  24:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** #ifdef ENTROPY_OPT_SUPPORTED
  25:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** #define FULL_COEF_BUFFER_SUPPORTED
  26:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** #else
  27:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** #ifdef C_MULTISCAN_FILES_SUPPORTED
  28:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** #define FULL_COEF_BUFFER_SUPPORTED
  29:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** #endif
  30:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** #endif
  31:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** 
  32:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** 
ARM GAS  /tmp/cc7UMkoE.s 			page 2


  33:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** /* Private buffer controller object */
  34:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** 
  35:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** typedef struct {
  36:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****   struct jpeg_c_coef_controller pub; /* public fields */
  37:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** 
  38:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****   JDIMENSION iMCU_row_num;	/* iMCU row # within image */
  39:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****   JDIMENSION mcu_ctr;		/* counts MCUs processed in current row */
  40:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****   int MCU_vert_offset;		/* counts MCU rows within iMCU row */
  41:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****   int MCU_rows_per_iMCU_row;	/* number of such rows needed */
  42:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** 
  43:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****   /* For single-pass compression, it's sufficient to buffer just one MCU
  44:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****    * (although this may prove a bit slow in practice).  We allocate a
  45:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****    * workspace of C_MAX_BLOCKS_IN_MCU coefficient blocks, and reuse it for each
  46:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****    * MCU constructed and sent.  (On 80x86, the workspace is FAR even though
  47:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****    * it's not really very big; this is to keep the module interfaces unchanged
  48:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****    * when a large coefficient buffer is necessary.)
  49:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****    * In multi-pass modes, this array points to the current MCU's blocks
  50:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****    * within the virtual arrays.
  51:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****    */
  52:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****   JBLOCKROW MCU_buffer[C_MAX_BLOCKS_IN_MCU];
  53:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** 
  54:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****   /* In multi-pass modes, we need a virtual block array for each component. */
  55:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****   jvirt_barray_ptr whole_image[MAX_COMPONENTS];
  56:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** } my_coef_controller;
  57:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** 
  58:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** typedef my_coef_controller * my_coef_ptr;
  59:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** 
  60:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** 
  61:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** /* Forward declarations */
  62:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** METHODDEF(boolean) compress_data
  63:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****     JPP((j_compress_ptr cinfo, JSAMPIMAGE input_buf));
  64:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** #ifdef FULL_COEF_BUFFER_SUPPORTED
  65:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** METHODDEF(boolean) compress_first_pass
  66:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****     JPP((j_compress_ptr cinfo, JSAMPIMAGE input_buf));
  67:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** METHODDEF(boolean) compress_output
  68:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****     JPP((j_compress_ptr cinfo, JSAMPIMAGE input_buf));
  69:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** #endif
  70:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** 
  71:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** 
  72:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** LOCAL(void)
  73:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** start_iMCU_row (j_compress_ptr cinfo)
  74:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** /* Reset within-iMCU-row counters for a new row */
  75:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** {
  27              		.loc 1 75 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32              	.LVL0:
  76:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****   my_coef_ptr coef = (my_coef_ptr) cinfo->coef;
  33              		.loc 1 76 0
  34 0000 D0F89031 		ldr	r3, [r0, #400]
  35              	.LVL1:
  77:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** 
  78:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****   /* In an interleaved scan, an MCU row is the same as an iMCU row.
  79:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****    * In a noninterleaved scan, an iMCU row has v_samp_factor MCU rows.
  80:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****    * But at the bottom of the image, process only what's left.
ARM GAS  /tmp/cc7UMkoE.s 			page 3


  81:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****    */
  82:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****   if (cinfo->comps_in_scan > 1) {
  36              		.loc 1 82 0
  37 0004 D0F82021 		ldr	r2, [r0, #288]
  38 0008 012A     		cmp	r2, #1
  39 000a 05DD     		ble	.L2
  83:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****     coef->MCU_rows_per_iMCU_row = 1;
  40              		.loc 1 83 0
  41 000c 0122     		movs	r2, #1
  42 000e 5A61     		str	r2, [r3, #20]
  43              	.L3:
  84:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****   } else {
  85:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****     if (coef->iMCU_row_num < (cinfo->total_iMCU_rows-1))
  86:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****       coef->MCU_rows_per_iMCU_row = cinfo->cur_comp_info[0]->v_samp_factor;
  87:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****     else
  88:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****       coef->MCU_rows_per_iMCU_row = cinfo->cur_comp_info[0]->last_row_height;
  89:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****   }
  90:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** 
  91:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****   coef->mcu_ctr = 0;
  44              		.loc 1 91 0
  45 0010 0022     		movs	r2, #0
  46 0012 DA60     		str	r2, [r3, #12]
  92:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****   coef->MCU_vert_offset = 0;
  47              		.loc 1 92 0
  48 0014 1A61     		str	r2, [r3, #16]
  93:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** }
  49              		.loc 1 93 0
  50 0016 7047     		bx	lr
  51              	.L2:
  85:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****       coef->MCU_rows_per_iMCU_row = cinfo->cur_comp_info[0]->v_samp_factor;
  52              		.loc 1 85 0
  53 0018 9968     		ldr	r1, [r3, #8]
  54 001a D0F81C21 		ldr	r2, [r0, #284]
  55 001e 013A     		subs	r2, r2, #1
  56 0020 9142     		cmp	r1, r2
  57 0022 04D3     		bcc	.L5
  88:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****   }
  58              		.loc 1 88 0
  59 0024 D0F82421 		ldr	r2, [r0, #292]
  60 0028 D26C     		ldr	r2, [r2, #76]
  61 002a 5A61     		str	r2, [r3, #20]
  62 002c F0E7     		b	.L3
  63              	.L5:
  86:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****     else
  64              		.loc 1 86 0
  65 002e D0F82421 		ldr	r2, [r0, #292]
  66 0032 D268     		ldr	r2, [r2, #12]
  67 0034 5A61     		str	r2, [r3, #20]
  68 0036 EBE7     		b	.L3
  69              		.cfi_endproc
  70              	.LFE3:
  72              		.section	.text.start_pass_coef,"ax",%progbits
  73              		.align	1
  74              		.syntax unified
  75              		.thumb
  76              		.thumb_func
  77              		.fpu fpv5-sp-d16
ARM GAS  /tmp/cc7UMkoE.s 			page 4


  79              	start_pass_coef:
  80              	.LFB4:
  94:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** 
  95:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** 
  96:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** /*
  97:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****  * Initialize for a processing pass.
  98:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****  */
  99:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** 
 100:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** METHODDEF(void)
 101:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** start_pass_coef (j_compress_ptr cinfo, J_BUF_MODE pass_mode)
 102:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** {
  81              		.loc 1 102 0
  82              		.cfi_startproc
  83              		@ args = 0, pretend = 0, frame = 0
  84              		@ frame_needed = 0, uses_anonymous_args = 0
  85              	.LVL2:
  86 0000 70B5     		push	{r4, r5, r6, lr}
  87              	.LCFI0:
  88              		.cfi_def_cfa_offset 16
  89              		.cfi_offset 4, -16
  90              		.cfi_offset 5, -12
  91              		.cfi_offset 6, -8
  92              		.cfi_offset 14, -4
  93 0002 0446     		mov	r4, r0
  94 0004 0E46     		mov	r6, r1
 103:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****   my_coef_ptr coef = (my_coef_ptr) cinfo->coef;
  95              		.loc 1 103 0
  96 0006 D0F89051 		ldr	r5, [r0, #400]
  97              	.LVL3:
 104:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** 
 105:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****   coef->iMCU_row_num = 0;
  98              		.loc 1 105 0
  99 000a 0023     		movs	r3, #0
 100 000c AB60     		str	r3, [r5, #8]
 106:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****   start_iMCU_row(cinfo);
 101              		.loc 1 106 0
 102 000e FFF7FEFF 		bl	start_iMCU_row
 103              	.LVL4:
 107:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** 
 108:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****   switch (pass_mode) {
 104              		.loc 1 108 0
 105 0012 022E     		cmp	r6, #2
 106 0014 22D0     		beq	.L8
 107 0016 032E     		cmp	r6, #3
 108 0018 14D0     		beq	.L9
 109 001a 3EB1     		cbz	r6, .L17
 109:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****   case JBUF_PASS_THRU:
 110:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****     if (coef->whole_image[0] != NULL)
 111:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****       ERREXIT(cinfo, JERR_BAD_BUFFER_MODE);
 112:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****     coef->pub.compress_data = compress_data;
 113:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****     break;
 114:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** #ifdef FULL_COEF_BUFFER_SUPPORTED
 115:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****   case JBUF_SAVE_AND_PASS:
 116:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****     if (coef->whole_image[0] == NULL)
 117:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****       ERREXIT(cinfo, JERR_BAD_BUFFER_MODE);
 118:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****     coef->pub.compress_data = compress_first_pass;
 119:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****     break;
ARM GAS  /tmp/cc7UMkoE.s 			page 5


 120:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****   case JBUF_CRANK_DEST:
 121:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****     if (coef->whole_image[0] == NULL)
 122:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****       ERREXIT(cinfo, JERR_BAD_BUFFER_MODE);
 123:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****     coef->pub.compress_data = compress_output;
 124:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****     break;
 125:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** #endif
 126:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****   default:
 127:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****     ERREXIT(cinfo, JERR_BAD_BUFFER_MODE);
 110              		.loc 1 127 0
 111 001c 2368     		ldr	r3, [r4]
 112 001e 0322     		movs	r2, #3
 113 0020 5A61     		str	r2, [r3, #20]
 114 0022 2368     		ldr	r3, [r4]
 115 0024 1B68     		ldr	r3, [r3]
 116 0026 2046     		mov	r0, r4
 117 0028 9847     		blx	r3
 118              	.LVL5:
 128:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****     break;
 129:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****   }
 130:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** }
 119              		.loc 1 130 0
 120 002a 0AE0     		b	.L6
 121              	.L17:
 110:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****       ERREXIT(cinfo, JERR_BAD_BUFFER_MODE);
 122              		.loc 1 110 0
 123 002c 2B6C     		ldr	r3, [r5, #64]
 124 002e 33B1     		cbz	r3, .L11
 111:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****     coef->pub.compress_data = compress_data;
 125              		.loc 1 111 0
 126 0030 2368     		ldr	r3, [r4]
 127 0032 0322     		movs	r2, #3
 128 0034 5A61     		str	r2, [r3, #20]
 129 0036 2368     		ldr	r3, [r4]
 130 0038 1B68     		ldr	r3, [r3]
 131 003a 2046     		mov	r0, r4
 132 003c 9847     		blx	r3
 133              	.LVL6:
 134              	.L11:
 112:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****     break;
 135              		.loc 1 112 0
 136 003e 0D4B     		ldr	r3, .L18
 137 0040 6B60     		str	r3, [r5, #4]
 138              	.L6:
 139              		.loc 1 130 0
 140 0042 70BD     		pop	{r4, r5, r6, pc}
 141              	.LVL7:
 142              	.L9:
 116:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****       ERREXIT(cinfo, JERR_BAD_BUFFER_MODE);
 143              		.loc 1 116 0
 144 0044 2B6C     		ldr	r3, [r5, #64]
 145 0046 33B9     		cbnz	r3, .L13
 117:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****     coef->pub.compress_data = compress_first_pass;
 146              		.loc 1 117 0
 147 0048 2368     		ldr	r3, [r4]
 148 004a 0322     		movs	r2, #3
 149 004c 5A61     		str	r2, [r3, #20]
 150 004e 2368     		ldr	r3, [r4]
ARM GAS  /tmp/cc7UMkoE.s 			page 6


 151 0050 1B68     		ldr	r3, [r3]
 152 0052 2046     		mov	r0, r4
 153 0054 9847     		blx	r3
 154              	.LVL8:
 155              	.L13:
 118:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****     break;
 156              		.loc 1 118 0
 157 0056 084B     		ldr	r3, .L18+4
 158 0058 6B60     		str	r3, [r5, #4]
 119:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****   case JBUF_CRANK_DEST:
 159              		.loc 1 119 0
 160 005a F2E7     		b	.L6
 161              	.L8:
 121:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****       ERREXIT(cinfo, JERR_BAD_BUFFER_MODE);
 162              		.loc 1 121 0
 163 005c 2B6C     		ldr	r3, [r5, #64]
 164 005e 33B9     		cbnz	r3, .L14
 122:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****     coef->pub.compress_data = compress_output;
 165              		.loc 1 122 0
 166 0060 2368     		ldr	r3, [r4]
 167 0062 0322     		movs	r2, #3
 168 0064 5A61     		str	r2, [r3, #20]
 169 0066 2368     		ldr	r3, [r4]
 170 0068 1B68     		ldr	r3, [r3]
 171 006a 2046     		mov	r0, r4
 172 006c 9847     		blx	r3
 173              	.LVL9:
 174              	.L14:
 123:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****     break;
 175              		.loc 1 123 0
 176 006e 034B     		ldr	r3, .L18+8
 177 0070 6B60     		str	r3, [r5, #4]
 124:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** #endif
 178              		.loc 1 124 0
 179 0072 E6E7     		b	.L6
 180              	.L19:
 181              		.align	2
 182              	.L18:
 183 0074 00000000 		.word	compress_data
 184 0078 00000000 		.word	compress_first_pass
 185 007c 00000000 		.word	compress_output
 186              		.cfi_endproc
 187              	.LFE4:
 189              		.section	.text.compress_output,"ax",%progbits
 190              		.align	1
 191              		.syntax unified
 192              		.thumb
 193              		.thumb_func
 194              		.fpu fpv5-sp-d16
 196              	compress_output:
 197              	.LFB7:
 131:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** 
 132:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** 
 133:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** /*
 134:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****  * Process some data in the single-pass case.
 135:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****  * We process the equivalent of one fully interleaved MCU row ("iMCU" row)
 136:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****  * per call, ie, v_samp_factor block rows for each component in the image.
ARM GAS  /tmp/cc7UMkoE.s 			page 7


 137:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****  * Returns TRUE if the iMCU row is completed, FALSE if suspended.
 138:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****  *
 139:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****  * NB: input_buf contains a plane for each component in image,
 140:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****  * which we index according to the component's SOF position.
 141:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****  */
 142:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** 
 143:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** METHODDEF(boolean)
 144:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** compress_data (j_compress_ptr cinfo, JSAMPIMAGE input_buf)
 145:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** {
 146:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****   my_coef_ptr coef = (my_coef_ptr) cinfo->coef;
 147:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****   JDIMENSION MCU_col_num;	/* index of current MCU within row */
 148:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****   JDIMENSION last_MCU_col = cinfo->MCUs_per_row - 1;
 149:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****   JDIMENSION last_iMCU_row = cinfo->total_iMCU_rows - 1;
 150:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****   int blkn, bi, ci, yindex, yoffset, blockcnt;
 151:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****   JDIMENSION ypos, xpos;
 152:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****   jpeg_component_info *compptr;
 153:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****   forward_DCT_ptr forward_DCT;
 154:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** 
 155:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****   /* Loop to write as much as one whole iMCU row */
 156:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****   for (yoffset = coef->MCU_vert_offset; yoffset < coef->MCU_rows_per_iMCU_row;
 157:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****        yoffset++) {
 158:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****     for (MCU_col_num = coef->mcu_ctr; MCU_col_num <= last_MCU_col;
 159:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** 	 MCU_col_num++) {
 160:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****       /* Determine where data comes from in input_buf and do the DCT thing.
 161:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****        * Each call on forward_DCT processes a horizontal row of DCT blocks
 162:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****        * as wide as an MCU; we rely on having allocated the MCU_buffer[] blocks
 163:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****        * sequentially.  Dummy blocks at the right or bottom edge are filled in
 164:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****        * specially.  The data in them does not matter for image reconstruction,
 165:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****        * so we fill them with values that will encode to the smallest amount of
 166:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****        * data, viz: all zeroes in the AC entries, DC entries equal to previous
 167:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****        * block's DC value.  (Thanks to Thomas Kinsman for this idea.)
 168:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****        */
 169:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****       blkn = 0;
 170:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****       for (ci = 0; ci < cinfo->comps_in_scan; ci++) {
 171:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** 	compptr = cinfo->cur_comp_info[ci];
 172:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** 	forward_DCT = cinfo->fdct->forward_DCT[compptr->component_index];
 173:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** 	blockcnt = (MCU_col_num < last_MCU_col) ? compptr->MCU_width
 174:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** 						: compptr->last_col_width;
 175:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** 	xpos = MCU_col_num * compptr->MCU_sample_width;
 176:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** 	ypos = yoffset * compptr->DCT_v_scaled_size;
 177:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** 	/* ypos == (yoffset+yindex) * DCTSIZE */
 178:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** 	for (yindex = 0; yindex < compptr->MCU_height; yindex++) {
 179:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** 	  if (coef->iMCU_row_num < last_iMCU_row ||
 180:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** 	      yoffset+yindex < compptr->last_row_height) {
 181:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** 	    (*forward_DCT) (cinfo, compptr,
 182:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** 			    input_buf[compptr->component_index],
 183:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** 			    coef->MCU_buffer[blkn],
 184:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** 			    ypos, xpos, (JDIMENSION) blockcnt);
 185:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** 	    if (blockcnt < compptr->MCU_width) {
 186:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** 	      /* Create some dummy blocks at the right edge of the image. */
 187:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** 	      FMEMZERO((void FAR *) coef->MCU_buffer[blkn + blockcnt],
 188:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** 		       (compptr->MCU_width - blockcnt) * SIZEOF(JBLOCK));
 189:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** 	      for (bi = blockcnt; bi < compptr->MCU_width; bi++) {
 190:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** 		coef->MCU_buffer[blkn+bi][0][0] = coef->MCU_buffer[blkn+bi-1][0][0];
 191:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** 	      }
 192:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** 	    }
 193:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** 	  } else {
ARM GAS  /tmp/cc7UMkoE.s 			page 8


 194:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** 	    /* Create a row of dummy blocks at the bottom of the image. */
 195:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** 	    FMEMZERO((void FAR *) coef->MCU_buffer[blkn],
 196:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** 		     compptr->MCU_width * SIZEOF(JBLOCK));
 197:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** 	    for (bi = 0; bi < compptr->MCU_width; bi++) {
 198:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** 	      coef->MCU_buffer[blkn+bi][0][0] = coef->MCU_buffer[blkn-1][0][0];
 199:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** 	    }
 200:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** 	  }
 201:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** 	  blkn += compptr->MCU_width;
 202:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** 	  ypos += compptr->DCT_v_scaled_size;
 203:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** 	}
 204:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****       }
 205:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****       /* Try to write the MCU.  In event of a suspension failure, we will
 206:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****        * re-DCT the MCU on restart (a bit inefficient, could be fixed...)
 207:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****        */
 208:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****       if (! (*cinfo->entropy->encode_mcu) (cinfo, coef->MCU_buffer)) {
 209:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** 	/* Suspension forced; update state counters and exit */
 210:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** 	coef->MCU_vert_offset = yoffset;
 211:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** 	coef->mcu_ctr = MCU_col_num;
 212:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** 	return FALSE;
 213:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****       }
 214:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****     }
 215:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****     /* Completed an MCU row, but perhaps not an iMCU row */
 216:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****     coef->mcu_ctr = 0;
 217:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****   }
 218:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****   /* Completed the iMCU row, advance counters for next one */
 219:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****   coef->iMCU_row_num++;
 220:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****   start_iMCU_row(cinfo);
 221:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****   return TRUE;
 222:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** }
 223:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** 
 224:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** 
 225:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** #ifdef FULL_COEF_BUFFER_SUPPORTED
 226:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** 
 227:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** /*
 228:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****  * Process some data in the first pass of a multi-pass case.
 229:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****  * We process the equivalent of one fully interleaved MCU row ("iMCU" row)
 230:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****  * per call, ie, v_samp_factor block rows for each component in the image.
 231:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****  * This amount of data is read from the source buffer, DCT'd and quantized,
 232:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****  * and saved into the virtual arrays.  We also generate suitable dummy blocks
 233:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****  * as needed at the right and lower edges.  (The dummy blocks are constructed
 234:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****  * in the virtual arrays, which have been padded appropriately.)  This makes
 235:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****  * it possible for subsequent passes not to worry about real vs. dummy blocks.
 236:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****  *
 237:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****  * We must also emit the data to the entropy encoder.  This is conveniently
 238:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****  * done by calling compress_output() after we've loaded the current strip
 239:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****  * of the virtual arrays.
 240:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****  *
 241:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****  * NB: input_buf contains a plane for each component in image.  All
 242:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****  * components are DCT'd and loaded into the virtual arrays in this pass.
 243:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****  * However, it may be that only a subset of the components are emitted to
 244:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****  * the entropy encoder during this first pass; be careful about looking
 245:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****  * at the scan-dependent variables (MCU dimensions, etc).
 246:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****  */
 247:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** 
 248:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** METHODDEF(boolean)
 249:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** compress_first_pass (j_compress_ptr cinfo, JSAMPIMAGE input_buf)
 250:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** {
ARM GAS  /tmp/cc7UMkoE.s 			page 9


 251:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****   my_coef_ptr coef = (my_coef_ptr) cinfo->coef;
 252:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****   JDIMENSION last_iMCU_row = cinfo->total_iMCU_rows - 1;
 253:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****   JDIMENSION blocks_across, MCUs_across, MCUindex;
 254:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****   int bi, ci, h_samp_factor, block_row, block_rows, ndummy;
 255:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****   JCOEF lastDC;
 256:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****   jpeg_component_info *compptr;
 257:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****   JBLOCKARRAY buffer;
 258:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****   JBLOCKROW thisblockrow, lastblockrow;
 259:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****   forward_DCT_ptr forward_DCT;
 260:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** 
 261:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****   for (ci = 0, compptr = cinfo->comp_info; ci < cinfo->num_components;
 262:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****        ci++, compptr++) {
 263:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****     /* Align the virtual buffer for this component. */
 264:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****     buffer = (*cinfo->mem->access_virt_barray)
 265:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****       ((j_common_ptr) cinfo, coef->whole_image[ci],
 266:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****        coef->iMCU_row_num * compptr->v_samp_factor,
 267:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****        (JDIMENSION) compptr->v_samp_factor, TRUE);
 268:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****     /* Count non-dummy DCT block rows in this iMCU row. */
 269:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****     if (coef->iMCU_row_num < last_iMCU_row)
 270:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****       block_rows = compptr->v_samp_factor;
 271:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****     else {
 272:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****       /* NB: can't use last_row_height here, since may not be set! */
 273:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****       block_rows = (int) (compptr->height_in_blocks % compptr->v_samp_factor);
 274:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****       if (block_rows == 0) block_rows = compptr->v_samp_factor;
 275:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****     }
 276:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****     blocks_across = compptr->width_in_blocks;
 277:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****     h_samp_factor = compptr->h_samp_factor;
 278:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****     /* Count number of dummy blocks to be added at the right margin. */
 279:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****     ndummy = (int) (blocks_across % h_samp_factor);
 280:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****     if (ndummy > 0)
 281:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****       ndummy = h_samp_factor - ndummy;
 282:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****     forward_DCT = cinfo->fdct->forward_DCT[ci];
 283:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****     /* Perform DCT for all non-dummy blocks in this iMCU row.  Each call
 284:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****      * on forward_DCT processes a complete horizontal row of DCT blocks.
 285:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****      */
 286:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****     for (block_row = 0; block_row < block_rows; block_row++) {
 287:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****       thisblockrow = buffer[block_row];
 288:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****       (*forward_DCT) (cinfo, compptr, input_buf[ci], thisblockrow,
 289:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** 		      (JDIMENSION) (block_row * compptr->DCT_v_scaled_size),
 290:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** 		      (JDIMENSION) 0, blocks_across);
 291:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****       if (ndummy > 0) {
 292:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** 	/* Create dummy blocks at the right edge of the image. */
 293:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** 	thisblockrow += blocks_across; /* => first dummy block */
 294:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** 	FMEMZERO((void FAR *) thisblockrow, ndummy * SIZEOF(JBLOCK));
 295:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** 	lastDC = thisblockrow[-1][0];
 296:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** 	for (bi = 0; bi < ndummy; bi++) {
 297:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** 	  thisblockrow[bi][0] = lastDC;
 298:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** 	}
 299:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****       }
 300:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****     }
 301:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****     /* If at end of image, create dummy block rows as needed.
 302:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****      * The tricky part here is that within each MCU, we want the DC values
 303:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****      * of the dummy blocks to match the last real block's DC value.
 304:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****      * This squeezes a few more bytes out of the resulting file...
 305:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****      */
 306:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****     if (coef->iMCU_row_num == last_iMCU_row) {
 307:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****       blocks_across += ndummy;	/* include lower right corner */
ARM GAS  /tmp/cc7UMkoE.s 			page 10


 308:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****       MCUs_across = blocks_across / h_samp_factor;
 309:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****       for (block_row = block_rows; block_row < compptr->v_samp_factor;
 310:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** 	   block_row++) {
 311:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** 	thisblockrow = buffer[block_row];
 312:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** 	lastblockrow = buffer[block_row-1];
 313:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** 	FMEMZERO((void FAR *) thisblockrow,
 314:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** 		 (size_t) (blocks_across * SIZEOF(JBLOCK)));
 315:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** 	for (MCUindex = 0; MCUindex < MCUs_across; MCUindex++) {
 316:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** 	  lastDC = lastblockrow[h_samp_factor-1][0];
 317:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** 	  for (bi = 0; bi < h_samp_factor; bi++) {
 318:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** 	    thisblockrow[bi][0] = lastDC;
 319:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** 	  }
 320:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** 	  thisblockrow += h_samp_factor; /* advance to next MCU in row */
 321:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** 	  lastblockrow += h_samp_factor;
 322:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** 	}
 323:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****       }
 324:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****     }
 325:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****   }
 326:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****   /* NB: compress_output will increment iMCU_row_num if successful.
 327:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****    * A suspension return will result in redoing all the work above next time.
 328:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****    */
 329:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** 
 330:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****   /* Emit data to the entropy encoder, sharing code with subsequent passes */
 331:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****   return compress_output(cinfo, input_buf);
 332:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** }
 333:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** 
 334:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** 
 335:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** /*
 336:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****  * Process some data in subsequent passes of a multi-pass case.
 337:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****  * We process the equivalent of one fully interleaved MCU row ("iMCU" row)
 338:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****  * per call, ie, v_samp_factor block rows for each component in the scan.
 339:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****  * The data is obtained from the virtual arrays and fed to the entropy coder.
 340:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****  * Returns TRUE if the iMCU row is completed, FALSE if suspended.
 341:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****  *
 342:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****  * NB: input_buf is ignored; it is likely to be a NULL pointer.
 343:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****  */
 344:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** 
 345:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** METHODDEF(boolean)
 346:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** compress_output (j_compress_ptr cinfo, JSAMPIMAGE input_buf)
 347:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** {
 198              		.loc 1 347 0
 199              		.cfi_startproc
 200              		@ args = 0, pretend = 0, frame = 16
 201              		@ frame_needed = 0, uses_anonymous_args = 0
 202              	.LVL10:
 203 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 204              	.LCFI1:
 205              		.cfi_def_cfa_offset 28
 206              		.cfi_offset 4, -28
 207              		.cfi_offset 5, -24
 208              		.cfi_offset 6, -20
 209              		.cfi_offset 7, -16
 210              		.cfi_offset 8, -12
 211              		.cfi_offset 9, -8
 212              		.cfi_offset 14, -4
 213 0004 87B0     		sub	sp, sp, #28
 214              	.LCFI2:
ARM GAS  /tmp/cc7UMkoE.s 			page 11


 215              		.cfi_def_cfa_offset 56
 216 0006 0646     		mov	r6, r0
 348:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****   my_coef_ptr coef = (my_coef_ptr) cinfo->coef;
 217              		.loc 1 348 0
 218 0008 D0F89041 		ldr	r4, [r0, #400]
 219              	.LVL11:
 349:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****   JDIMENSION MCU_col_num;	/* index of current MCU within row */
 350:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****   int blkn, ci, xindex, yindex, yoffset;
 351:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****   JDIMENSION start_col;
 352:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****   JBLOCKARRAY buffer[MAX_COMPS_IN_SCAN];
 353:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****   JBLOCKROW buffer_ptr;
 354:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****   jpeg_component_info *compptr;
 355:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** 
 356:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****   /* Align the virtual buffers for the components used in this scan.
 357:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****    * NB: during first pass, this is safe only because the buffers will
 358:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****    * already be aligned properly, so jmemmgr.c won't need to do any I/O.
 359:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****    */
 360:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****   for (ci = 0; ci < cinfo->comps_in_scan; ci++) {
 220              		.loc 1 360 0
 221 000c 0025     		movs	r5, #0
 222 000e 19E0     		b	.L21
 223              	.LVL12:
 224              	.L22:
 361:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****     compptr = cinfo->cur_comp_info[ci];
 225              		.loc 1 361 0 discriminator 3
 226 0010 05F14803 		add	r3, r5, #72
 227 0014 06EB8303 		add	r3, r6, r3, lsl #2
 228 0018 5968     		ldr	r1, [r3, #4]
 229              	.LVL13:
 362:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****     buffer[ci] = (*cinfo->mem->access_virt_barray)
 230              		.loc 1 362 0 discriminator 3
 231 001a 7768     		ldr	r7, [r6, #4]
 363:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****       ((j_common_ptr) cinfo, coef->whole_image[compptr->component_index],
 232              		.loc 1 363 0 discriminator 3
 233 001c 4B68     		ldr	r3, [r1, #4]
 364:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****        coef->iMCU_row_num * compptr->v_samp_factor,
 234              		.loc 1 364 0 discriminator 3
 235 001e A068     		ldr	r0, [r4, #8]
 236 0020 CA68     		ldr	r2, [r1, #12]
 362:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****     buffer[ci] = (*cinfo->mem->access_virt_barray)
 237              		.loc 1 362 0 discriminator 3
 238 0022 1033     		adds	r3, r3, #16
 239 0024 54F82310 		ldr	r1, [r4, r3, lsl #2]
 240              	.LVL14:
 241 0028 0023     		movs	r3, #0
 242 002a 0093     		str	r3, [sp]
 243              	.LVL15:
 244 002c 3F6A     		ldr	r7, [r7, #32]
 245 002e 1346     		mov	r3, r2
 246 0030 02FB00F2 		mul	r2, r2, r0
 247 0034 3046     		mov	r0, r6
 248 0036 B847     		blx	r7
 249              	.LVL16:
 250 0038 06AB     		add	r3, sp, #24
 251 003a 03EB8503 		add	r3, r3, r5, lsl #2
 252 003e 43F8100C 		str	r0, [r3, #-16]
 360:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****     compptr = cinfo->cur_comp_info[ci];
ARM GAS  /tmp/cc7UMkoE.s 			page 12


 253              		.loc 1 360 0 discriminator 3
 254 0042 0135     		adds	r5, r5, #1
 255              	.LVL17:
 256              	.L21:
 360:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****     compptr = cinfo->cur_comp_info[ci];
 257              		.loc 1 360 0 is_stmt 0 discriminator 1
 258 0044 D6F82031 		ldr	r3, [r6, #288]
 259 0048 AB42     		cmp	r3, r5
 260 004a E1DC     		bgt	.L22
 365:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****        (JDIMENSION) compptr->v_samp_factor, FALSE);
 366:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****   }
 367:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** 
 368:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****   /* Loop to process one whole iMCU row */
 369:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****   for (yoffset = coef->MCU_vert_offset; yoffset < coef->MCU_rows_per_iMCU_row;
 261              		.loc 1 369 0 is_stmt 1
 262 004c 2569     		ldr	r5, [r4, #16]
 263              	.LVL18:
 264              	.L23:
 265              		.loc 1 369 0 is_stmt 0 discriminator 1
 266 004e 6369     		ldr	r3, [r4, #20]
 267 0050 AB42     		cmp	r3, r5
 268 0052 4DDD     		ble	.L36
 370:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****        yoffset++) {
 371:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****     for (MCU_col_num = coef->mcu_ctr; MCU_col_num < cinfo->MCUs_per_row;
 269              		.loc 1 371 0 is_stmt 1
 270 0054 E768     		ldr	r7, [r4, #12]
 271              	.LVL19:
 272 0056 39E0     		b	.L24
 273              	.LVL20:
 274              	.L27:
 372:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** 	 MCU_col_num++) {
 373:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****       /* Construct list of pointers to DCT blocks belonging to this MCU */
 374:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****       blkn = 0;			/* index of current DCT block within MCU */
 375:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****       for (ci = 0; ci < cinfo->comps_in_scan; ci++) {
 376:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** 	compptr = cinfo->cur_comp_info[ci];
 377:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** 	start_col = MCU_col_num * compptr->MCU_width;
 378:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** 	for (yindex = 0; yindex < compptr->MCU_height; yindex++) {
 379:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** 	  buffer_ptr = buffer[ci][yindex+yoffset] + start_col;
 380:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** 	  for (xindex = 0; xindex < compptr->MCU_width; xindex++) {
 381:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** 	    coef->MCU_buffer[blkn++] = buffer_ptr++;
 275              		.loc 1 381 0 discriminator 3
 276 0058 881D     		adds	r0, r1, #6
 277 005a 44F82030 		str	r3, [r4, r0, lsl #2]
 380:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** 	    coef->MCU_buffer[blkn++] = buffer_ptr++;
 278              		.loc 1 380 0 discriminator 3
 279 005e 0132     		adds	r2, r2, #1
 280              	.LVL21:
 281              		.loc 1 381 0 discriminator 3
 282 0060 8033     		adds	r3, r3, #128
 283              	.LVL22:
 284 0062 0131     		adds	r1, r1, #1
 285              	.LVL23:
 286              	.L26:
 380:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** 	    coef->MCU_buffer[blkn++] = buffer_ptr++;
 287              		.loc 1 380 0 discriminator 1
 288 0064 DCF83800 		ldr	r0, [ip, #56]
 289 0068 9042     		cmp	r0, r2
ARM GAS  /tmp/cc7UMkoE.s 			page 13


 290 006a F5DC     		bgt	.L27
 378:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** 	  buffer_ptr = buffer[ci][yindex+yoffset] + start_col;
 291              		.loc 1 378 0 discriminator 2
 292 006c 0EF1010E 		add	lr, lr, #1
 293              	.LVL24:
 294              	.L25:
 378:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** 	  buffer_ptr = buffer[ci][yindex+yoffset] + start_col;
 295              		.loc 1 378 0 is_stmt 0 discriminator 1
 296 0070 DCF83C30 		ldr	r3, [ip, #60]
 297 0074 7345     		cmp	r3, lr
 298 0076 0CDD     		ble	.L37
 379:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** 	  for (xindex = 0; xindex < compptr->MCU_width; xindex++) {
 299              		.loc 1 379 0 is_stmt 1
 300 0078 06AB     		add	r3, sp, #24
 301 007a 03EB8803 		add	r3, r3, r8, lsl #2
 302 007e 53F8103C 		ldr	r3, [r3, #-16]
 303 0082 0EEB0502 		add	r2, lr, r5
 304 0086 53F82230 		ldr	r3, [r3, r2, lsl #2]
 305 008a 03EBC913 		add	r3, r3, r9, lsl #7
 306              	.LVL25:
 380:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** 	    coef->MCU_buffer[blkn++] = buffer_ptr++;
 307              		.loc 1 380 0
 308 008e 0022     		movs	r2, #0
 309 0090 E8E7     		b	.L26
 310              	.LVL26:
 311              	.L37:
 375:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** 	compptr = cinfo->cur_comp_info[ci];
 312              		.loc 1 375 0 discriminator 2
 313 0092 08F10108 		add	r8, r8, #1
 314              	.LVL27:
 315              	.L32:
 375:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** 	compptr = cinfo->cur_comp_info[ci];
 316              		.loc 1 375 0 is_stmt 0 discriminator 1
 317 0096 D6F82031 		ldr	r3, [r6, #288]
 318 009a 4345     		cmp	r3, r8
 319 009c 0CDD     		ble	.L38
 376:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** 	start_col = MCU_col_num * compptr->MCU_width;
 320              		.loc 1 376 0 is_stmt 1
 321 009e 08F14803 		add	r3, r8, #72
 322 00a2 06EB8303 		add	r3, r6, r3, lsl #2
 323 00a6 D3F804C0 		ldr	ip, [r3, #4]
 324              	.LVL28:
 377:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** 	for (yindex = 0; yindex < compptr->MCU_height; yindex++) {
 325              		.loc 1 377 0
 326 00aa DCF83830 		ldr	r3, [ip, #56]
 327 00ae 07FB03F9 		mul	r9, r7, r3
 328              	.LVL29:
 378:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** 	  buffer_ptr = buffer[ci][yindex+yoffset] + start_col;
 329              		.loc 1 378 0
 330 00b2 4FF0000E 		mov	lr, #0
 331 00b6 DBE7     		b	.L25
 332              	.LVL30:
 333              	.L38:
 382:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** 	  }
 383:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** 	}
 384:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****       }
 385:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****       /* Try to write the MCU. */
ARM GAS  /tmp/cc7UMkoE.s 			page 14


 386:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****       if (! (*cinfo->entropy->encode_mcu) (cinfo, coef->MCU_buffer)) {
 334              		.loc 1 386 0
 335 00b8 D6F8A431 		ldr	r3, [r6, #420]
 336 00bc 5B68     		ldr	r3, [r3, #4]
 337 00be 04F11801 		add	r1, r4, #24
 338              	.LVL31:
 339 00c2 3046     		mov	r0, r6
 340 00c4 9847     		blx	r3
 341              	.LVL32:
 342 00c6 0346     		mov	r3, r0
 343 00c8 40B1     		cbz	r0, .L39
 372:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****       /* Construct list of pointers to DCT blocks belonging to this MCU */
 344              		.loc 1 372 0
 345 00ca 0137     		adds	r7, r7, #1
 346              	.LVL33:
 347              	.L24:
 371:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** 	 MCU_col_num++) {
 348              		.loc 1 371 0 discriminator 1
 349 00cc D6F83431 		ldr	r3, [r6, #308]
 350 00d0 BB42     		cmp	r3, r7
 351 00d2 09D9     		bls	.L40
 375:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** 	compptr = cinfo->cur_comp_info[ci];
 352              		.loc 1 375 0
 353 00d4 4FF00008 		mov	r8, #0
 374:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****       for (ci = 0; ci < cinfo->comps_in_scan; ci++) {
 354              		.loc 1 374 0
 355 00d8 4146     		mov	r1, r8
 356 00da DCE7     		b	.L32
 357              	.LVL34:
 358              	.L39:
 387:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** 	/* Suspension forced; update state counters and exit */
 388:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** 	coef->MCU_vert_offset = yoffset;
 359              		.loc 1 388 0
 360 00dc 2561     		str	r5, [r4, #16]
 389:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** 	coef->mcu_ctr = MCU_col_num;
 361              		.loc 1 389 0
 362 00de E760     		str	r7, [r4, #12]
 363              	.LVL35:
 364              	.L20:
 390:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** 	return FALSE;
 391:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****       }
 392:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****     }
 393:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****     /* Completed an MCU row, but perhaps not an iMCU row */
 394:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****     coef->mcu_ctr = 0;
 395:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****   }
 396:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****   /* Completed the iMCU row, advance counters for next one */
 397:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****   coef->iMCU_row_num++;
 398:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****   start_iMCU_row(cinfo);
 399:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****   return TRUE;
 400:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** }
 365              		.loc 1 400 0
 366 00e0 1846     		mov	r0, r3
 367 00e2 07B0     		add	sp, sp, #28
 368              	.LCFI3:
 369              		.cfi_remember_state
 370              		.cfi_def_cfa_offset 28
 371              		@ sp needed
ARM GAS  /tmp/cc7UMkoE.s 			page 15


 372 00e4 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 373              	.LVL36:
 374              	.L40:
 375              	.LCFI4:
 376              		.cfi_restore_state
 394:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****   }
 377              		.loc 1 394 0
 378 00e8 0023     		movs	r3, #0
 379 00ea E360     		str	r3, [r4, #12]
 370:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****     for (MCU_col_num = coef->mcu_ctr; MCU_col_num < cinfo->MCUs_per_row;
 380              		.loc 1 370 0
 381 00ec 0135     		adds	r5, r5, #1
 382              	.LVL37:
 383 00ee AEE7     		b	.L23
 384              	.LVL38:
 385              	.L36:
 397:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****   start_iMCU_row(cinfo);
 386              		.loc 1 397 0
 387 00f0 A368     		ldr	r3, [r4, #8]
 388 00f2 0133     		adds	r3, r3, #1
 389 00f4 A360     		str	r3, [r4, #8]
 398:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****   return TRUE;
 390              		.loc 1 398 0
 391 00f6 3046     		mov	r0, r6
 392 00f8 FFF7FEFF 		bl	start_iMCU_row
 393              	.LVL39:
 399:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** }
 394              		.loc 1 399 0
 395 00fc 0123     		movs	r3, #1
 396 00fe EFE7     		b	.L20
 397              		.cfi_endproc
 398              	.LFE7:
 400              		.section	.text.compress_first_pass,"ax",%progbits
 401              		.align	1
 402              		.syntax unified
 403              		.thumb
 404              		.thumb_func
 405              		.fpu fpv5-sp-d16
 407              	compress_first_pass:
 408              	.LFB6:
 250:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****   my_coef_ptr coef = (my_coef_ptr) cinfo->coef;
 409              		.loc 1 250 0
 410              		.cfi_startproc
 411              		@ args = 0, pretend = 0, frame = 40
 412              		@ frame_needed = 0, uses_anonymous_args = 0
 413              	.LVL40:
 414 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 415              	.LCFI5:
 416              		.cfi_def_cfa_offset 36
 417              		.cfi_offset 4, -36
 418              		.cfi_offset 5, -32
 419              		.cfi_offset 6, -28
 420              		.cfi_offset 7, -24
 421              		.cfi_offset 8, -20
 422              		.cfi_offset 9, -16
 423              		.cfi_offset 10, -12
 424              		.cfi_offset 11, -8
ARM GAS  /tmp/cc7UMkoE.s 			page 16


 425              		.cfi_offset 14, -4
 426 0004 8FB0     		sub	sp, sp, #60
 427              	.LCFI6:
 428              		.cfi_def_cfa_offset 96
 429 0006 0590     		str	r0, [sp, #20]
 430 0008 0D91     		str	r1, [sp, #52]
 251:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****   JDIMENSION last_iMCU_row = cinfo->total_iMCU_rows - 1;
 431              		.loc 1 251 0
 432 000a D0F89031 		ldr	r3, [r0, #400]
 433 000e 0993     		str	r3, [sp, #36]
 434              	.LVL41:
 252:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****   JDIMENSION blocks_across, MCUs_across, MCUindex;
 435              		.loc 1 252 0
 436 0010 D0F81C31 		ldr	r3, [r0, #284]
 437              	.LVL42:
 438 0014 013B     		subs	r3, r3, #1
 439 0016 0A93     		str	r3, [sp, #40]
 440              	.LVL43:
 261:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****        ci++, compptr++) {
 441              		.loc 1 261 0
 442 0018 D0F854A0 		ldr	r10, [r0, #84]
 443              	.LVL44:
 444 001c 4FF0000B 		mov	fp, #0
 445 0020 41E0     		b	.L42
 446              	.LVL45:
 447              	.L43:
 273:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****       if (block_rows == 0) block_rows = compptr->v_samp_factor;
 448              		.loc 1 273 0
 449 0022 DAF82020 		ldr	r2, [r10, #32]
 450 0026 DAF80C80 		ldr	r8, [r10, #12]
 451 002a B2FBF8F3 		udiv	r3, r2, r8
 452 002e 08FB1323 		mls	r3, r8, r3, r2
 453              	.LVL46:
 274:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****     }
 454              		.loc 1 274 0
 455 0032 002B     		cmp	r3, #0
 456 0034 54D0     		beq	.L44
 273:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****       if (block_rows == 0) block_rows = compptr->v_samp_factor;
 457              		.loc 1 273 0
 458 0036 9846     		mov	r8, r3
 459 0038 52E0     		b	.L44
 460              	.LVL47:
 461              	.L61:
 462 003a 0494     		str	r4, [sp, #16]
 463              	.LVL48:
 464              	.L47:
 286:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****       thisblockrow = buffer[block_row];
 465              		.loc 1 286 0 discriminator 2
 466 003c 0135     		adds	r5, r5, #1
 467              	.LVL49:
 468              	.L46:
 286:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****       thisblockrow = buffer[block_row];
 469              		.loc 1 286 0 is_stmt 0 discriminator 1
 470 003e 4545     		cmp	r5, r8
 471 0040 25DA     		bge	.L60
 287:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****       (*forward_DCT) (cinfo, compptr, input_buf[ci], thisblockrow,
 472              		.loc 1 287 0 is_stmt 1
ARM GAS  /tmp/cc7UMkoE.s 			page 17


 473 0042 069B     		ldr	r3, [sp, #24]
 474 0044 53F82560 		ldr	r6, [r3, r5, lsl #2]
 475              	.LVL50:
 289:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** 		      (JDIMENSION) 0, blocks_across);
 476              		.loc 1 289 0
 477 0048 DAF82830 		ldr	r3, [r10, #40]
 478 004c 05FB03F3 		mul	r3, r5, r3
 288:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** 		      (JDIMENSION) (block_row * compptr->DCT_v_scaled_size),
 479              		.loc 1 288 0
 480 0050 049A     		ldr	r2, [sp, #16]
 481 0052 0292     		str	r2, [sp, #8]
 482 0054 0022     		movs	r2, #0
 483 0056 0192     		str	r2, [sp, #4]
 484 0058 0093     		str	r3, [sp]
 485 005a 3346     		mov	r3, r6
 486 005c 59F82B20 		ldr	r2, [r9, fp, lsl #2]
 487 0060 5146     		mov	r1, r10
 488 0062 0598     		ldr	r0, [sp, #20]
 489 0064 079C     		ldr	r4, [sp, #28]
 490 0066 A047     		blx	r4
 491              	.LVL51:
 291:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** 	/* Create dummy blocks at the right edge of the image. */
 492              		.loc 1 291 0
 493 0068 002F     		cmp	r7, #0
 494 006a E7DD     		ble	.L47
 293:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** 	FMEMZERO((void FAR *) thisblockrow, ndummy * SIZEOF(JBLOCK));
 495              		.loc 1 293 0
 496 006c 049C     		ldr	r4, [sp, #16]
 497 006e 06EBC416 		add	r6, r6, r4, lsl #7
 498              	.LVL52:
 294:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** 	lastDC = thisblockrow[-1][0];
 499              		.loc 1 294 0
 500 0072 FA01     		lsls	r2, r7, #7
 501 0074 0021     		movs	r1, #0
 502 0076 3046     		mov	r0, r6
 503 0078 FFF7FEFF 		bl	memset
 504              	.LVL53:
 295:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** 	for (bi = 0; bi < ndummy; bi++) {
 505              		.loc 1 295 0
 506 007c 36F9801C 		ldrsh	r1, [r6, #-128]
 507              	.LVL54:
 296:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** 	  thisblockrow[bi][0] = lastDC;
 508              		.loc 1 296 0
 509 0080 0023     		movs	r3, #0
 510              	.LVL55:
 511              	.L48:
 296:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** 	  thisblockrow[bi][0] = lastDC;
 512              		.loc 1 296 0 is_stmt 0 discriminator 1
 513 0082 BB42     		cmp	r3, r7
 514 0084 D9DA     		bge	.L61
 297:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** 	}
 515              		.loc 1 297 0 is_stmt 1 discriminator 3
 516 0086 DA01     		lsls	r2, r3, #7
 517 0088 B152     		strh	r1, [r6, r2]	@ movhi
 296:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** 	  thisblockrow[bi][0] = lastDC;
 518              		.loc 1 296 0 discriminator 3
 519 008a 0133     		adds	r3, r3, #1
ARM GAS  /tmp/cc7UMkoE.s 			page 18


 520              	.LVL56:
 521 008c F9E7     		b	.L48
 522              	.LVL57:
 523              	.L60:
 524 008e DDF82C90 		ldr	r9, [sp, #44]
 525 0092 0C9C     		ldr	r4, [sp, #48]
 306:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****       blocks_across += ndummy;	/* include lower right corner */
 526              		.loc 1 306 0
 527 0094 099B     		ldr	r3, [sp, #36]
 528 0096 9B68     		ldr	r3, [r3, #8]
 529 0098 0A9A     		ldr	r2, [sp, #40]
 530 009a 9342     		cmp	r3, r2
 531 009c 3DD0     		beq	.L62
 532              	.LVL58:
 533              	.L51:
 262:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****     /* Align the virtual buffer for this component. */
 534              		.loc 1 262 0
 535 009e 0BF1010B 		add	fp, fp, #1
 536              	.LVL59:
 537 00a2 0AF1580A 		add	r10, r10, #88
 538              	.LVL60:
 539              	.L42:
 261:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****        ci++, compptr++) {
 540              		.loc 1 261 0 discriminator 1
 541 00a6 059B     		ldr	r3, [sp, #20]
 542 00a8 DB6C     		ldr	r3, [r3, #76]
 543 00aa 5B45     		cmp	r3, fp
 544 00ac 6ADD     		ble	.L63
 264:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****       ((j_common_ptr) cinfo, coef->whole_image[ci],
 545              		.loc 1 264 0
 546 00ae 059E     		ldr	r6, [sp, #20]
 547 00b0 7368     		ldr	r3, [r6, #4]
 548 00b2 1C6A     		ldr	r4, [r3, #32]
 549 00b4 0BF11003 		add	r3, fp, #16
 550 00b8 099D     		ldr	r5, [sp, #36]
 551 00ba 55F82310 		ldr	r1, [r5, r3, lsl #2]
 266:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****        (JDIMENSION) compptr->v_samp_factor, TRUE);
 552              		.loc 1 266 0
 553 00be A868     		ldr	r0, [r5, #8]
 554 00c0 DAF80C20 		ldr	r2, [r10, #12]
 264:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****       ((j_common_ptr) cinfo, coef->whole_image[ci],
 555              		.loc 1 264 0
 556 00c4 0123     		movs	r3, #1
 557 00c6 0093     		str	r3, [sp]
 558 00c8 1346     		mov	r3, r2
 559 00ca 02FB00F2 		mul	r2, r2, r0
 560 00ce 3046     		mov	r0, r6
 561 00d0 A047     		blx	r4
 562              	.LVL61:
 563 00d2 0690     		str	r0, [sp, #24]
 564              	.LVL62:
 269:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****       block_rows = compptr->v_samp_factor;
 565              		.loc 1 269 0
 566 00d4 AB68     		ldr	r3, [r5, #8]
 567 00d6 0A9A     		ldr	r2, [sp, #40]
 568 00d8 9342     		cmp	r3, r2
 569 00da A2D2     		bcs	.L43
ARM GAS  /tmp/cc7UMkoE.s 			page 19


 270:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****     else {
 570              		.loc 1 270 0
 571 00dc DAF80C80 		ldr	r8, [r10, #12]
 572              	.LVL63:
 573              	.L44:
 276:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****     h_samp_factor = compptr->h_samp_factor;
 574              		.loc 1 276 0
 575 00e0 DAF81C30 		ldr	r3, [r10, #28]
 576 00e4 0893     		str	r3, [sp, #32]
 577              	.LVL64:
 277:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****     /* Count number of dummy blocks to be added at the right margin. */
 578              		.loc 1 277 0
 579 00e6 DAF80840 		ldr	r4, [r10, #8]
 580              	.LVL65:
 279:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****     if (ndummy > 0)
 581              		.loc 1 279 0
 582 00ea A146     		mov	r9, r4
 583 00ec B3FBF4F7 		udiv	r7, r3, r4
 584 00f0 04FB1737 		mls	r7, r4, r7, r3
 585              	.LVL66:
 280:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****       ndummy = h_samp_factor - ndummy;
 586              		.loc 1 280 0
 587 00f4 002F     		cmp	r7, #0
 588 00f6 00DD     		ble	.L45
 281:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****     forward_DCT = cinfo->fdct->forward_DCT[ci];
 589              		.loc 1 281 0
 590 00f8 E71B     		subs	r7, r4, r7
 591              	.LVL67:
 592              	.L45:
 282:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****     /* Perform DCT for all non-dummy blocks in this iMCU row.  Each call
 593              		.loc 1 282 0
 594 00fa 059B     		ldr	r3, [sp, #20]
 595              	.LVL68:
 596 00fc D3F8A031 		ldr	r3, [r3, #416]
 597 0100 03EB8B03 		add	r3, r3, fp, lsl #2
 598 0104 5B68     		ldr	r3, [r3, #4]
 599 0106 0793     		str	r3, [sp, #28]
 600              	.LVL69:
 286:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****       thisblockrow = buffer[block_row];
 601              		.loc 1 286 0
 602 0108 0025     		movs	r5, #0
 603 010a CDF82C90 		str	r9, [sp, #44]
 604 010e 0C94     		str	r4, [sp, #48]
 605 0110 089B     		ldr	r3, [sp, #32]
 606              	.LVL70:
 607 0112 0493     		str	r3, [sp, #16]
 608 0114 DDF83490 		ldr	r9, [sp, #52]
 609 0118 91E7     		b	.L46
 610              	.LVL71:
 611              	.L62:
 307:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****       MCUs_across = blocks_across / h_samp_factor;
 612              		.loc 1 307 0
 613 011a 089B     		ldr	r3, [sp, #32]
 614 011c 3B44     		add	r3, r3, r7
 615 011e 0493     		str	r3, [sp, #16]
 616              	.LVL72:
 308:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****       for (block_row = block_rows; block_row < compptr->v_samp_factor;
ARM GAS  /tmp/cc7UMkoE.s 			page 20


 617              		.loc 1 308 0
 618 0120 B3FBF4F7 		udiv	r7, r3, r4
 619              	.LVL73:
 620 0124 CDF81CB0 		str	fp, [sp, #28]
 621              	.LVL74:
 622 0128 DDF818B0 		ldr	fp, [sp, #24]
 623              	.LVL75:
 309:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** 	   block_row++) {
 624              		.loc 1 309 0
 625 012c 14E0     		b	.L52
 626              	.LVL76:
 627              	.L55:
 318:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** 	  }
 628              		.loc 1 318 0 discriminator 3
 629 012e DA01     		lsls	r2, r3, #7
 630 0130 A952     		strh	r1, [r5, r2]	@ movhi
 317:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** 	    thisblockrow[bi][0] = lastDC;
 631              		.loc 1 317 0 discriminator 3
 632 0132 0133     		adds	r3, r3, #1
 633              	.LVL77:
 634              	.L54:
 317:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** 	    thisblockrow[bi][0] = lastDC;
 635              		.loc 1 317 0 is_stmt 0 discriminator 1
 636 0134 A342     		cmp	r3, r4
 637 0136 FADB     		blt	.L55
 320:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** 	  lastblockrow += h_samp_factor;
 638              		.loc 1 320 0 is_stmt 1 discriminator 2
 639 0138 4FEAC913 		lsl	r3, r9, #7
 640              	.LVL78:
 641 013c 1D44     		add	r5, r5, r3
 642              	.LVL79:
 321:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** 	}
 643              		.loc 1 321 0 discriminator 2
 644 013e 1E44     		add	r6, r6, r3
 645              	.LVL80:
 315:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** 	  lastDC = lastblockrow[h_samp_factor-1][0];
 646              		.loc 1 315 0 discriminator 2
 647 0140 0130     		adds	r0, r0, #1
 648              	.LVL81:
 649              	.L53:
 315:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** 	  lastDC = lastblockrow[h_samp_factor-1][0];
 650              		.loc 1 315 0 is_stmt 0 discriminator 1
 651 0142 B842     		cmp	r0, r7
 652 0144 06D2     		bcs	.L64
 316:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** 	  for (bi = 0; bi < h_samp_factor; bi++) {
 653              		.loc 1 316 0 is_stmt 1
 654 0146 6FF07E43 		mvn	r3, #-33554432
 655 014a 4B44     		add	r3, r3, r9
 656 014c DB01     		lsls	r3, r3, #7
 657 014e F15E     		ldrsh	r1, [r6, r3]
 658              	.LVL82:
 317:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** 	    thisblockrow[bi][0] = lastDC;
 659              		.loc 1 317 0
 660 0150 0023     		movs	r3, #0
 661 0152 EFE7     		b	.L54
 662              	.LVL83:
 663              	.L64:
ARM GAS  /tmp/cc7UMkoE.s 			page 21


 310:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** 	thisblockrow = buffer[block_row];
 664              		.loc 1 310 0
 665 0154 08F10108 		add	r8, r8, #1
 666              	.LVL84:
 667              	.L52:
 309:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** 	   block_row++) {
 668              		.loc 1 309 0 discriminator 1
 669 0158 DAF80C30 		ldr	r3, [r10, #12]
 670 015c 4345     		cmp	r3, r8
 671 015e 0EDD     		ble	.L65
 311:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** 	lastblockrow = buffer[block_row-1];
 672              		.loc 1 311 0
 673 0160 5BF82850 		ldr	r5, [fp, r8, lsl #2]
 674              	.LVL85:
 312:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** 	FMEMZERO((void FAR *) thisblockrow,
 675              		.loc 1 312 0
 676 0164 6FF04043 		mvn	r3, #-1073741824
 677 0168 4344     		add	r3, r3, r8
 678 016a 5BF82360 		ldr	r6, [fp, r3, lsl #2]
 679              	.LVL86:
 313:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** 		 (size_t) (blocks_across * SIZEOF(JBLOCK)));
 680              		.loc 1 313 0
 681 016e 049B     		ldr	r3, [sp, #16]
 682 0170 DA01     		lsls	r2, r3, #7
 683 0172 0021     		movs	r1, #0
 684 0174 2846     		mov	r0, r5
 685 0176 FFF7FEFF 		bl	memset
 686              	.LVL87:
 315:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** 	  lastDC = lastblockrow[h_samp_factor-1][0];
 687              		.loc 1 315 0
 688 017a 0020     		movs	r0, #0
 689 017c E1E7     		b	.L53
 690              	.LVL88:
 691              	.L65:
 692 017e DDF81CB0 		ldr	fp, [sp, #28]
 693 0182 8CE7     		b	.L51
 694              	.LVL89:
 695              	.L63:
 331:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** }
 696              		.loc 1 331 0
 697 0184 0D99     		ldr	r1, [sp, #52]
 698 0186 0598     		ldr	r0, [sp, #20]
 699 0188 FFF7FEFF 		bl	compress_output
 700              	.LVL90:
 332:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** 
 701              		.loc 1 332 0
 702 018c 0FB0     		add	sp, sp, #60
 703              	.LCFI7:
 704              		.cfi_def_cfa_offset 36
 705              		@ sp needed
 706 018e BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 707              		.cfi_endproc
 708              	.LFE6:
 710              		.section	.text.compress_data,"ax",%progbits
 711              		.align	1
 712              		.syntax unified
 713              		.thumb
ARM GAS  /tmp/cc7UMkoE.s 			page 22


 714              		.thumb_func
 715              		.fpu fpv5-sp-d16
 717              	compress_data:
 718              	.LFB5:
 145:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****   my_coef_ptr coef = (my_coef_ptr) cinfo->coef;
 719              		.loc 1 145 0
 720              		.cfi_startproc
 721              		@ args = 0, pretend = 0, frame = 32
 722              		@ frame_needed = 0, uses_anonymous_args = 0
 723              	.LVL91:
 724 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 725              	.LCFI8:
 726              		.cfi_def_cfa_offset 36
 727              		.cfi_offset 4, -36
 728              		.cfi_offset 5, -32
 729              		.cfi_offset 6, -28
 730              		.cfi_offset 7, -24
 731              		.cfi_offset 8, -20
 732              		.cfi_offset 9, -16
 733              		.cfi_offset 10, -12
 734              		.cfi_offset 11, -8
 735              		.cfi_offset 14, -4
 736 0004 8DB0     		sub	sp, sp, #52
 737              	.LCFI9:
 738              		.cfi_def_cfa_offset 88
 739 0006 0691     		str	r1, [sp, #24]
 146:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****   JDIMENSION MCU_col_num;	/* index of current MCU within row */
 740              		.loc 1 146 0
 741 0008 D0F89091 		ldr	r9, [r0, #400]
 742              	.LVL92:
 148:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****   JDIMENSION last_iMCU_row = cinfo->total_iMCU_rows - 1;
 743              		.loc 1 148 0
 744 000c D0F83431 		ldr	r3, [r0, #308]
 745 0010 013B     		subs	r3, r3, #1
 746 0012 0A93     		str	r3, [sp, #40]
 747              	.LVL93:
 149:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****   int blkn, bi, ci, yindex, yoffset, blockcnt;
 748              		.loc 1 149 0
 749 0014 D0F81C31 		ldr	r3, [r0, #284]
 750              	.LVL94:
 751 0018 013B     		subs	r3, r3, #1
 752 001a 0B93     		str	r3, [sp, #44]
 753              	.LVL95:
 156:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****        yoffset++) {
 754              		.loc 1 156 0
 755 001c D9F81030 		ldr	r3, [r9, #16]
 756              	.LVL96:
 757 0020 0993     		str	r3, [sp, #36]
 758              	.LVL97:
 759 0022 CB46     		mov	fp, r9
 760 0024 8146     		mov	r9, r0
 761              	.LVL98:
 762              	.L67:
 156:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****        yoffset++) {
 763              		.loc 1 156 0 is_stmt 0 discriminator 1
 764 0026 DBF81430 		ldr	r3, [fp, #20]
 765 002a 099A     		ldr	r2, [sp, #36]
ARM GAS  /tmp/cc7UMkoE.s 			page 23


 766 002c 9342     		cmp	r3, r2
 767 002e 40F3AE80 		ble	.L87
 158:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** 	 MCU_col_num++) {
 768              		.loc 1 158 0 is_stmt 1
 769 0032 DBF80C30 		ldr	r3, [fp, #12]
 770 0036 0893     		str	r3, [sp, #32]
 771              	.LVL99:
 772 0038 90E0     		b	.L68
 773              	.LVL100:
 774              	.L69:
 174:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** 	xpos = MCU_col_num * compptr->MCU_sample_width;
 775              		.loc 1 174 0 discriminator 2
 776 003a D4F84880 		ldr	r8, [r4, #72]
 777 003e 72E0     		b	.L70
 778              	.LVL101:
 779              	.L89:
 180:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** 	    (*forward_DCT) (cinfo, compptr,
 780              		.loc 1 180 0 discriminator 1
 781 0040 099B     		ldr	r3, [sp, #36]
 782 0042 FB18     		adds	r3, r7, r3
 783 0044 E26C     		ldr	r2, [r4, #76]
 179:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** 	      yoffset+yindex < compptr->last_row_height) {
 784              		.loc 1 179 0 discriminator 1
 785 0046 9342     		cmp	r3, r2
 786 0048 23DB     		blt	.L72
 195:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** 		     compptr->MCU_width * SIZEOF(JBLOCK));
 787              		.loc 1 195 0
 788 004a AB1D     		adds	r3, r5, #6
 789 004c A26B     		ldr	r2, [r4, #56]
 790 004e D201     		lsls	r2, r2, #7
 791 0050 0021     		movs	r1, #0
 792 0052 5BF82300 		ldr	r0, [fp, r3, lsl #2]
 793 0056 FFF7FEFF 		bl	memset
 794              	.LVL102:
 197:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** 	      coef->MCU_buffer[blkn+bi][0][0] = coef->MCU_buffer[blkn-1][0][0];
 795              		.loc 1 197 0
 796 005a 0023     		movs	r3, #0
 797 005c 43E0     		b	.L77
 798              	.LVL103:
 799              	.L76:
 190:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** 	      }
 800              		.loc 1 190 0 discriminator 3
 801 005e AB18     		adds	r3, r5, r2
 802 0060 591D     		adds	r1, r3, #5
 803 0062 5BF82110 		ldr	r1, [fp, r1, lsl #2]
 804 0066 0633     		adds	r3, r3, #6
 805 0068 5BF82330 		ldr	r3, [fp, r3, lsl #2]
 806 006c B1F90010 		ldrsh	r1, [r1]
 807 0070 1980     		strh	r1, [r3]	@ movhi
 189:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** 		coef->MCU_buffer[blkn+bi][0][0] = coef->MCU_buffer[blkn+bi-1][0][0];
 808              		.loc 1 189 0 discriminator 3
 809 0072 0132     		adds	r2, r2, #1
 810              	.LVL104:
 811              	.L75:
 189:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** 		coef->MCU_buffer[blkn+bi][0][0] = coef->MCU_buffer[blkn+bi-1][0][0];
 812              		.loc 1 189 0 is_stmt 0 discriminator 1
 813 0074 A36B     		ldr	r3, [r4, #56]
ARM GAS  /tmp/cc7UMkoE.s 			page 24


 814 0076 9342     		cmp	r3, r2
 815 0078 F1DC     		bgt	.L76
 816              	.LVL105:
 817              	.L74:
 201:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** 	  ypos += compptr->DCT_v_scaled_size;
 818              		.loc 1 201 0 is_stmt 1 discriminator 2
 819 007a A36B     		ldr	r3, [r4, #56]
 820 007c 1D44     		add	r5, r5, r3
 821              	.LVL106:
 202:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** 	}
 822              		.loc 1 202 0 discriminator 2
 823 007e A36A     		ldr	r3, [r4, #40]
 824 0080 1E44     		add	r6, r6, r3
 825              	.LVL107:
 178:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** 	  if (coef->iMCU_row_num < last_iMCU_row ||
 826              		.loc 1 178 0 discriminator 2
 827 0082 0137     		adds	r7, r7, #1
 828              	.LVL108:
 829              	.L71:
 178:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** 	  if (coef->iMCU_row_num < last_iMCU_row ||
 830              		.loc 1 178 0 is_stmt 0 discriminator 1
 831 0084 E36B     		ldr	r3, [r4, #60]
 832 0086 BB42     		cmp	r3, r7
 833 0088 31DD     		ble	.L88
 179:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** 	      yoffset+yindex < compptr->last_row_height) {
 834              		.loc 1 179 0 is_stmt 1
 835 008a DBF80830 		ldr	r3, [fp, #8]
 836 008e 4B45     		cmp	r3, r9
 837 0090 D6D2     		bcs	.L89
 838              	.L72:
 182:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** 			    coef->MCU_buffer[blkn],
 839              		.loc 1 182 0
 840 0092 6268     		ldr	r2, [r4, #4]
 181:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** 			    input_buf[compptr->component_index],
 841              		.loc 1 181 0
 842 0094 AB1D     		adds	r3, r5, #6
 843 0096 5BF82330 		ldr	r3, [fp, r3, lsl #2]
 844 009a 0699     		ldr	r1, [sp, #24]
 845 009c 51F82220 		ldr	r2, [r1, r2, lsl #2]
 846 00a0 CDF80880 		str	r8, [sp, #8]
 847 00a4 0599     		ldr	r1, [sp, #20]
 848 00a6 0191     		str	r1, [sp, #4]
 849 00a8 0096     		str	r6, [sp]
 850 00aa 2146     		mov	r1, r4
 851 00ac 0498     		ldr	r0, [sp, #16]
 852 00ae D047     		blx	r10
 853              	.LVL109:
 185:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** 	      /* Create some dummy blocks at the right edge of the image. */
 854              		.loc 1 185 0
 855 00b0 A26B     		ldr	r2, [r4, #56]
 856 00b2 4245     		cmp	r2, r8
 857 00b4 E1DD     		ble	.L74
 187:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** 		       (compptr->MCU_width - blockcnt) * SIZEOF(JBLOCK));
 858              		.loc 1 187 0
 859 00b6 05EB0803 		add	r3, r5, r8
 860 00ba 0633     		adds	r3, r3, #6
 861 00bc A2EB0802 		sub	r2, r2, r8
ARM GAS  /tmp/cc7UMkoE.s 			page 25


 862 00c0 D201     		lsls	r2, r2, #7
 863 00c2 0021     		movs	r1, #0
 864 00c4 5BF82300 		ldr	r0, [fp, r3, lsl #2]
 865 00c8 FFF7FEFF 		bl	memset
 866              	.LVL110:
 189:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** 		coef->MCU_buffer[blkn+bi][0][0] = coef->MCU_buffer[blkn+bi-1][0][0];
 867              		.loc 1 189 0
 868 00cc 4246     		mov	r2, r8
 869 00ce D1E7     		b	.L75
 870              	.LVL111:
 871              	.L78:
 198:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** 	    }
 872              		.loc 1 198 0 discriminator 3
 873 00d0 6A1D     		adds	r2, r5, #5
 874 00d2 5BF82210 		ldr	r1, [fp, r2, lsl #2]
 875 00d6 EA18     		adds	r2, r5, r3
 876 00d8 0632     		adds	r2, r2, #6
 877 00da 5BF82220 		ldr	r2, [fp, r2, lsl #2]
 878 00de B1F90010 		ldrsh	r1, [r1]
 879 00e2 1180     		strh	r1, [r2]	@ movhi
 197:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** 	      coef->MCU_buffer[blkn+bi][0][0] = coef->MCU_buffer[blkn-1][0][0];
 880              		.loc 1 197 0 discriminator 3
 881 00e4 0133     		adds	r3, r3, #1
 882              	.LVL112:
 883              	.L77:
 197:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** 	      coef->MCU_buffer[blkn+bi][0][0] = coef->MCU_buffer[blkn-1][0][0];
 884              		.loc 1 197 0 is_stmt 0 discriminator 1
 885 00e6 A26B     		ldr	r2, [r4, #56]
 886 00e8 9A42     		cmp	r2, r3
 887 00ea F1DC     		bgt	.L78
 888 00ec C5E7     		b	.L74
 889              	.LVL113:
 890              	.L88:
 891 00ee DDF81090 		ldr	r9, [sp, #16]
 170:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** 	compptr = cinfo->cur_comp_info[ci];
 892              		.loc 1 170 0 is_stmt 1 discriminator 2
 893 00f2 079B     		ldr	r3, [sp, #28]
 894 00f4 0133     		adds	r3, r3, #1
 895 00f6 0793     		str	r3, [sp, #28]
 896              	.LVL114:
 897              	.L83:
 170:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** 	compptr = cinfo->cur_comp_info[ci];
 898              		.loc 1 170 0 is_stmt 0 discriminator 1
 899 00f8 D9F82031 		ldr	r3, [r9, #288]
 900 00fc 079A     		ldr	r2, [sp, #28]
 901 00fe 9342     		cmp	r3, r2
 902 0100 20DD     		ble	.L90
 171:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** 	forward_DCT = cinfo->fdct->forward_DCT[compptr->component_index];
 903              		.loc 1 171 0 is_stmt 1
 904 0102 079B     		ldr	r3, [sp, #28]
 905 0104 4833     		adds	r3, r3, #72
 906 0106 09EB8303 		add	r3, r9, r3, lsl #2
 907 010a 5C68     		ldr	r4, [r3, #4]
 908              	.LVL115:
 172:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** 	blockcnt = (MCU_col_num < last_MCU_col) ? compptr->MCU_width
 909              		.loc 1 172 0
 910 010c D9F8A031 		ldr	r3, [r9, #416]
ARM GAS  /tmp/cc7UMkoE.s 			page 26


 911 0110 6268     		ldr	r2, [r4, #4]
 912 0112 03EB8203 		add	r3, r3, r2, lsl #2
 913 0116 D3F804A0 		ldr	r10, [r3, #4]
 914              	.LVL116:
 174:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** 	xpos = MCU_col_num * compptr->MCU_sample_width;
 915              		.loc 1 174 0
 916 011a 089B     		ldr	r3, [sp, #32]
 917 011c 0A9A     		ldr	r2, [sp, #40]
 918 011e 9342     		cmp	r3, r2
 919 0120 8BD2     		bcs	.L69
 174:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** 	xpos = MCU_col_num * compptr->MCU_sample_width;
 920              		.loc 1 174 0 is_stmt 0 discriminator 1
 921 0122 D4F83880 		ldr	r8, [r4, #56]
 922              	.L70:
 923              	.LVL117:
 175:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** 	ypos = yoffset * compptr->DCT_v_scaled_size;
 924              		.loc 1 175 0 is_stmt 1
 925 0126 636C     		ldr	r3, [r4, #68]
 926 0128 089A     		ldr	r2, [sp, #32]
 927 012a 02FB03F3 		mul	r3, r2, r3
 928 012e 0593     		str	r3, [sp, #20]
 929              	.LVL118:
 176:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** 	/* ypos == (yoffset+yindex) * DCTSIZE */
 930              		.loc 1 176 0
 931 0130 A66A     		ldr	r6, [r4, #40]
 932 0132 099B     		ldr	r3, [sp, #36]
 933              	.LVL119:
 934 0134 03FB06F6 		mul	r6, r3, r6
 935              	.LVL120:
 178:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** 	  if (coef->iMCU_row_num < last_iMCU_row ||
 936              		.loc 1 178 0
 937 0138 0027     		movs	r7, #0
 938 013a CDF81090 		str	r9, [sp, #16]
 939 013e DDF82C90 		ldr	r9, [sp, #44]
 940 0142 9FE7     		b	.L71
 941              	.LVL121:
 942              	.L90:
 208:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** 	/* Suspension forced; update state counters and exit */
 943              		.loc 1 208 0
 944 0144 D9F8A431 		ldr	r3, [r9, #420]
 945 0148 5B68     		ldr	r3, [r3, #4]
 946 014a 0BF11801 		add	r1, fp, #24
 947 014e 4846     		mov	r0, r9
 948 0150 9847     		blx	r3
 949              	.LVL122:
 950 0152 0346     		mov	r3, r0
 951 0154 50B1     		cbz	r0, .L91
 159:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****       /* Determine where data comes from in input_buf and do the DCT thing.
 952              		.loc 1 159 0
 953 0156 089B     		ldr	r3, [sp, #32]
 954 0158 0133     		adds	r3, r3, #1
 955 015a 0893     		str	r3, [sp, #32]
 956              	.LVL123:
 957              	.L68:
 158:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** 	 MCU_col_num++) {
 958              		.loc 1 158 0 discriminator 1
 959 015c 089B     		ldr	r3, [sp, #32]
ARM GAS  /tmp/cc7UMkoE.s 			page 27


 960 015e 0A9A     		ldr	r2, [sp, #40]
 961 0160 9342     		cmp	r3, r2
 962 0162 0DD8     		bhi	.L92
 170:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** 	compptr = cinfo->cur_comp_info[ci];
 963              		.loc 1 170 0
 964 0164 0023     		movs	r3, #0
 965 0166 0793     		str	r3, [sp, #28]
 169:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****       for (ci = 0; ci < cinfo->comps_in_scan; ci++) {
 966              		.loc 1 169 0
 967 0168 1D46     		mov	r5, r3
 968 016a C5E7     		b	.L83
 969              	.LVL124:
 970              	.L91:
 210:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** 	coef->mcu_ctr = MCU_col_num;
 971              		.loc 1 210 0
 972 016c 099A     		ldr	r2, [sp, #36]
 973 016e CBF81020 		str	r2, [fp, #16]
 211:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** 	return FALSE;
 974              		.loc 1 211 0
 975 0172 089A     		ldr	r2, [sp, #32]
 976 0174 CBF80C20 		str	r2, [fp, #12]
 977              	.LVL125:
 978              	.L66:
 222:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** 
 979              		.loc 1 222 0
 980 0178 1846     		mov	r0, r3
 981 017a 0DB0     		add	sp, sp, #52
 982              	.LCFI10:
 983              		.cfi_remember_state
 984              		.cfi_def_cfa_offset 36
 985              		@ sp needed
 986 017c BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 987              	.LVL126:
 988              	.L92:
 989              	.LCFI11:
 990              		.cfi_restore_state
 216:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****   }
 991              		.loc 1 216 0
 992 0180 0023     		movs	r3, #0
 993              	.LVL127:
 994 0182 CBF80C30 		str	r3, [fp, #12]
 157:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****     for (MCU_col_num = coef->mcu_ctr; MCU_col_num <= last_MCU_col;
 995              		.loc 1 157 0
 996 0186 099B     		ldr	r3, [sp, #36]
 997 0188 0133     		adds	r3, r3, #1
 998 018a 0993     		str	r3, [sp, #36]
 999              	.LVL128:
 1000 018c 4BE7     		b	.L67
 1001              	.LVL129:
 1002              	.L87:
 1003 018e 4B46     		mov	r3, r9
 1004 0190 D946     		mov	r9, fp
 1005 0192 9B46     		mov	fp, r3
 1006              	.LVL130:
 219:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****   start_iMCU_row(cinfo);
 1007              		.loc 1 219 0
 1008 0194 D9F80830 		ldr	r3, [r9, #8]
ARM GAS  /tmp/cc7UMkoE.s 			page 28


 1009 0198 0133     		adds	r3, r3, #1
 1010 019a C9F80830 		str	r3, [r9, #8]
 220:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****   return TRUE;
 1011              		.loc 1 220 0
 1012 019e 5846     		mov	r0, fp
 1013 01a0 FFF7FEFF 		bl	start_iMCU_row
 1014              	.LVL131:
 221:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** }
 1015              		.loc 1 221 0
 1016 01a4 0123     		movs	r3, #1
 1017 01a6 E7E7     		b	.L66
 1018              		.cfi_endproc
 1019              	.LFE5:
 1021              		.section	.text.jinit_c_coef_controller,"ax",%progbits
 1022              		.align	1
 1023              		.global	jinit_c_coef_controller
 1024              		.syntax unified
 1025              		.thumb
 1026              		.thumb_func
 1027              		.fpu fpv5-sp-d16
 1029              	jinit_c_coef_controller:
 1030              	.LFB8:
 401:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** 
 402:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** #endif /* FULL_COEF_BUFFER_SUPPORTED */
 403:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** 
 404:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** 
 405:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** /*
 406:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****  * Initialize coefficient buffer controller.
 407:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****  */
 408:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** 
 409:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** GLOBAL(void)
 410:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** jinit_c_coef_controller (j_compress_ptr cinfo, boolean need_full_buffer)
 411:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** {
 1031              		.loc 1 411 0
 1032              		.cfi_startproc
 1033              		@ args = 0, pretend = 0, frame = 0
 1034              		@ frame_needed = 0, uses_anonymous_args = 0
 1035              	.LVL132:
 1036 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 1037              	.LCFI12:
 1038              		.cfi_def_cfa_offset 28
 1039              		.cfi_offset 4, -28
 1040              		.cfi_offset 5, -24
 1041              		.cfi_offset 6, -20
 1042              		.cfi_offset 7, -16
 1043              		.cfi_offset 8, -12
 1044              		.cfi_offset 9, -8
 1045              		.cfi_offset 14, -4
 1046 0004 83B0     		sub	sp, sp, #12
 1047              	.LCFI13:
 1048              		.cfi_def_cfa_offset 40
 1049 0006 0546     		mov	r5, r0
 1050 0008 0E46     		mov	r6, r1
 412:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****   my_coef_ptr coef;
 413:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** 
 414:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****   coef = (my_coef_ptr)
 415:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****     (*cinfo->mem->alloc_small) ((j_common_ptr) cinfo, JPOOL_IMAGE,
ARM GAS  /tmp/cc7UMkoE.s 			page 29


 1051              		.loc 1 415 0
 1052 000a 4368     		ldr	r3, [r0, #4]
 1053 000c 1B68     		ldr	r3, [r3]
 414:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****     (*cinfo->mem->alloc_small) ((j_common_ptr) cinfo, JPOOL_IMAGE,
 1054              		.loc 1 414 0
 1055 000e 6822     		movs	r2, #104
 1056 0010 0121     		movs	r1, #1
 1057              	.LVL133:
 1058 0012 9847     		blx	r3
 1059              	.LVL134:
 1060 0014 0446     		mov	r4, r0
 1061              	.LVL135:
 416:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** 				SIZEOF(my_coef_controller));
 417:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****   cinfo->coef = (struct jpeg_c_coef_controller *) coef;
 1062              		.loc 1 417 0
 1063 0016 C5F89001 		str	r0, [r5, #400]
 418:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****   coef->pub.start_pass = start_pass_coef;
 1064              		.loc 1 418 0
 1065 001a 1D4B     		ldr	r3, .L102
 1066 001c 0360     		str	r3, [r0]
 419:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** 
 420:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****   /* Create the coefficient buffer. */
 421:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****   if (need_full_buffer) {
 1067              		.loc 1 421 0
 1068 001e 46B9     		cbnz	r6, .L101
 1069              	.LBB2:
 422:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** #ifdef FULL_COEF_BUFFER_SUPPORTED
 423:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****     /* Allocate a full-image virtual array for each component, */
 424:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****     /* padded to a multiple of samp_factor DCT blocks in each direction. */
 425:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****     int ci;
 426:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****     jpeg_component_info *compptr;
 427:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** 
 428:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****     for (ci = 0, compptr = cinfo->comp_info; ci < cinfo->num_components;
 429:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** 	 ci++, compptr++) {
 430:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****       coef->whole_image[ci] = (*cinfo->mem->request_virt_barray)
 431:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** 	((j_common_ptr) cinfo, JPOOL_IMAGE, FALSE,
 432:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** 	 (JDIMENSION) jround_up((long) compptr->width_in_blocks,
 433:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** 				(long) compptr->h_samp_factor),
 434:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** 	 (JDIMENSION) jround_up((long) compptr->height_in_blocks,
 435:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** 				(long) compptr->v_samp_factor),
 436:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** 	 (JDIMENSION) compptr->v_samp_factor);
 437:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****     }
 438:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** #else
 439:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****     ERREXIT(cinfo, JERR_BAD_BUFFER_MODE);
 440:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** #endif
 441:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****   } else {
 442:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****     /* We only need a single-MCU buffer. */
 443:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****     JBLOCKROW buffer;
 444:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****     int i;
 445:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** 
 446:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****     buffer = (JBLOCKROW)
 447:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****       (*cinfo->mem->alloc_large) ((j_common_ptr) cinfo, JPOOL_IMAGE,
 1070              		.loc 1 447 0
 1071 0020 6B68     		ldr	r3, [r5, #4]
 1072 0022 5B68     		ldr	r3, [r3, #4]
 446:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****       (*cinfo->mem->alloc_large) ((j_common_ptr) cinfo, JPOOL_IMAGE,
 1073              		.loc 1 446 0
ARM GAS  /tmp/cc7UMkoE.s 			page 30


 1074 0024 4FF4A062 		mov	r2, #1280
 1075 0028 0121     		movs	r1, #1
 1076 002a 2846     		mov	r0, r5
 1077              	.LVL136:
 1078 002c 9847     		blx	r3
 1079              	.LVL137:
 448:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** 				  C_MAX_BLOCKS_IN_MCU * SIZEOF(JBLOCK));
 449:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****     for (i = 0; i < C_MAX_BLOCKS_IN_MCU; i++) {
 1080              		.loc 1 449 0
 1081 002e 0023     		movs	r3, #0
 1082 0030 26E0     		b	.L98
 1083              	.LVL138:
 1084              	.L101:
 1085              	.LBE2:
 1086              	.LBB3:
 428:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** 	 ci++, compptr++) {
 1087              		.loc 1 428 0
 1088 0032 6E6D     		ldr	r6, [r5, #84]
 1089              	.LVL139:
 1090 0034 0027     		movs	r7, #0
 1091 0036 19E0     		b	.L95
 1092              	.LVL140:
 1093              	.L96:
 430:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** 	((j_common_ptr) cinfo, JPOOL_IMAGE, FALSE,
 1094              		.loc 1 430 0
 1095 0038 6B68     		ldr	r3, [r5, #4]
 1096 003a D3F81480 		ldr	r8, [r3, #20]
 432:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** 				(long) compptr->h_samp_factor),
 1097              		.loc 1 432 0
 1098 003e B168     		ldr	r1, [r6, #8]
 1099 0040 F069     		ldr	r0, [r6, #28]
 1100 0042 FFF7FEFF 		bl	jround_up
 1101              	.LVL141:
 1102 0046 8146     		mov	r9, r0
 434:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** 				(long) compptr->v_samp_factor),
 1103              		.loc 1 434 0
 1104 0048 F168     		ldr	r1, [r6, #12]
 1105 004a 306A     		ldr	r0, [r6, #32]
 1106 004c FFF7FEFF 		bl	jround_up
 1107              	.LVL142:
 436:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****     }
 1108              		.loc 1 436 0
 1109 0050 F368     		ldr	r3, [r6, #12]
 430:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** 	((j_common_ptr) cinfo, JPOOL_IMAGE, FALSE,
 1110              		.loc 1 430 0
 1111 0052 0193     		str	r3, [sp, #4]
 1112 0054 0090     		str	r0, [sp]
 1113 0056 4B46     		mov	r3, r9
 1114 0058 0022     		movs	r2, #0
 1115 005a 0121     		movs	r1, #1
 1116 005c 2846     		mov	r0, r5
 1117 005e C047     		blx	r8
 1118              	.LVL143:
 1119 0060 07F11003 		add	r3, r7, #16
 1120 0064 44F82300 		str	r0, [r4, r3, lsl #2]
 429:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****       coef->whole_image[ci] = (*cinfo->mem->request_virt_barray)
 1121              		.loc 1 429 0
ARM GAS  /tmp/cc7UMkoE.s 			page 31


 1122 0068 0137     		adds	r7, r7, #1
 1123              	.LVL144:
 1124 006a 5836     		adds	r6, r6, #88
 1125              	.LVL145:
 1126              	.L95:
 428:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** 	 ci++, compptr++) {
 1127              		.loc 1 428 0 discriminator 1
 1128 006c EB6C     		ldr	r3, [r5, #76]
 1129 006e BB42     		cmp	r3, r7
 1130 0070 E2DC     		bgt	.L96
 1131 0072 09E0     		b	.L93
 1132              	.LVL146:
 1133              	.L99:
 1134              	.LBE3:
 1135              	.LBB4:
 450:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****       coef->MCU_buffer[i] = buffer + i;
 1136              		.loc 1 450 0 discriminator 3
 1137 0074 00EBC311 		add	r1, r0, r3, lsl #7
 1138 0078 9A1D     		adds	r2, r3, #6
 1139 007a 44F82210 		str	r1, [r4, r2, lsl #2]
 449:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****       coef->MCU_buffer[i] = buffer + i;
 1140              		.loc 1 449 0 discriminator 3
 1141 007e 0133     		adds	r3, r3, #1
 1142              	.LVL147:
 1143              	.L98:
 449:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****       coef->MCU_buffer[i] = buffer + i;
 1144              		.loc 1 449 0 is_stmt 0 discriminator 1
 1145 0080 092B     		cmp	r3, #9
 1146 0082 F7DD     		ble	.L99
 451:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****     }
 452:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****     coef->whole_image[0] = NULL; /* flag for no virtual arrays */
 1147              		.loc 1 452 0 is_stmt 1
 1148 0084 0023     		movs	r3, #0
 1149              	.LVL148:
 1150 0086 2364     		str	r3, [r4, #64]
 1151              	.LVL149:
 1152              	.L93:
 1153              	.LBE4:
 453:Middlewares/Third_Party/LibJPEG/source/jccoefct.c ****   }
 454:Middlewares/Third_Party/LibJPEG/source/jccoefct.c **** }
 1154              		.loc 1 454 0
 1155 0088 03B0     		add	sp, sp, #12
 1156              	.LCFI14:
 1157              		.cfi_def_cfa_offset 28
 1158              		@ sp needed
 1159 008a BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 1160              	.LVL150:
 1161              	.L103:
 1162 008e 00BF     		.align	2
 1163              	.L102:
 1164 0090 00000000 		.word	start_pass_coef
 1165              		.cfi_endproc
 1166              	.LFE8:
 1168              		.text
 1169              	.Letext0:
 1170              		.file 2 "/home/jaxc/opt/gcc-arm-none-eabi-7-2018-q2-update/lib/gcc/arm-none-eabi/7.3.1/include/std
 1171              		.file 3 "/home/jaxc/opt/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/lock.h"
ARM GAS  /tmp/cc7UMkoE.s 			page 32


 1172              		.file 4 "/home/jaxc/opt/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/_types.h"
 1173              		.file 5 "/home/jaxc/opt/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/reent.h"
 1174              		.file 6 "/home/jaxc/opt/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/stdlib.h"
 1175              		.file 7 "Inc/jmorecfg.h"
 1176              		.file 8 "Middlewares/Third_Party/LibJPEG/include/jpeglib.h"
 1177              		.file 9 "Middlewares/Third_Party/LibJPEG/include/jpegint.h"
 1178              		.file 10 "Middlewares/Third_Party/LibJPEG/include/jerror.h"
 1179              		.file 11 "<built-in>"
ARM GAS  /tmp/cc7UMkoE.s 			page 33


DEFINED SYMBOLS
                            *ABS*:0000000000000000 jccoefct.c
     /tmp/cc7UMkoE.s:18     .text.start_iMCU_row:0000000000000000 $t
     /tmp/cc7UMkoE.s:24     .text.start_iMCU_row:0000000000000000 start_iMCU_row
     /tmp/cc7UMkoE.s:73     .text.start_pass_coef:0000000000000000 $t
     /tmp/cc7UMkoE.s:79     .text.start_pass_coef:0000000000000000 start_pass_coef
     /tmp/cc7UMkoE.s:183    .text.start_pass_coef:0000000000000074 $d
     /tmp/cc7UMkoE.s:717    .text.compress_data:0000000000000000 compress_data
     /tmp/cc7UMkoE.s:407    .text.compress_first_pass:0000000000000000 compress_first_pass
     /tmp/cc7UMkoE.s:196    .text.compress_output:0000000000000000 compress_output
     /tmp/cc7UMkoE.s:190    .text.compress_output:0000000000000000 $t
     /tmp/cc7UMkoE.s:401    .text.compress_first_pass:0000000000000000 $t
     /tmp/cc7UMkoE.s:711    .text.compress_data:0000000000000000 $t
     /tmp/cc7UMkoE.s:1022   .text.jinit_c_coef_controller:0000000000000000 $t
     /tmp/cc7UMkoE.s:1029   .text.jinit_c_coef_controller:0000000000000000 jinit_c_coef_controller
     /tmp/cc7UMkoE.s:1164   .text.jinit_c_coef_controller:0000000000000090 $d

UNDEFINED SYMBOLS
memset
jround_up
