ARM GAS  /tmp/ccs1isz7.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"jquant2.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.prescan_quantize,"ax",%progbits
  18              		.align	1
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv5-sp-d16
  24              	prescan_quantize:
  25              	.LFB3:
  26              		.file 1 "Middlewares/Third_Party/LibJPEG/source/jquant2.c"
   1:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** /*
   2:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****  * jquant2.c
   3:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****  *
   4:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****  * Copyright (C) 1991-1996, Thomas G. Lane.
   5:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****  * Modified 2011 by Guido Vollbeding.
   6:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****  * This file is part of the Independent JPEG Group's software.
   7:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****  * For conditions of distribution and use, see the accompanying README file.
   8:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****  *
   9:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****  * This file contains 2-pass color quantization (color mapping) routines.
  10:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****  * These routines provide selection of a custom color map for an image,
  11:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****  * followed by mapping of the image to that color map, with optional
  12:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****  * Floyd-Steinberg dithering.
  13:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****  * It is also possible to use just the second pass to map to an arbitrary
  14:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****  * externally-given color map.
  15:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****  *
  16:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****  * Note: ordered dithering is not supported, since there isn't any fast
  17:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****  * way to compute intercolor distances; it's unclear that ordered dither's
  18:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****  * fundamental assumptions even hold with an irregularly spaced color map.
  19:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****  */
  20:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 
  21:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** #define JPEG_INTERNALS
  22:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** #include "jinclude.h"
  23:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** #include "jpeglib.h"
  24:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 
  25:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** #ifdef QUANT_2PASS_SUPPORTED
  26:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 
  27:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 
  28:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** /*
  29:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****  * This module implements the well-known Heckbert paradigm for color
  30:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****  * quantization.  Most of the ideas used here can be traced back to
  31:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****  * Heckbert's seminal paper
  32:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****  *   Heckbert, Paul.  "Color Image Quantization for Frame Buffer Display",
ARM GAS  /tmp/ccs1isz7.s 			page 2


  33:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****  *   Proc. SIGGRAPH '82, Computer Graphics v.16 #3 (July 1982), pp 297-304.
  34:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****  *
  35:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****  * In the first pass over the image, we accumulate a histogram showing the
  36:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****  * usage count of each possible color.  To keep the histogram to a reasonable
  37:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****  * size, we reduce the precision of the input; typical practice is to retain
  38:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****  * 5 or 6 bits per color, so that 8 or 4 different input values are counted
  39:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****  * in the same histogram cell.
  40:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****  *
  41:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****  * Next, the color-selection step begins with a box representing the whole
  42:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****  * color space, and repeatedly splits the "largest" remaining box until we
  43:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****  * have as many boxes as desired colors.  Then the mean color in each
  44:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****  * remaining box becomes one of the possible output colors.
  45:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****  * 
  46:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****  * The second pass over the image maps each input pixel to the closest output
  47:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****  * color (optionally after applying a Floyd-Steinberg dithering correction).
  48:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****  * This mapping is logically trivial, but making it go fast enough requires
  49:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****  * considerable care.
  50:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****  *
  51:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****  * Heckbert-style quantizers vary a good deal in their policies for choosing
  52:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****  * the "largest" box and deciding where to cut it.  The particular policies
  53:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****  * used here have proved out well in experimental comparisons, but better ones
  54:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****  * may yet be found.
  55:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****  *
  56:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****  * In earlier versions of the IJG code, this module quantized in YCbCr color
  57:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****  * space, processing the raw upsampled data without a color conversion step.
  58:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****  * This allowed the color conversion math to be done only once per colormap
  59:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****  * entry, not once per pixel.  However, that optimization precluded other
  60:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****  * useful optimizations (such as merging color conversion with upsampling)
  61:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****  * and it also interfered with desired capabilities such as quantizing to an
  62:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****  * externally-supplied colormap.  We have therefore abandoned that approach.
  63:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****  * The present code works in the post-conversion color space, typically RGB.
  64:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****  *
  65:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****  * To improve the visual quality of the results, we actually work in scaled
  66:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****  * RGB space, giving G distances more weight than R, and R in turn more than
  67:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****  * B.  To do everything in integer math, we must use integer scale factors.
  68:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****  * The 2/3/1 scale factors used here correspond loosely to the relative
  69:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****  * weights of the colors in the NTSC grayscale equation.
  70:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****  * If you want to use this code to quantize a non-RGB color space, you'll
  71:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****  * probably need to change these scale factors.
  72:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****  */
  73:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 
  74:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** #define R_SCALE 2		/* scale R distances by this much */
  75:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** #define G_SCALE 3		/* scale G distances by this much */
  76:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** #define B_SCALE 1		/* and B by this much */
  77:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 
  78:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** /* Relabel R/G/B as components 0/1/2, respecting the RGB ordering defined
  79:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****  * in jmorecfg.h.  As the code stands, it will do the right thing for R,G,B
  80:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****  * and B,G,R orders.  If you define some other weird order in jmorecfg.h,
  81:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****  * you'll get compile errors until you extend this logic.  In that case
  82:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****  * you'll probably want to tweak the histogram sizes too.
  83:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****  */
  84:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 
  85:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** #if RGB_RED == 0
  86:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** #define C0_SCALE R_SCALE
  87:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** #endif
  88:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** #if RGB_BLUE == 0
  89:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** #define C0_SCALE B_SCALE
ARM GAS  /tmp/ccs1isz7.s 			page 3


  90:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** #endif
  91:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** #if RGB_GREEN == 1
  92:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** #define C1_SCALE G_SCALE
  93:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** #endif
  94:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** #if RGB_RED == 2
  95:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** #define C2_SCALE R_SCALE
  96:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** #endif
  97:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** #if RGB_BLUE == 2
  98:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** #define C2_SCALE B_SCALE
  99:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** #endif
 100:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 
 101:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 
 102:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** /*
 103:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****  * First we have the histogram data structure and routines for creating it.
 104:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****  *
 105:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****  * The number of bits of precision can be adjusted by changing these symbols.
 106:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****  * We recommend keeping 6 bits for G and 5 each for R and B.
 107:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****  * If you have plenty of memory and cycles, 6 bits all around gives marginally
 108:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****  * better results; if you are short of memory, 5 bits all around will save
 109:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****  * some space but degrade the results.
 110:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****  * To maintain a fully accurate histogram, we'd need to allocate a "long"
 111:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****  * (preferably unsigned long) for each cell.  In practice this is overkill;
 112:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****  * we can get by with 16 bits per cell.  Few of the cell counts will overflow,
 113:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****  * and clamping those that do overflow to the maximum value will give close-
 114:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****  * enough results.  This reduces the recommended histogram size from 256Kb
 115:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****  * to 128Kb, which is a useful savings on PC-class machines.
 116:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****  * (In the second pass the histogram space is re-used for pixel mapping data;
 117:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****  * in that capacity, each cell must be able to store zero to the number of
 118:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****  * desired colors.  16 bits/cell is plenty for that too.)
 119:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****  * Since the JPEG code is intended to run in small memory model on 80x86
 120:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****  * machines, we can't just allocate the histogram in one chunk.  Instead
 121:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****  * of a true 3-D array, we use a row of pointers to 2-D arrays.  Each
 122:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****  * pointer corresponds to a C0 value (typically 2^5 = 32 pointers) and
 123:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****  * each 2-D array has 2^6*2^5 = 2048 or 2^6*2^6 = 4096 entries.  Note that
 124:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****  * on 80x86 machines, the pointer row is in near memory but the actual
 125:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****  * arrays are in far memory (same arrangement as we use for image arrays).
 126:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****  */
 127:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 
 128:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** #define MAXNUMCOLORS  (MAXJSAMPLE+1) /* maximum size of colormap */
 129:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 
 130:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** /* These will do the right thing for either R,G,B or B,G,R color order,
 131:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****  * but you may not like the results for other color orders.
 132:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****  */
 133:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** #define HIST_C0_BITS  5		/* bits of precision in R/B histogram */
 134:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** #define HIST_C1_BITS  6		/* bits of precision in G histogram */
 135:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** #define HIST_C2_BITS  5		/* bits of precision in B/R histogram */
 136:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 
 137:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** /* Number of elements along histogram axes. */
 138:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** #define HIST_C0_ELEMS  (1<<HIST_C0_BITS)
 139:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** #define HIST_C1_ELEMS  (1<<HIST_C1_BITS)
 140:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** #define HIST_C2_ELEMS  (1<<HIST_C2_BITS)
 141:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 
 142:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** /* These are the amounts to shift an input value to get a histogram index. */
 143:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** #define C0_SHIFT  (BITS_IN_JSAMPLE-HIST_C0_BITS)
 144:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** #define C1_SHIFT  (BITS_IN_JSAMPLE-HIST_C1_BITS)
 145:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** #define C2_SHIFT  (BITS_IN_JSAMPLE-HIST_C2_BITS)
 146:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 
ARM GAS  /tmp/ccs1isz7.s 			page 4


 147:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 
 148:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** typedef UINT16 histcell;	/* histogram cell; prefer an unsigned type */
 149:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 
 150:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** typedef histcell FAR * histptr;	/* for pointers to histogram cells */
 151:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 
 152:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** typedef histcell hist1d[HIST_C2_ELEMS]; /* typedefs for the array */
 153:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** typedef hist1d FAR * hist2d;	/* type for the 2nd-level pointers */
 154:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** typedef hist2d * hist3d;	/* type for top-level pointer */
 155:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 
 156:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 
 157:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** /* Declarations for Floyd-Steinberg dithering.
 158:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****  *
 159:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****  * Errors are accumulated into the array fserrors[], at a resolution of
 160:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****  * 1/16th of a pixel count.  The error at a given pixel is propagated
 161:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****  * to its not-yet-processed neighbors using the standard F-S fractions,
 162:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****  *		...	(here)	7/16
 163:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****  *		3/16	5/16	1/16
 164:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****  * We work left-to-right on even rows, right-to-left on odd rows.
 165:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****  *
 166:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****  * We can get away with a single array (holding one row's worth of errors)
 167:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****  * by using it to store the current row's errors at pixel columns not yet
 168:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****  * processed, but the next row's errors at columns already processed.  We
 169:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****  * need only a few extra variables to hold the errors immediately around the
 170:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****  * current column.  (If we are lucky, those variables are in registers, but
 171:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****  * even if not, they're probably cheaper to access than array elements are.)
 172:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****  *
 173:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****  * The fserrors[] array has (#columns + 2) entries; the extra entry at
 174:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****  * each end saves us from special-casing the first and last pixels.
 175:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****  * Each entry is three values long, one value for each color component.
 176:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****  *
 177:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****  * Note: on a wide image, we might not have enough room in a PC's near data
 178:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****  * segment to hold the error array; so it is allocated with alloc_large.
 179:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****  */
 180:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 
 181:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** #if BITS_IN_JSAMPLE == 8
 182:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** typedef INT16 FSERROR;		/* 16 bits should be enough */
 183:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** typedef int LOCFSERROR;		/* use 'int' for calculation temps */
 184:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** #else
 185:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** typedef INT32 FSERROR;		/* may need more than 16 bits */
 186:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** typedef INT32 LOCFSERROR;	/* be sure calculation temps are big enough */
 187:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** #endif
 188:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 
 189:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** typedef FSERROR FAR *FSERRPTR;	/* pointer to error array (in FAR storage!) */
 190:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 
 191:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 
 192:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** /* Private subobject */
 193:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 
 194:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** typedef struct {
 195:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   struct jpeg_color_quantizer pub; /* public fields */
 196:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 
 197:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   /* Space for the eventually created colormap is stashed here */
 198:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   JSAMPARRAY sv_colormap;	/* colormap allocated at init time */
 199:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   int desired;			/* desired # of colors = size of colormap */
 200:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 
 201:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   /* Variables for accumulating image statistics */
 202:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   hist3d histogram;		/* pointer to the histogram */
 203:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 
ARM GAS  /tmp/ccs1isz7.s 			page 5


 204:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   boolean needs_zeroed;		/* TRUE if next pass must zero histogram */
 205:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 
 206:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   /* Variables for Floyd-Steinberg dithering */
 207:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   FSERRPTR fserrors;		/* accumulated errors */
 208:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   boolean on_odd_row;		/* flag to remember which row we are on */
 209:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   int * error_limiter;		/* table for clamping the applied error */
 210:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** } my_cquantizer;
 211:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 
 212:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** typedef my_cquantizer * my_cquantize_ptr;
 213:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 
 214:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 
 215:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** /*
 216:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****  * Prescan some rows of pixels.
 217:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****  * In this module the prescan simply updates the histogram, which has been
 218:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****  * initialized to zeroes by start_pass.
 219:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****  * An output_buf parameter is required by the method signature, but no data
 220:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****  * is actually output (in fact the buffer controller is probably passing a
 221:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****  * NULL pointer).
 222:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****  */
 223:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 
 224:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** METHODDEF(void)
 225:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** prescan_quantize (j_decompress_ptr cinfo, JSAMPARRAY input_buf,
 226:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 		  JSAMPARRAY output_buf, int num_rows)
 227:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** {
  27              		.loc 1 227 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              	.LVL0:
  32 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 24
  35              		.cfi_offset 4, -24
  36              		.cfi_offset 5, -20
  37              		.cfi_offset 6, -16
  38              		.cfi_offset 7, -12
  39              		.cfi_offset 8, -8
  40              		.cfi_offset 14, -4
 228:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   my_cquantize_ptr cquantize = (my_cquantize_ptr) cinfo->cquantize;
  41              		.loc 1 228 0
  42 0004 D0F8E021 		ldr	r2, [r0, #480]
  43              	.LVL1:
 229:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   register JSAMPROW ptr;
 230:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   register histptr histp;
 231:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   register hist3d histogram = cquantize->histogram;
  44              		.loc 1 231 0
  45 0008 9769     		ldr	r7, [r2, #24]
  46              	.LVL2:
 232:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   int row;
 233:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   JDIMENSION col;
 234:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   JDIMENSION width = cinfo->output_width;
  47              		.loc 1 234 0
  48 000a D0F870E0 		ldr	lr, [r0, #112]
  49              	.LVL3:
 235:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 
 236:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   for (row = 0; row < num_rows; row++) {
  50              		.loc 1 236 0
ARM GAS  /tmp/ccs1isz7.s 			page 6


  51 000e 4FF0000C 		mov	ip, #0
  52 0012 1AE0     		b	.L2
  53              	.LVL4:
  54              	.L4:
 237:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****     ptr = input_buf[row];
 238:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****     for (col = width; col > 0; col--) {
 239:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       /* get pixel value and index into the histogram */
 240:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       histp = & histogram[GETJSAMPLE(ptr[0]) >> C0_SHIFT]
 241:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 			 [GETJSAMPLE(ptr[1]) >> C1_SHIFT]
 242:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 			 [GETJSAMPLE(ptr[2]) >> C2_SHIFT];
 243:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       /* increment, check for overflow and undo increment if so. */
 244:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       if (++(*histp) <= 0)
 245:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 	(*histp)--;
 246:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       ptr += 3;
  55              		.loc 1 246 0 discriminator 2
  56 0014 0334     		adds	r4, r4, #3
  57              	.LVL5:
 238:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       /* get pixel value and index into the histogram */
  58              		.loc 1 238 0 discriminator 2
  59 0016 013E     		subs	r6, r6, #1
  60              	.LVL6:
  61              	.L3:
 238:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       /* get pixel value and index into the histogram */
  62              		.loc 1 238 0 is_stmt 0 discriminator 1
  63 0018 AEB1     		cbz	r6, .L8
 240:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 			 [GETJSAMPLE(ptr[1]) >> C1_SHIFT]
  64              		.loc 1 240 0 is_stmt 1
  65 001a 2278     		ldrb	r2, [r4]	@ zero_extendqisi2
  66 001c D208     		lsrs	r2, r2, #3
  67 001e 57F82220 		ldr	r2, [r7, r2, lsl #2]
 241:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 			 [GETJSAMPLE(ptr[2]) >> C2_SHIFT];
  68              		.loc 1 241 0
  69 0022 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2
  70 0024 8008     		lsrs	r0, r0, #2
  71 0026 02EB8012 		add	r2, r2, r0, lsl #6
 242:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       /* increment, check for overflow and undo increment if so. */
  72              		.loc 1 242 0
  73 002a A078     		ldrb	r0, [r4, #2]	@ zero_extendqisi2
  74 002c C008     		lsrs	r0, r0, #3
  75              	.LVL7:
 244:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 	(*histp)--;
  76              		.loc 1 244 0
  77 002e 32F81080 		ldrh	r8, [r2, r0, lsl #1]
  78 0032 08F10105 		add	r5, r8, #1
  79 0036 ADB2     		uxth	r5, r5
  80 0038 22F81050 		strh	r5, [r2, r0, lsl #1]	@ movhi
  81 003c 002D     		cmp	r5, #0
  82 003e E9D1     		bne	.L4
 245:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       ptr += 3;
  83              		.loc 1 245 0
  84 0040 22F81080 		strh	r8, [r2, r0, lsl #1]	@ movhi
  85 0044 E6E7     		b	.L4
  86              	.LVL8:
  87              	.L8:
 236:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****     ptr = input_buf[row];
  88              		.loc 1 236 0 discriminator 2
  89 0046 0CF1010C 		add	ip, ip, #1
ARM GAS  /tmp/ccs1isz7.s 			page 7


  90              	.LVL9:
  91              	.L2:
 236:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****     ptr = input_buf[row];
  92              		.loc 1 236 0 is_stmt 0 discriminator 1
  93 004a 9C45     		cmp	ip, r3
  94 004c 03DA     		bge	.L9
 237:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****     for (col = width; col > 0; col--) {
  95              		.loc 1 237 0 is_stmt 1
  96 004e 51F82C40 		ldr	r4, [r1, ip, lsl #2]
  97              	.LVL10:
 238:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       /* get pixel value and index into the histogram */
  98              		.loc 1 238 0
  99 0052 7646     		mov	r6, lr
 100 0054 E0E7     		b	.L3
 101              	.LVL11:
 102              	.L9:
 247:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****     }
 248:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   }
 249:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** }
 103              		.loc 1 249 0
 104 0056 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 105              		.cfi_endproc
 106              	.LFE3:
 108              		.section	.text.find_biggest_color_pop,"ax",%progbits
 109              		.align	1
 110              		.syntax unified
 111              		.thumb
 112              		.thumb_func
 113              		.fpu fpv5-sp-d16
 115              	find_biggest_color_pop:
 116              	.LFB4:
 250:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 
 251:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 
 252:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** /*
 253:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****  * Next we have the really interesting routines: selection of a colormap
 254:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****  * given the completed histogram.
 255:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****  * These routines work with a list of "boxes", each representing a rectangular
 256:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****  * subset of the input color space (to histogram precision).
 257:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****  */
 258:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 
 259:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** typedef struct {
 260:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   /* The bounds of the box (inclusive); expressed as histogram indexes */
 261:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   int c0min, c0max;
 262:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   int c1min, c1max;
 263:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   int c2min, c2max;
 264:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   /* The volume (actually 2-norm) of the box */
 265:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   INT32 volume;
 266:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   /* The number of nonzero histogram cells within this box */
 267:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   long colorcount;
 268:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** } box;
 269:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 
 270:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** typedef box * boxptr;
 271:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 
 272:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 
 273:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** LOCAL(boxptr)
 274:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** find_biggest_color_pop (boxptr boxlist, int numboxes)
 275:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** /* Find the splittable box with the largest color population */
ARM GAS  /tmp/ccs1isz7.s 			page 8


 276:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** /* Returns NULL if no splittable boxes remain */
 277:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** {
 117              		.loc 1 277 0
 118              		.cfi_startproc
 119              		@ args = 0, pretend = 0, frame = 0
 120              		@ frame_needed = 0, uses_anonymous_args = 0
 121              		@ link register save eliminated.
 122              	.LVL12:
 123 0000 70B4     		push	{r4, r5, r6}
 124              	.LCFI1:
 125              		.cfi_def_cfa_offset 12
 126              		.cfi_offset 4, -12
 127              		.cfi_offset 5, -8
 128              		.cfi_offset 6, -4
 129 0002 0346     		mov	r3, r0
 130              	.LVL13:
 278:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   register boxptr boxp;
 279:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   register int i;
 280:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   register long maxc = 0;
 281:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   boxptr which = NULL;
 131              		.loc 1 281 0
 132 0004 0020     		movs	r0, #0
 133              	.LVL14:
 280:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   boxptr which = NULL;
 134              		.loc 1 280 0
 135 0006 0546     		mov	r5, r0
 282:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   
 283:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   for (i = 0, boxp = boxlist; i < numboxes; i++, boxp++) {
 136              		.loc 1 283 0
 137 0008 0246     		mov	r2, r0
 138 000a 01E0     		b	.L11
 139              	.LVL15:
 140              	.L12:
 141              		.loc 1 283 0 is_stmt 0 discriminator 2
 142 000c 0132     		adds	r2, r2, #1
 143              	.LVL16:
 144 000e 2033     		adds	r3, r3, #32
 145              	.LVL17:
 146              	.L11:
 147              		.loc 1 283 0 discriminator 1
 148 0010 8A42     		cmp	r2, r1
 149 0012 08DA     		bge	.L16
 284:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****     if (boxp->colorcount > maxc && boxp->volume > 0) {
 150              		.loc 1 284 0 is_stmt 1
 151 0014 DC69     		ldr	r4, [r3, #28]
 152 0016 AC42     		cmp	r4, r5
 153 0018 F8DD     		ble	.L12
 154              		.loc 1 284 0 is_stmt 0 discriminator 1
 155 001a 9E69     		ldr	r6, [r3, #24]
 156 001c 002E     		cmp	r6, #0
 157 001e F5DD     		ble	.L12
 285:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       which = boxp;
 158              		.loc 1 285 0 is_stmt 1
 159 0020 1846     		mov	r0, r3
 160              	.LVL18:
 286:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       maxc = boxp->colorcount;
 161              		.loc 1 286 0
ARM GAS  /tmp/ccs1isz7.s 			page 9


 162 0022 2546     		mov	r5, r4
 163              	.LVL19:
 164 0024 F2E7     		b	.L12
 165              	.LVL20:
 166              	.L16:
 287:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****     }
 288:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   }
 289:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   return which;
 290:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** }
 167              		.loc 1 290 0
 168 0026 70BC     		pop	{r4, r5, r6}
 169              	.LCFI2:
 170              		.cfi_restore 6
 171              		.cfi_restore 5
 172              		.cfi_restore 4
 173              		.cfi_def_cfa_offset 0
 174              	.LVL21:
 175 0028 7047     		bx	lr
 176              		.cfi_endproc
 177              	.LFE4:
 179              		.section	.text.find_biggest_volume,"ax",%progbits
 180              		.align	1
 181              		.syntax unified
 182              		.thumb
 183              		.thumb_func
 184              		.fpu fpv5-sp-d16
 186              	find_biggest_volume:
 187              	.LFB5:
 291:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 
 292:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 
 293:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** LOCAL(boxptr)
 294:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** find_biggest_volume (boxptr boxlist, int numboxes)
 295:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** /* Find the splittable box with the largest (scaled) volume */
 296:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** /* Returns NULL if no splittable boxes remain */
 297:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** {
 188              		.loc 1 297 0
 189              		.cfi_startproc
 190              		@ args = 0, pretend = 0, frame = 0
 191              		@ frame_needed = 0, uses_anonymous_args = 0
 192              		@ link register save eliminated.
 193              	.LVL22:
 194 0000 30B4     		push	{r4, r5}
 195              	.LCFI3:
 196              		.cfi_def_cfa_offset 8
 197              		.cfi_offset 4, -8
 198              		.cfi_offset 5, -4
 199 0002 0346     		mov	r3, r0
 200              	.LVL23:
 298:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   register boxptr boxp;
 299:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   register int i;
 300:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   register INT32 maxv = 0;
 301:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   boxptr which = NULL;
 201              		.loc 1 301 0
 202 0004 0020     		movs	r0, #0
 203              	.LVL24:
 300:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   boxptr which = NULL;
 204              		.loc 1 300 0
ARM GAS  /tmp/ccs1isz7.s 			page 10


 205 0006 0546     		mov	r5, r0
 302:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   
 303:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   for (i = 0, boxp = boxlist; i < numboxes; i++, boxp++) {
 206              		.loc 1 303 0
 207 0008 0246     		mov	r2, r0
 208 000a 01E0     		b	.L18
 209              	.LVL25:
 210              	.L19:
 211              		.loc 1 303 0 is_stmt 0 discriminator 2
 212 000c 0132     		adds	r2, r2, #1
 213              	.LVL26:
 214 000e 2033     		adds	r3, r3, #32
 215              	.LVL27:
 216              	.L18:
 217              		.loc 1 303 0 discriminator 1
 218 0010 8A42     		cmp	r2, r1
 219 0012 05DA     		bge	.L23
 304:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****     if (boxp->volume > maxv) {
 220              		.loc 1 304 0 is_stmt 1
 221 0014 9C69     		ldr	r4, [r3, #24]
 222 0016 AC42     		cmp	r4, r5
 223 0018 F8DD     		ble	.L19
 305:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       which = boxp;
 224              		.loc 1 305 0
 225 001a 1846     		mov	r0, r3
 226              	.LVL28:
 306:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       maxv = boxp->volume;
 227              		.loc 1 306 0
 228 001c 2546     		mov	r5, r4
 229              	.LVL29:
 230 001e F5E7     		b	.L19
 231              	.LVL30:
 232              	.L23:
 307:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****     }
 308:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   }
 309:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   return which;
 310:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** }
 233              		.loc 1 310 0
 234 0020 30BC     		pop	{r4, r5}
 235              	.LCFI4:
 236              		.cfi_restore 5
 237              		.cfi_restore 4
 238              		.cfi_def_cfa_offset 0
 239              	.LVL31:
 240 0022 7047     		bx	lr
 241              		.cfi_endproc
 242              	.LFE5:
 244              		.section	.text.update_box,"ax",%progbits
 245              		.align	1
 246              		.syntax unified
 247              		.thumb
 248              		.thumb_func
 249              		.fpu fpv5-sp-d16
 251              	update_box:
 252              	.LFB6:
 311:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 
 312:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 
ARM GAS  /tmp/ccs1isz7.s 			page 11


 313:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** LOCAL(void)
 314:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** update_box (j_decompress_ptr cinfo, boxptr boxp)
 315:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** /* Shrink the min/max bounds of a box to enclose only nonzero elements, */
 316:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** /* and recompute its volume and population */
 317:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** {
 253              		.loc 1 317 0
 254              		.cfi_startproc
 255              		@ args = 0, pretend = 0, frame = 0
 256              		@ frame_needed = 0, uses_anonymous_args = 0
 257              	.LVL32:
 258 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 259              	.LCFI5:
 260              		.cfi_def_cfa_offset 36
 261              		.cfi_offset 4, -36
 262              		.cfi_offset 5, -32
 263              		.cfi_offset 6, -28
 264              		.cfi_offset 7, -24
 265              		.cfi_offset 8, -20
 266              		.cfi_offset 9, -16
 267              		.cfi_offset 10, -12
 268              		.cfi_offset 11, -8
 269              		.cfi_offset 14, -4
 270 0004 8B46     		mov	fp, r1
 318:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   my_cquantize_ptr cquantize = (my_cquantize_ptr) cinfo->cquantize;
 271              		.loc 1 318 0
 272 0006 D0F8E031 		ldr	r3, [r0, #480]
 273              	.LVL33:
 319:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   hist3d histogram = cquantize->histogram;
 274              		.loc 1 319 0
 275 000a 9E69     		ldr	r6, [r3, #24]
 276              	.LVL34:
 320:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   histptr histp;
 321:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   int c0,c1,c2;
 322:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   int c0min,c0max,c1min,c1max,c2min,c2max;
 323:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   INT32 dist0,dist1,dist2;
 324:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   long ccount;
 325:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   
 326:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   c0min = boxp->c0min;  c0max = boxp->c0max;
 277              		.loc 1 326 0
 278 000c 0D68     		ldr	r5, [r1]
 279              	.LVL35:
 280 000e 4F68     		ldr	r7, [r1, #4]
 281              	.LVL36:
 327:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   c1min = boxp->c1min;  c1max = boxp->c1max;
 282              		.loc 1 327 0
 283 0010 D1F808C0 		ldr	ip, [r1, #8]
 284              	.LVL37:
 285 0014 CC68     		ldr	r4, [r1, #12]
 286              	.LVL38:
 328:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   c2min = boxp->c2min;  c2max = boxp->c2max;
 287              		.loc 1 328 0
 288 0016 0869     		ldr	r0, [r1, #16]
 289              	.LVL39:
 290 0018 4A69     		ldr	r2, [r1, #20]
 291              	.LVL40:
 329:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   
 330:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   if (c0max > c0min)
ARM GAS  /tmp/ccs1isz7.s 			page 12


 292              		.loc 1 330 0
 293 001a BD42     		cmp	r5, r7
 294 001c 2DDB     		blt	.L73
 295              	.LVL41:
 296              	.L26:
 331:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****     for (c0 = c0min; c0 <= c0max; c0++)
 332:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       for (c1 = c1min; c1 <= c1max; c1++) {
 333:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 	histp = & histogram[c0][c1][c2min];
 334:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 	for (c2 = c2min; c2 <= c2max; c2++)
 335:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 	  if (*histp++ != 0) {
 336:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 	    boxp->c0min = c0min = c0;
 337:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 	    goto have_c0min;
 338:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 	  }
 339:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       }
 340:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****  have_c0min:
 341:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   if (c0max > c0min)
 297              		.loc 1 341 0
 298 001e BD42     		cmp	r5, r7
 299 0020 4DDB     		blt	.L75
 300              	.L33:
 342:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****     for (c0 = c0max; c0 >= c0min; c0--)
 343:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       for (c1 = c1min; c1 <= c1max; c1++) {
 344:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 	histp = & histogram[c0][c1][c2min];
 345:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 	for (c2 = c2min; c2 <= c2max; c2++)
 346:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 	  if (*histp++ != 0) {
 347:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 	    boxp->c0max = c0max = c0;
 348:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 	    goto have_c0max;
 349:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 	  }
 350:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       }
 351:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****  have_c0max:
 352:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   if (c1max > c1min)
 301              		.loc 1 352 0
 302 0022 A445     		cmp	ip, r4
 303 0024 6DDB     		blt	.L77
 304              	.L40:
 353:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****     for (c1 = c1min; c1 <= c1max; c1++)
 354:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       for (c0 = c0min; c0 <= c0max; c0++) {
 355:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 	histp = & histogram[c0][c1][c2min];
 356:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 	for (c2 = c2min; c2 <= c2max; c2++)
 357:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 	  if (*histp++ != 0) {
 358:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 	    boxp->c1min = c1min = c1;
 359:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 	    goto have_c1min;
 360:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 	  }
 361:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       }
 362:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****  have_c1min:
 363:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   if (c1max > c1min)
 305              		.loc 1 363 0
 306 0026 A445     		cmp	ip, r4
 307 0028 C0F28D80 		blt	.L79
 308              	.L47:
 364:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****     for (c1 = c1max; c1 >= c1min; c1--)
 365:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       for (c0 = c0min; c0 <= c0max; c0++) {
 366:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 	histp = & histogram[c0][c1][c2min];
 367:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 	for (c2 = c2min; c2 <= c2max; c2++)
 368:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 	  if (*histp++ != 0) {
 369:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 	    boxp->c1max = c1max = c1;
 370:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 	    goto have_c1max;
ARM GAS  /tmp/ccs1isz7.s 			page 13


 371:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 	  }
 372:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       }
 373:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****  have_c1max:
 374:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   if (c2max > c2min)
 309              		.loc 1 374 0
 310 002c 9042     		cmp	r0, r2
 311 002e C0F2AD80 		blt	.L81
 312              	.LVL42:
 313              	.L54:
 375:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****     for (c2 = c2min; c2 <= c2max; c2++)
 376:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       for (c0 = c0min; c0 <= c0max; c0++) {
 377:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 	histp = & histogram[c0][c1min][c2];
 378:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 	for (c1 = c1min; c1 <= c1max; c1++, histp += HIST_C2_ELEMS)
 379:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 	  if (*histp != 0) {
 380:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 	    boxp->c2min = c2min = c2;
 381:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 	    goto have_c2min;
 382:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 	  }
 383:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       }
 384:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****  have_c2min:
 385:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   if (c2max > c2min)
 314              		.loc 1 385 0
 315 0032 9042     		cmp	r0, r2
 316 0034 C0F2CB80 		blt	.L83
 317              	.L61:
 386:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****     for (c2 = c2max; c2 >= c2min; c2--)
 387:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       for (c0 = c0min; c0 <= c0max; c0++) {
 388:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 	histp = & histogram[c0][c1min][c2];
 389:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 	for (c1 = c1min; c1 <= c1max; c1++, histp += HIST_C2_ELEMS)
 390:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 	  if (*histp != 0) {
 391:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 	    boxp->c2max = c2max = c2;
 392:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 	    goto have_c2max;
 393:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 	  }
 394:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       }
 395:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****  have_c2max:
 396:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 
 397:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   /* Update box volume.
 398:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****    * We use 2-norm rather than real volume here; this biases the method
 399:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****    * against making long narrow boxes, and it has the side benefit that
 400:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****    * a box is splittable iff norm > 0.
 401:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****    * Since the differences are expressed in histogram-cell units,
 402:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****    * we have to shift back to JSAMPLE units to get consistent distances;
 403:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****    * after which, we scale according to the selected distance scale factors.
 404:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****    */
 405:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   dist0 = ((c0max - c0min) << C0_SHIFT) * C0_SCALE;
 318              		.loc 1 405 0
 319 0038 A7EB050E 		sub	lr, r7, r5
 320 003c 4FEA0E1E 		lsl	lr, lr, #4
 321              	.LVL43:
 406:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   dist1 = ((c1max - c1min) << C1_SHIFT) * C1_SCALE;
 322              		.loc 1 406 0
 323 0040 A4EB0C03 		sub	r3, r4, ip
 324 0044 4FEAC308 		lsl	r8, r3, #3
 325 0048 08EB8308 		add	r8, r8, r3, lsl #2
 326              	.LVL44:
 407:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   dist2 = ((c2max - c2min) << C2_SHIFT) * C2_SCALE;
 327              		.loc 1 407 0
 328 004c 131A     		subs	r3, r2, r0
ARM GAS  /tmp/ccs1isz7.s 			page 14


 329 004e DB00     		lsls	r3, r3, #3
 330              	.LVL45:
 408:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   boxp->volume = dist0*dist0 + dist1*dist1 + dist2*dist2;
 331              		.loc 1 408 0
 332 0050 08FB08F8 		mul	r8, r8, r8
 333              	.LVL46:
 334 0054 0EFB0E8E 		mla	lr, lr, lr, r8
 335              	.LVL47:
 336 0058 03FB03E3 		mla	r3, r3, r3, lr
 337              	.LVL48:
 338 005c CBF81830 		str	r3, [fp, #24]
 339              	.LVL49:
 409:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   
 410:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   /* Now scan remaining volume of box and compute population */
 411:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   ccount = 0;
 340              		.loc 1 411 0
 341 0060 4FF00008 		mov	r8, #0
 412:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   for (c0 = c0min; c0 <= c0max; c0++)
 342              		.loc 1 412 0
 343 0064 E2E0     		b	.L67
 344              	.LVL50:
 345              	.L89:
 336:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 	    goto have_c0min;
 346              		.loc 1 336 0
 347 0066 CBF80080 		str	r8, [fp]
 348              	.LVL51:
 349 006a 4546     		mov	r5, r8
 337:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 	  }
 350              		.loc 1 337 0
 351 006c D7E7     		b	.L26
 352              	.LVL52:
 353              	.L88:
 332:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 	histp = & histogram[c0][c1][c2min];
 354              		.loc 1 332 0 discriminator 2
 355 006e 09F10109 		add	r9, r9, #1
 356              	.LVL53:
 357 0072 06E0     		b	.L31
 358              	.LVL54:
 359              	.L87:
 331:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       for (c1 = c1min; c1 <= c1max; c1++) {
 360              		.loc 1 331 0 discriminator 2
 361 0074 08F10108 		add	r8, r8, #1
 362              	.LVL55:
 363 0078 00E0     		b	.L25
 364              	.LVL56:
 365              	.L73:
 331:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       for (c1 = c1min; c1 <= c1max; c1++) {
 366              		.loc 1 331 0 is_stmt 0
 367 007a A846     		mov	r8, r5
 368              	.LVL57:
 369              	.L25:
 331:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       for (c1 = c1min; c1 <= c1max; c1++) {
 370              		.loc 1 331 0 discriminator 1
 371 007c B845     		cmp	r8, r7
 372 007e CEDC     		bgt	.L26
 332:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 	histp = & histogram[c0][c1][c2min];
 373              		.loc 1 332 0 is_stmt 1
ARM GAS  /tmp/ccs1isz7.s 			page 15


 374 0080 E146     		mov	r9, ip
 375              	.L31:
 376              	.LVL58:
 332:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 	histp = & histogram[c0][c1][c2min];
 377              		.loc 1 332 0 is_stmt 0 discriminator 1
 378 0082 A145     		cmp	r9, r4
 379 0084 F6DC     		bgt	.L87
 333:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 	for (c2 = c2min; c2 <= c2max; c2++)
 380              		.loc 1 333 0 is_stmt 1
 381 0086 56F82830 		ldr	r3, [r6, r8, lsl #2]
 382 008a 03EB8913 		add	r3, r3, r9, lsl #6
 383 008e 03EB4003 		add	r3, r3, r0, lsl #1
 384              	.LVL59:
 334:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 	  if (*histp++ != 0) {
 385              		.loc 1 334 0
 386 0092 8646     		mov	lr, r0
 387              	.LVL60:
 388              	.L27:
 334:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 	  if (*histp++ != 0) {
 389              		.loc 1 334 0 is_stmt 0 discriminator 1
 390 0094 9645     		cmp	lr, r2
 391 0096 EADC     		bgt	.L88
 335:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 	    boxp->c0min = c0min = c0;
 392              		.loc 1 335 0 is_stmt 1
 393 0098 03F1020A 		add	r10, r3, #2
 394              	.LVL61:
 395 009c 1B88     		ldrh	r3, [r3]
 396 009e 002B     		cmp	r3, #0
 397 00a0 E1D1     		bne	.L89
 334:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 	  if (*histp++ != 0) {
 398              		.loc 1 334 0 discriminator 2
 399 00a2 0EF1010E 		add	lr, lr, #1
 400              	.LVL62:
 335:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 	    boxp->c0min = c0min = c0;
 401              		.loc 1 335 0 discriminator 2
 402 00a6 5346     		mov	r3, r10
 403 00a8 F4E7     		b	.L27
 404              	.LVL63:
 405              	.L92:
 347:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 	    goto have_c0max;
 406              		.loc 1 347 0
 407 00aa CBF80480 		str	r8, [fp, #4]
 408 00ae 4746     		mov	r7, r8
 348:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 	  }
 409              		.loc 1 348 0
 410 00b0 B7E7     		b	.L33
 411              	.LVL64:
 412              	.L91:
 343:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 	histp = & histogram[c0][c1][c2min];
 413              		.loc 1 343 0 discriminator 2
 414 00b2 09F10109 		add	r9, r9, #1
 415              	.LVL65:
 416 00b6 06E0     		b	.L38
 417              	.LVL66:
 418              	.L90:
 342:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       for (c1 = c1min; c1 <= c1max; c1++) {
 419              		.loc 1 342 0 discriminator 2
ARM GAS  /tmp/ccs1isz7.s 			page 16


 420 00b8 08F1FF38 		add	r8, r8, #-1
 421              	.LVL67:
 422 00bc 00E0     		b	.L32
 423              	.LVL68:
 424              	.L75:
 342:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       for (c1 = c1min; c1 <= c1max; c1++) {
 425              		.loc 1 342 0 is_stmt 0
 426 00be B846     		mov	r8, r7
 427              	.L32:
 428              	.LVL69:
 342:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       for (c1 = c1min; c1 <= c1max; c1++) {
 429              		.loc 1 342 0 discriminator 1
 430 00c0 A845     		cmp	r8, r5
 431 00c2 AEDB     		blt	.L33
 343:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 	histp = & histogram[c0][c1][c2min];
 432              		.loc 1 343 0 is_stmt 1
 433 00c4 E146     		mov	r9, ip
 434              	.L38:
 435              	.LVL70:
 343:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 	histp = & histogram[c0][c1][c2min];
 436              		.loc 1 343 0 is_stmt 0 discriminator 1
 437 00c6 A145     		cmp	r9, r4
 438 00c8 F6DC     		bgt	.L90
 344:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 	for (c2 = c2min; c2 <= c2max; c2++)
 439              		.loc 1 344 0 is_stmt 1
 440 00ca 56F82830 		ldr	r3, [r6, r8, lsl #2]
 441 00ce 03EB8913 		add	r3, r3, r9, lsl #6
 442 00d2 03EB4003 		add	r3, r3, r0, lsl #1
 443              	.LVL71:
 345:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 	  if (*histp++ != 0) {
 444              		.loc 1 345 0
 445 00d6 8646     		mov	lr, r0
 446              	.LVL72:
 447              	.L34:
 345:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 	  if (*histp++ != 0) {
 448              		.loc 1 345 0 is_stmt 0 discriminator 1
 449 00d8 9645     		cmp	lr, r2
 450 00da EADC     		bgt	.L91
 346:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 	    boxp->c0max = c0max = c0;
 451              		.loc 1 346 0 is_stmt 1
 452 00dc 03F1020A 		add	r10, r3, #2
 453              	.LVL73:
 454 00e0 1B88     		ldrh	r3, [r3]
 455 00e2 002B     		cmp	r3, #0
 456 00e4 E1D1     		bne	.L92
 345:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 	  if (*histp++ != 0) {
 457              		.loc 1 345 0 discriminator 2
 458 00e6 0EF1010E 		add	lr, lr, #1
 459              	.LVL74:
 346:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 	    boxp->c0max = c0max = c0;
 460              		.loc 1 346 0 discriminator 2
 461 00ea 5346     		mov	r3, r10
 462 00ec F4E7     		b	.L34
 463              	.LVL75:
 464              	.L95:
 358:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 	    goto have_c1min;
 465              		.loc 1 358 0
ARM GAS  /tmp/ccs1isz7.s 			page 17


 466 00ee CBF80880 		str	r8, [fp, #8]
 467 00f2 C446     		mov	ip, r8
 359:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 	  }
 468              		.loc 1 359 0
 469 00f4 97E7     		b	.L40
 470              	.LVL76:
 471              	.L94:
 354:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 	histp = & histogram[c0][c1][c2min];
 472              		.loc 1 354 0 discriminator 2
 473 00f6 09F10109 		add	r9, r9, #1
 474              	.LVL77:
 475 00fa 06E0     		b	.L45
 476              	.LVL78:
 477              	.L93:
 353:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       for (c0 = c0min; c0 <= c0max; c0++) {
 478              		.loc 1 353 0 discriminator 2
 479 00fc 08F10108 		add	r8, r8, #1
 480              	.LVL79:
 481 0100 00E0     		b	.L39
 482              	.LVL80:
 483              	.L77:
 353:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       for (c0 = c0min; c0 <= c0max; c0++) {
 484              		.loc 1 353 0 is_stmt 0
 485 0102 E046     		mov	r8, ip
 486              	.L39:
 487              	.LVL81:
 353:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       for (c0 = c0min; c0 <= c0max; c0++) {
 488              		.loc 1 353 0 discriminator 1
 489 0104 A045     		cmp	r8, r4
 490 0106 8EDC     		bgt	.L40
 354:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 	histp = & histogram[c0][c1][c2min];
 491              		.loc 1 354 0 is_stmt 1
 492 0108 A946     		mov	r9, r5
 493              	.L45:
 494              	.LVL82:
 354:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 	histp = & histogram[c0][c1][c2min];
 495              		.loc 1 354 0 is_stmt 0 discriminator 1
 496 010a B945     		cmp	r9, r7
 497 010c F6DC     		bgt	.L93
 355:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 	for (c2 = c2min; c2 <= c2max; c2++)
 498              		.loc 1 355 0 is_stmt 1
 499 010e 56F82930 		ldr	r3, [r6, r9, lsl #2]
 500 0112 03EB8813 		add	r3, r3, r8, lsl #6
 501 0116 03EB4003 		add	r3, r3, r0, lsl #1
 502              	.LVL83:
 356:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 	  if (*histp++ != 0) {
 503              		.loc 1 356 0
 504 011a 8646     		mov	lr, r0
 505              	.LVL84:
 506              	.L41:
 356:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 	  if (*histp++ != 0) {
 507              		.loc 1 356 0 is_stmt 0 discriminator 1
 508 011c 9645     		cmp	lr, r2
 509 011e EADC     		bgt	.L94
 357:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 	    boxp->c1min = c1min = c1;
 510              		.loc 1 357 0 is_stmt 1
 511 0120 03F1020A 		add	r10, r3, #2
ARM GAS  /tmp/ccs1isz7.s 			page 18


 512              	.LVL85:
 513 0124 1B88     		ldrh	r3, [r3]
 514 0126 002B     		cmp	r3, #0
 515 0128 E1D1     		bne	.L95
 356:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 	  if (*histp++ != 0) {
 516              		.loc 1 356 0 discriminator 2
 517 012a 0EF1010E 		add	lr, lr, #1
 518              	.LVL86:
 357:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 	    boxp->c1min = c1min = c1;
 519              		.loc 1 357 0 discriminator 2
 520 012e 5346     		mov	r3, r10
 521 0130 F4E7     		b	.L41
 522              	.L98:
 523              	.LVL87:
 369:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 	    goto have_c1max;
 524              		.loc 1 369 0
 525 0132 CBF80C80 		str	r8, [fp, #12]
 526 0136 4446     		mov	r4, r8
 370:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 	  }
 527              		.loc 1 370 0
 528 0138 78E7     		b	.L47
 529              	.LVL88:
 530              	.L97:
 365:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 	histp = & histogram[c0][c1][c2min];
 531              		.loc 1 365 0 discriminator 2
 532 013a 09F10109 		add	r9, r9, #1
 533              	.LVL89:
 534 013e 07E0     		b	.L52
 535              	.LVL90:
 536              	.L96:
 364:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       for (c0 = c0min; c0 <= c0max; c0++) {
 537              		.loc 1 364 0 discriminator 2
 538 0140 08F1FF38 		add	r8, r8, #-1
 539              	.LVL91:
 540 0144 00E0     		b	.L46
 541              	.LVL92:
 542              	.L79:
 364:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       for (c0 = c0min; c0 <= c0max; c0++) {
 543              		.loc 1 364 0 is_stmt 0
 544 0146 A046     		mov	r8, r4
 545              	.L46:
 546              	.LVL93:
 364:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       for (c0 = c0min; c0 <= c0max; c0++) {
 547              		.loc 1 364 0 discriminator 1
 548 0148 E045     		cmp	r8, ip
 549 014a FFF66FAF 		blt	.L47
 365:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 	histp = & histogram[c0][c1][c2min];
 550              		.loc 1 365 0 is_stmt 1
 551 014e A946     		mov	r9, r5
 552              	.L52:
 553              	.LVL94:
 365:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 	histp = & histogram[c0][c1][c2min];
 554              		.loc 1 365 0 is_stmt 0 discriminator 1
 555 0150 B945     		cmp	r9, r7
 556 0152 F5DC     		bgt	.L96
 366:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 	for (c2 = c2min; c2 <= c2max; c2++)
 557              		.loc 1 366 0 is_stmt 1
ARM GAS  /tmp/ccs1isz7.s 			page 19


 558 0154 56F82930 		ldr	r3, [r6, r9, lsl #2]
 559 0158 03EB8813 		add	r3, r3, r8, lsl #6
 560 015c 03EB4003 		add	r3, r3, r0, lsl #1
 561              	.LVL95:
 367:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 	  if (*histp++ != 0) {
 562              		.loc 1 367 0
 563 0160 8646     		mov	lr, r0
 564              	.LVL96:
 565              	.L48:
 367:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 	  if (*histp++ != 0) {
 566              		.loc 1 367 0 is_stmt 0 discriminator 1
 567 0162 9645     		cmp	lr, r2
 568 0164 E9DC     		bgt	.L97
 368:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 	    boxp->c1max = c1max = c1;
 569              		.loc 1 368 0 is_stmt 1
 570 0166 03F1020A 		add	r10, r3, #2
 571              	.LVL97:
 572 016a 1B88     		ldrh	r3, [r3]
 573 016c 002B     		cmp	r3, #0
 574 016e E0D1     		bne	.L98
 367:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 	  if (*histp++ != 0) {
 575              		.loc 1 367 0 discriminator 2
 576 0170 0EF1010E 		add	lr, lr, #1
 577              	.LVL98:
 368:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 	    boxp->c1max = c1max = c1;
 578              		.loc 1 368 0 discriminator 2
 579 0174 5346     		mov	r3, r10
 580 0176 F4E7     		b	.L48
 581              	.LVL99:
 582              	.L101:
 380:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 	    goto have_c2min;
 583              		.loc 1 380 0
 584 0178 CBF81080 		str	r8, [fp, #16]
 585 017c 4046     		mov	r0, r8
 381:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 	  }
 586              		.loc 1 381 0
 587 017e 58E7     		b	.L54
 588              	.LVL100:
 589              	.L100:
 376:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 	histp = & histogram[c0][c1min][c2];
 590              		.loc 1 376 0 discriminator 2
 591 0180 09F10109 		add	r9, r9, #1
 592              	.LVL101:
 593 0184 07E0     		b	.L59
 594              	.LVL102:
 595              	.L99:
 375:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       for (c0 = c0min; c0 <= c0max; c0++) {
 596              		.loc 1 375 0 discriminator 2
 597 0186 08F10108 		add	r8, r8, #1
 598              	.LVL103:
 599 018a 00E0     		b	.L53
 600              	.LVL104:
 601              	.L81:
 375:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       for (c0 = c0min; c0 <= c0max; c0++) {
 602              		.loc 1 375 0 is_stmt 0
 603 018c 8046     		mov	r8, r0
 604              	.LVL105:
ARM GAS  /tmp/ccs1isz7.s 			page 20


 605              	.L53:
 375:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       for (c0 = c0min; c0 <= c0max; c0++) {
 606              		.loc 1 375 0 discriminator 1
 607 018e 9045     		cmp	r8, r2
 608 0190 3FF74FAF 		bgt	.L54
 376:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 	histp = & histogram[c0][c1min][c2];
 609              		.loc 1 376 0 is_stmt 1
 610 0194 A946     		mov	r9, r5
 611              	.L59:
 612              	.LVL106:
 376:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 	histp = & histogram[c0][c1min][c2];
 613              		.loc 1 376 0 is_stmt 0 discriminator 1
 614 0196 B945     		cmp	r9, r7
 615 0198 F5DC     		bgt	.L99
 377:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 	for (c1 = c1min; c1 <= c1max; c1++, histp += HIST_C2_ELEMS)
 616              		.loc 1 377 0 is_stmt 1
 617 019a 56F82930 		ldr	r3, [r6, r9, lsl #2]
 618 019e 03EB8C13 		add	r3, r3, ip, lsl #6
 619 01a2 03EB4803 		add	r3, r3, r8, lsl #1
 620              	.LVL107:
 378:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 	  if (*histp != 0) {
 621              		.loc 1 378 0
 622 01a6 E646     		mov	lr, ip
 623              	.LVL108:
 624              	.L55:
 378:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 	  if (*histp != 0) {
 625              		.loc 1 378 0 is_stmt 0 discriminator 1
 626 01a8 A645     		cmp	lr, r4
 627 01aa E9DC     		bgt	.L100
 379:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 	    boxp->c2min = c2min = c2;
 628              		.loc 1 379 0 is_stmt 1
 629 01ac 1988     		ldrh	r1, [r3]
 630 01ae 0029     		cmp	r1, #0
 631 01b0 E2D1     		bne	.L101
 378:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 	  if (*histp != 0) {
 632              		.loc 1 378 0 discriminator 2
 633 01b2 0EF1010E 		add	lr, lr, #1
 634              	.LVL109:
 635 01b6 4033     		adds	r3, r3, #64
 636              	.LVL110:
 637 01b8 F6E7     		b	.L55
 638              	.L104:
 639              	.LVL111:
 391:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 	    goto have_c2max;
 640              		.loc 1 391 0
 641 01ba CBF81480 		str	r8, [fp, #20]
 642 01be 4246     		mov	r2, r8
 392:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 	  }
 643              		.loc 1 392 0
 644 01c0 3AE7     		b	.L61
 645              	.LVL112:
 646              	.L103:
 387:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 	histp = & histogram[c0][c1min][c2];
 647              		.loc 1 387 0 discriminator 2
 648 01c2 09F10109 		add	r9, r9, #1
 649              	.LVL113:
 650 01c6 07E0     		b	.L66
ARM GAS  /tmp/ccs1isz7.s 			page 21


 651              	.LVL114:
 652              	.L102:
 386:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       for (c0 = c0min; c0 <= c0max; c0++) {
 653              		.loc 1 386 0 discriminator 2
 654 01c8 08F1FF38 		add	r8, r8, #-1
 655              	.LVL115:
 656 01cc 00E0     		b	.L60
 657              	.LVL116:
 658              	.L83:
 386:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       for (c0 = c0min; c0 <= c0max; c0++) {
 659              		.loc 1 386 0 is_stmt 0
 660 01ce 9046     		mov	r8, r2
 661              	.L60:
 662              	.LVL117:
 386:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       for (c0 = c0min; c0 <= c0max; c0++) {
 663              		.loc 1 386 0 discriminator 1
 664 01d0 8045     		cmp	r8, r0
 665 01d2 FFF631AF 		blt	.L61
 387:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 	histp = & histogram[c0][c1min][c2];
 666              		.loc 1 387 0 is_stmt 1
 667 01d6 A946     		mov	r9, r5
 668              	.L66:
 669              	.LVL118:
 387:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 	histp = & histogram[c0][c1min][c2];
 670              		.loc 1 387 0 is_stmt 0 discriminator 1
 671 01d8 B945     		cmp	r9, r7
 672 01da F5DC     		bgt	.L102
 388:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 	for (c1 = c1min; c1 <= c1max; c1++, histp += HIST_C2_ELEMS)
 673              		.loc 1 388 0 is_stmt 1
 674 01dc 56F82930 		ldr	r3, [r6, r9, lsl #2]
 675 01e0 03EB8C13 		add	r3, r3, ip, lsl #6
 676 01e4 03EB4803 		add	r3, r3, r8, lsl #1
 677              	.LVL119:
 389:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 	  if (*histp != 0) {
 678              		.loc 1 389 0
 679 01e8 E646     		mov	lr, ip
 680              	.LVL120:
 681              	.L62:
 389:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 	  if (*histp != 0) {
 682              		.loc 1 389 0 is_stmt 0 discriminator 1
 683 01ea A645     		cmp	lr, r4
 684 01ec E9DC     		bgt	.L103
 390:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 	    boxp->c2max = c2max = c2;
 685              		.loc 1 390 0 is_stmt 1
 686 01ee 1988     		ldrh	r1, [r3]
 687 01f0 0029     		cmp	r1, #0
 688 01f2 E2D1     		bne	.L104
 389:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 	  if (*histp != 0) {
 689              		.loc 1 389 0 discriminator 2
 690 01f4 0EF1010E 		add	lr, lr, #1
 691              	.LVL121:
 692 01f8 4033     		adds	r3, r3, #64
 693              	.LVL122:
 694 01fa F6E7     		b	.L62
 695              	.LVL123:
 696              	.L69:
 413:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****     for (c1 = c1min; c1 <= c1max; c1++) {
ARM GAS  /tmp/ccs1isz7.s 			page 22


 414:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       histp = & histogram[c0][c1][c2min];
 415:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       for (c2 = c2min; c2 <= c2max; c2++, histp++)
 697              		.loc 1 415 0 discriminator 2
 698 01fc 0EF1010E 		add	lr, lr, #1
 699              	.LVL124:
 700 0200 0233     		adds	r3, r3, #2
 701              	.LVL125:
 702              	.L68:
 703              		.loc 1 415 0 is_stmt 0 discriminator 1
 704 0202 9645     		cmp	lr, r2
 705 0204 05DC     		bgt	.L105
 416:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 	if (*histp != 0) {
 706              		.loc 1 416 0 is_stmt 1
 707 0206 1988     		ldrh	r1, [r3]
 708 0208 0029     		cmp	r1, #0
 709 020a F7D0     		beq	.L69
 417:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 	  ccount++;
 710              		.loc 1 417 0
 711 020c 08F10108 		add	r8, r8, #1
 712              	.LVL126:
 713 0210 F4E7     		b	.L69
 714              	.L105:
 413:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****     for (c1 = c1min; c1 <= c1max; c1++) {
 715              		.loc 1 413 0 discriminator 2
 716 0212 09F10109 		add	r9, r9, #1
 717              	.LVL127:
 718              	.L72:
 413:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****     for (c1 = c1min; c1 <= c1max; c1++) {
 719              		.loc 1 413 0 is_stmt 0 discriminator 1
 720 0216 A145     		cmp	r9, r4
 721 0218 07DC     		bgt	.L106
 414:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       for (c2 = c2min; c2 <= c2max; c2++, histp++)
 722              		.loc 1 414 0 is_stmt 1
 723 021a 56F82530 		ldr	r3, [r6, r5, lsl #2]
 724 021e 03EB8913 		add	r3, r3, r9, lsl #6
 725 0222 03EB4003 		add	r3, r3, r0, lsl #1
 726              	.LVL128:
 415:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 	if (*histp != 0) {
 727              		.loc 1 415 0
 728 0226 8646     		mov	lr, r0
 729 0228 EBE7     		b	.L68
 730              	.LVL129:
 731              	.L106:
 412:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****     for (c1 = c1min; c1 <= c1max; c1++) {
 732              		.loc 1 412 0 discriminator 2
 733 022a 0135     		adds	r5, r5, #1
 734              	.LVL130:
 735              	.L67:
 412:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****     for (c1 = c1min; c1 <= c1max; c1++) {
 736              		.loc 1 412 0 is_stmt 0 discriminator 1
 737 022c BD42     		cmp	r5, r7
 738 022e 01DC     		bgt	.L107
 413:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       histp = & histogram[c0][c1][c2min];
 739              		.loc 1 413 0 is_stmt 1
 740 0230 E146     		mov	r9, ip
 741 0232 F0E7     		b	.L72
 742              	.L107:
ARM GAS  /tmp/ccs1isz7.s 			page 23


 418:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 	}
 419:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****     }
 420:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   boxp->colorcount = ccount;
 743              		.loc 1 420 0
 744 0234 CBF81C80 		str	r8, [fp, #28]
 421:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** }
 745              		.loc 1 421 0
 746 0238 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 747              		.cfi_endproc
 748              	.LFE6:
 750              		.section	.text.median_cut,"ax",%progbits
 751              		.align	1
 752              		.syntax unified
 753              		.thumb
 754              		.thumb_func
 755              		.fpu fpv5-sp-d16
 757              	median_cut:
 758              	.LFB7:
 422:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 
 423:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 
 424:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** LOCAL(int)
 425:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** median_cut (j_decompress_ptr cinfo, boxptr boxlist, int numboxes,
 426:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 	    int desired_colors)
 427:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** /* Repeatedly select and split the largest box until we have enough boxes */
 428:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** {
 759              		.loc 1 428 0
 760              		.cfi_startproc
 761              		@ args = 0, pretend = 0, frame = 8
 762              		@ frame_needed = 0, uses_anonymous_args = 0
 763              	.LVL131:
 764 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 765              	.LCFI6:
 766              		.cfi_def_cfa_offset 36
 767              		.cfi_offset 4, -36
 768              		.cfi_offset 5, -32
 769              		.cfi_offset 6, -28
 770              		.cfi_offset 7, -24
 771              		.cfi_offset 8, -20
 772              		.cfi_offset 9, -16
 773              		.cfi_offset 10, -12
 774              		.cfi_offset 11, -8
 775              		.cfi_offset 14, -4
 776 0004 83B0     		sub	sp, sp, #12
 777              	.LCFI7:
 778              		.cfi_def_cfa_offset 48
 779 0006 0090     		str	r0, [sp]
 780 0008 8946     		mov	r9, r1
 781 000a 1546     		mov	r5, r2
 782 000c 1F46     		mov	r7, r3
 429:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   int n,lb;
 430:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   int c0,c1,c2,cmax;
 431:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   register boxptr b1,b2;
 432:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 
 433:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   while (numboxes < desired_colors) {
 783              		.loc 1 433 0
 784 000e 27E0     		b	.L109
 785              	.LVL132:
ARM GAS  /tmp/ccs1isz7.s 			page 24


 786              	.L110:
 434:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****     /* Select box to split.
 435:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****      * Current algorithm: by population for first half, then by volume.
 436:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****      */
 437:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****     if (numboxes*2 <= desired_colors) {
 438:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       b1 = find_biggest_color_pop(boxlist, numboxes);
 439:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****     } else {
 440:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       b1 = find_biggest_volume(boxlist, numboxes);
 787              		.loc 1 440 0
 788 0010 2946     		mov	r1, r5
 789 0012 4846     		mov	r0, r9
 790 0014 FFF7FEFF 		bl	find_biggest_volume
 791              	.LVL133:
 792 0018 2BE0     		b	.L111
 793              	.LVL134:
 794              	.L122:
 441:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****     }
 442:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****     if (b1 == NULL)		/* no splittable boxes left! */
 443:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       break;
 444:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****     b2 = &boxlist[numboxes];	/* where new box will go */
 445:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****     /* Copy the color bounds to the new box. */
 446:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****     b2->c0max = b1->c0max; b2->c1max = b1->c1max; b2->c2max = b1->c2max;
 447:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****     b2->c0min = b1->c0min; b2->c1min = b1->c1min; b2->c2min = b1->c2min;
 448:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****     /* Choose which axis to split the box on.
 449:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****      * Current algorithm: longest scaled axis.
 450:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****      * See notes in update_box about scaling distances.
 451:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****      */
 452:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****     c0 = ((b1->c0max - b1->c0min) << C0_SHIFT) * C0_SCALE;
 453:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****     c1 = ((b1->c1max - b1->c1min) << C1_SHIFT) * C1_SCALE;
 454:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****     c2 = ((b1->c2max - b1->c2min) << C2_SHIFT) * C2_SCALE;
 455:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****     /* We want to break any ties in favor of green, then red, blue last.
 456:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****      * This code does the right thing for R,G,B or B,G,R color orders only.
 457:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****      */
 458:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** #if RGB_RED == 0
 459:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****     cmax = c1; n = 1;
 460:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****     if (c0 > cmax) { cmax = c0; n = 0; }
 795              		.loc 1 460 0
 796 001a 0021     		movs	r1, #0
 797              	.LVL135:
 798 001c 56E0     		b	.L113
 799              	.LVL136:
 800              	.L126:
 461:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****     if (c2 > cmax) { n = 2; }
 462:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** #else
 463:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****     cmax = c1; n = 1;
 464:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****     if (c2 > cmax) { cmax = c2; n = 2; }
 465:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****     if (c0 > cmax) { n = 0; }
 466:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** #endif
 467:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****     /* Choose split point along selected axis, and update box bounds.
 468:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****      * Current algorithm: split at halfway point.
 469:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****      * (Since the box has been shrunk to minimum volume,
 470:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****      * any split will produce two nonempty subboxes.)
 471:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****      * Note that lb value is max for lower box, so must be < old max.
 472:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****      */
 473:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****     switch (n) {
 474:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****     case 0:
 475:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       lb = (b1->c0max + b1->c0min) / 2;
ARM GAS  /tmp/ccs1isz7.s 			page 25


 801              		.loc 1 475 0
 802 001e 08F10108 		add	r8, r8, #1
 803 0022 5CE0     		b	.L118
 804              	.LVL137:
 805              	.L116:
 476:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       b1->c0max = lb;
 477:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       b2->c0min = lb+1;
 478:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       break;
 479:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****     case 1:
 480:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       lb = (b1->c1max + b1->c1min) / 2;
 806              		.loc 1 480 0
 807 0024 019B     		ldr	r3, [sp, #4]
 808 0026 1EEB030E 		adds	lr, lr, r3
 809              	.LVL138:
 810 002a 05D4     		bmi	.L124
 811              	.L119:
 812 002c 4FEA6E03 		asr	r3, lr, #1
 813              	.LVL139:
 481:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       b1->c1max = lb;
 814              		.loc 1 481 0
 815 0030 C360     		str	r3, [r0, #12]
 816              	.LVL140:
 482:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       b2->c1min = lb+1;
 817              		.loc 1 482 0
 818 0032 0133     		adds	r3, r3, #1
 819              	.LVL141:
 820 0034 A360     		str	r3, [r4, #8]
 821              	.LVL142:
 483:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       break;
 822              		.loc 1 483 0
 823 0036 09E0     		b	.L115
 824              	.LVL143:
 825              	.L124:
 480:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       b1->c1max = lb;
 826              		.loc 1 480 0
 827 0038 0EF1010E 		add	lr, lr, #1
 828 003c F6E7     		b	.L119
 829              	.LVL144:
 830              	.L114:
 484:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****     case 2:
 485:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       lb = (b1->c2max + b1->c2min) / 2;
 831              		.loc 1 485 0
 832 003e 13EB0C03 		adds	r3, r3, ip
 833 0042 53D4     		bmi	.L125
 834              	.L120:
 835 0044 5B10     		asrs	r3, r3, #1
 836              	.LVL145:
 486:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       b1->c2max = lb;
 837              		.loc 1 486 0
 838 0046 4361     		str	r3, [r0, #20]
 487:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       b2->c2min = lb+1;
 839              		.loc 1 487 0
 840 0048 0133     		adds	r3, r3, #1
 841              	.LVL146:
 842 004a 2361     		str	r3, [r4, #16]
 843              	.LVL147:
 844              	.L115:
ARM GAS  /tmp/ccs1isz7.s 			page 26


 488:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       break;
 489:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****     }
 490:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****     /* Update stats for boxes */
 491:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****     update_box(cinfo, b1);
 845              		.loc 1 491 0
 846 004c 0146     		mov	r1, r0
 847              	.LVL148:
 848 004e 009E     		ldr	r6, [sp]
 849              	.LVL149:
 850 0050 3046     		mov	r0, r6
 851              	.LVL150:
 852 0052 FFF7FEFF 		bl	update_box
 853              	.LVL151:
 492:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****     update_box(cinfo, b2);
 854              		.loc 1 492 0
 855 0056 2146     		mov	r1, r4
 856 0058 3046     		mov	r0, r6
 857 005a FFF7FEFF 		bl	update_box
 858              	.LVL152:
 493:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****     numboxes++;
 859              		.loc 1 493 0
 860 005e 0135     		adds	r5, r5, #1
 861              	.LVL153:
 862              	.L109:
 433:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****     /* Select box to split.
 863              		.loc 1 433 0
 864 0060 BD42     		cmp	r5, r7
 865 0062 45DA     		bge	.L112
 437:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       b1 = find_biggest_color_pop(boxlist, numboxes);
 866              		.loc 1 437 0
 867 0064 B7EB450F 		cmp	r7, r5, lsl #1
 868 0068 D2DB     		blt	.L110
 438:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****     } else {
 869              		.loc 1 438 0
 870 006a 2946     		mov	r1, r5
 871 006c 4846     		mov	r0, r9
 872 006e FFF7FEFF 		bl	find_biggest_color_pop
 873              	.LVL154:
 874              	.L111:
 442:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       break;
 875              		.loc 1 442 0
 876 0072 0028     		cmp	r0, #0
 877 0074 3CD0     		beq	.L112
 444:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****     /* Copy the color bounds to the new box. */
 878              		.loc 1 444 0
 879 0076 4FEA451A 		lsl	r10, r5, #5
 880 007a 09EB0A04 		add	r4, r9, r10
 881              	.LVL155:
 446:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****     b2->c0min = b1->c0min; b2->c1min = b1->c1min; b2->c2min = b1->c2min;
 882              		.loc 1 446 0
 883 007e 4368     		ldr	r3, [r0, #4]
 884 0080 6360     		str	r3, [r4, #4]
 885 0082 C368     		ldr	r3, [r0, #12]
 886 0084 E360     		str	r3, [r4, #12]
 887 0086 4369     		ldr	r3, [r0, #20]
 888 0088 6361     		str	r3, [r4, #20]
 447:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****     /* Choose which axis to split the box on.
ARM GAS  /tmp/ccs1isz7.s 			page 27


 889              		.loc 1 447 0
 890 008a 0368     		ldr	r3, [r0]
 891 008c 49F80A30 		str	r3, [r9, r10]
 892 0090 8368     		ldr	r3, [r0, #8]
 893 0092 A360     		str	r3, [r4, #8]
 894 0094 0369     		ldr	r3, [r0, #16]
 895 0096 2361     		str	r3, [r4, #16]
 452:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****     c1 = ((b1->c1max - b1->c1min) << C1_SHIFT) * C1_SCALE;
 896              		.loc 1 452 0
 897 0098 D0F80480 		ldr	r8, [r0, #4]
 898 009c D0F800B0 		ldr	fp, [r0]
 899 00a0 A8EB0B02 		sub	r2, r8, fp
 900 00a4 1201     		lsls	r2, r2, #4
 901              	.LVL156:
 453:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****     c2 = ((b1->c2max - b1->c2min) << C2_SHIFT) * C2_SCALE;
 902              		.loc 1 453 0
 903 00a6 D0F80CE0 		ldr	lr, [r0, #12]
 904 00aa 8368     		ldr	r3, [r0, #8]
 905 00ac 0193     		str	r3, [sp, #4]
 906 00ae AEEB0303 		sub	r3, lr, r3
 907 00b2 D900     		lsls	r1, r3, #3
 908 00b4 01EB8301 		add	r1, r1, r3, lsl #2
 909              	.LVL157:
 454:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****     /* We want to break any ties in favor of green, then red, blue last.
 910              		.loc 1 454 0
 911 00b8 4369     		ldr	r3, [r0, #20]
 912 00ba D0F810C0 		ldr	ip, [r0, #16]
 913 00be A3EB0C06 		sub	r6, r3, ip
 914 00c2 F600     		lsls	r6, r6, #3
 915              	.LVL158:
 460:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****     if (c2 > cmax) { n = 2; }
 916              		.loc 1 460 0
 917 00c4 8A42     		cmp	r2, r1
 918 00c6 A8DC     		bgt	.L122
 459:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****     if (c0 > cmax) { cmax = c0; n = 0; }
 919              		.loc 1 459 0
 920 00c8 0A46     		mov	r2, r1
 921              	.LVL159:
 922 00ca 0121     		movs	r1, #1
 923              	.LVL160:
 924              	.L113:
 461:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** #else
 925              		.loc 1 461 0
 926 00cc B242     		cmp	r2, r6
 927 00ce B6DB     		blt	.L114
 473:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****     case 0:
 928              		.loc 1 473 0
 929 00d0 0029     		cmp	r1, #0
 930 00d2 A7D1     		bne	.L116
 931 00d4 0029     		cmp	r1, #0
 932 00d6 B9D1     		bne	.L115
 475:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       b1->c0max = lb;
 933              		.loc 1 475 0
 934 00d8 18EB0B08 		adds	r8, r8, fp
 935              	.LVL161:
 936 00dc 9FD4     		bmi	.L126
 937              	.L118:
ARM GAS  /tmp/ccs1isz7.s 			page 28


 938 00de 4FEA6803 		asr	r3, r8, #1
 939              	.LVL162:
 476:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       b2->c0min = lb+1;
 940              		.loc 1 476 0
 941 00e2 4360     		str	r3, [r0, #4]
 942              	.LVL163:
 477:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       break;
 943              		.loc 1 477 0
 944 00e4 0133     		adds	r3, r3, #1
 945              	.LVL164:
 946 00e6 49F80A30 		str	r3, [r9, r10]
 947              	.LVL165:
 478:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****     case 1:
 948              		.loc 1 478 0
 949 00ea AFE7     		b	.L115
 950              	.LVL166:
 951              	.L125:
 485:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       b1->c2max = lb;
 952              		.loc 1 485 0
 953 00ec 0133     		adds	r3, r3, #1
 954 00ee A9E7     		b	.L120
 955              	.LVL167:
 956              	.L112:
 494:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   }
 495:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   return numboxes;
 496:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** }
 957              		.loc 1 496 0
 958 00f0 2846     		mov	r0, r5
 959 00f2 03B0     		add	sp, sp, #12
 960              	.LCFI8:
 961              		.cfi_def_cfa_offset 36
 962              	.LVL168:
 963              		@ sp needed
 964 00f4 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 965              		.cfi_endproc
 966              	.LFE7:
 968              		.section	.text.compute_color,"ax",%progbits
 969              		.align	1
 970              		.syntax unified
 971              		.thumb
 972              		.thumb_func
 973              		.fpu fpv5-sp-d16
 975              	compute_color:
 976              	.LFB8:
 497:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 
 498:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 
 499:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** LOCAL(void)
 500:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** compute_color (j_decompress_ptr cinfo, boxptr boxp, int icolor)
 501:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** /* Compute representative color for a box, put it in colormap[icolor] */
 502:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** {
 977              		.loc 1 502 0
 978              		.cfi_startproc
 979              		@ args = 0, pretend = 0, frame = 16
 980              		@ frame_needed = 0, uses_anonymous_args = 0
 981              	.LVL169:
 982 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 983              	.LCFI9:
ARM GAS  /tmp/ccs1isz7.s 			page 29


 984              		.cfi_def_cfa_offset 36
 985              		.cfi_offset 4, -36
 986              		.cfi_offset 5, -32
 987              		.cfi_offset 6, -28
 988              		.cfi_offset 7, -24
 989              		.cfi_offset 8, -20
 990              		.cfi_offset 9, -16
 991              		.cfi_offset 10, -12
 992              		.cfi_offset 11, -8
 993              		.cfi_offset 14, -4
 994 0004 85B0     		sub	sp, sp, #20
 995              	.LCFI10:
 996              		.cfi_def_cfa_offset 56
 997 0006 0290     		str	r0, [sp, #8]
 998 0008 0392     		str	r2, [sp, #12]
 503:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   /* Current algorithm: mean weighted by pixels (not colors) */
 504:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   /* Note it is important to get the rounding correct! */
 505:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   my_cquantize_ptr cquantize = (my_cquantize_ptr) cinfo->cquantize;
 999              		.loc 1 505 0
 1000 000a D0F8E031 		ldr	r3, [r0, #480]
 1001              	.LVL170:
 506:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   hist3d histogram = cquantize->histogram;
 1002              		.loc 1 506 0
 1003 000e D3F818A0 		ldr	r10, [r3, #24]
 1004              	.LVL171:
 507:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   histptr histp;
 508:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   int c0,c1,c2;
 509:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   int c0min,c0max,c1min,c1max,c2min,c2max;
 510:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   long count;
 511:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   long total = 0;
 512:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   long c0total = 0;
 513:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   long c1total = 0;
 514:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   long c2total = 0;
 515:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   
 516:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   c0min = boxp->c0min;  c0max = boxp->c0max;
 1005              		.loc 1 516 0
 1006 0012 D1F800E0 		ldr	lr, [r1]
 1007              	.LVL172:
 1008 0016 4B68     		ldr	r3, [r1, #4]
 1009              	.LVL173:
 1010 0018 0093     		str	r3, [sp]
 1011              	.LVL174:
 517:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   c1min = boxp->c1min;  c1max = boxp->c1max;
 1012              		.loc 1 517 0
 1013 001a 8B68     		ldr	r3, [r1, #8]
 1014              	.LVL175:
 1015 001c 0193     		str	r3, [sp, #4]
 1016              	.LVL176:
 1017 001e D1F80C90 		ldr	r9, [r1, #12]
 1018              	.LVL177:
 518:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   c2min = boxp->c2min;  c2max = boxp->c2max;
 1019              		.loc 1 518 0
 1020 0022 D1F81080 		ldr	r8, [r1, #16]
 1021              	.LVL178:
 1022 0026 4C69     		ldr	r4, [r1, #20]
 1023              	.LVL179:
 514:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   
ARM GAS  /tmp/ccs1isz7.s 			page 30


 1024              		.loc 1 514 0
 1025 0028 4FF0000C 		mov	ip, #0
 513:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   long c2total = 0;
 1026              		.loc 1 513 0
 1027 002c 6546     		mov	r5, ip
 512:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   long c1total = 0;
 1028              		.loc 1 512 0
 1029 002e 6646     		mov	r6, ip
 511:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   long c0total = 0;
 1030              		.loc 1 511 0
 1031 0030 6746     		mov	r7, ip
 519:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   
 520:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   for (c0 = c0min; c0 <= c0max; c0++)
 1032              		.loc 1 520 0
 1033 0032 28E0     		b	.L128
 1034              	.LVL180:
 1035              	.L130:
 521:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****     for (c1 = c1min; c1 <= c1max; c1++) {
 522:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       histp = & histogram[c0][c1][c2min];
 523:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       for (c2 = c2min; c2 <= c2max; c2++) {
 1036              		.loc 1 523 0 discriminator 2
 1037 0034 0132     		adds	r2, r2, #1
 1038              	.LVL181:
 524:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 	if ((count = *histp++) != 0) {
 1039              		.loc 1 524 0 discriminator 2
 1040 0036 0B46     		mov	r3, r1
 1041              	.LVL182:
 1042              	.L129:
 523:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 	if ((count = *histp++) != 0) {
 1043              		.loc 1 523 0 discriminator 1
 1044 0038 A242     		cmp	r2, r4
 1045 003a 17DC     		bgt	.L136
 1046              		.loc 1 524 0
 1047 003c 991C     		adds	r1, r3, #2
 1048              	.LVL183:
 1049 003e 1B88     		ldrh	r3, [r3]
 1050              	.LVL184:
 1051 0040 002B     		cmp	r3, #0
 1052 0042 F7D0     		beq	.L130
 525:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 	  total += count;
 1053              		.loc 1 525 0
 1054 0044 1F44     		add	r7, r7, r3
 1055              	.LVL185:
 526:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 	  c0total += ((c0 << C0_SHIFT) + ((1<<C0_SHIFT)>>1)) * count;
 1056              		.loc 1 526 0
 1057 0046 4FEACE0B 		lsl	fp, lr, #3
 1058 004a 0BF1040B 		add	fp, fp, #4
 1059 004e 03FB0B66 		mla	r6, r3, fp, r6
 1060              	.LVL186:
 527:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 	  c1total += ((c1 << C1_SHIFT) + ((1<<C1_SHIFT)>>1)) * count;
 1061              		.loc 1 527 0
 1062 0052 4FEA800B 		lsl	fp, r0, #2
 1063 0056 0BF1020B 		add	fp, fp, #2
 1064 005a 03FB0B55 		mla	r5, r3, fp, r5
 1065              	.LVL187:
 528:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 	  c2total += ((c2 << C2_SHIFT) + ((1<<C2_SHIFT)>>1)) * count;
 1066              		.loc 1 528 0
ARM GAS  /tmp/ccs1isz7.s 			page 31


 1067 005e 4FEAC20B 		lsl	fp, r2, #3
 1068 0062 0BF1040B 		add	fp, fp, #4
 1069 0066 03FB0BCC 		mla	ip, r3, fp, ip
 1070              	.LVL188:
 1071 006a E3E7     		b	.L130
 1072              	.LVL189:
 1073              	.L136:
 521:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       histp = & histogram[c0][c1][c2min];
 1074              		.loc 1 521 0 discriminator 2
 1075 006c 0130     		adds	r0, r0, #1
 1076              	.LVL190:
 1077              	.L133:
 521:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       histp = & histogram[c0][c1][c2min];
 1078              		.loc 1 521 0 is_stmt 0 discriminator 1
 1079 006e 4845     		cmp	r0, r9
 1080 0070 07DC     		bgt	.L137
 522:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       for (c2 = c2min; c2 <= c2max; c2++) {
 1081              		.loc 1 522 0 is_stmt 1
 1082 0072 5AF82E30 		ldr	r3, [r10, lr, lsl #2]
 1083 0076 03EB8013 		add	r3, r3, r0, lsl #6
 1084 007a 03EB4803 		add	r3, r3, r8, lsl #1
 1085              	.LVL191:
 523:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 	if ((count = *histp++) != 0) {
 1086              		.loc 1 523 0
 1087 007e 4246     		mov	r2, r8
 1088 0080 DAE7     		b	.L129
 1089              	.LVL192:
 1090              	.L137:
 520:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****     for (c1 = c1min; c1 <= c1max; c1++) {
 1091              		.loc 1 520 0 discriminator 2
 1092 0082 0EF1010E 		add	lr, lr, #1
 1093              	.LVL193:
 1094              	.L128:
 520:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****     for (c1 = c1min; c1 <= c1max; c1++) {
 1095              		.loc 1 520 0 is_stmt 0 discriminator 1
 1096 0086 009B     		ldr	r3, [sp]
 1097 0088 9E45     		cmp	lr, r3
 1098 008a 01DC     		bgt	.L138
 521:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       histp = & histogram[c0][c1][c2min];
 1099              		.loc 1 521 0 is_stmt 1
 1100 008c 0198     		ldr	r0, [sp, #4]
 1101 008e EEE7     		b	.L133
 1102              	.L138:
 529:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 	}
 530:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       }
 531:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****     }
 532:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   
 533:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   cinfo->colormap[0][icolor] = (JSAMPLE) ((c0total + (total>>1)) / total);
 1103              		.loc 1 533 0
 1104 0090 7A10     		asrs	r2, r7, #1
 1105 0092 9319     		adds	r3, r2, r6
 1106 0094 93FBF7F3 		sdiv	r3, r3, r7
 1107 0098 0298     		ldr	r0, [sp, #8]
 1108 009a D0F88810 		ldr	r1, [r0, #136]
 1109 009e 0968     		ldr	r1, [r1]
 1110 00a0 039C     		ldr	r4, [sp, #12]
 1111              	.LVL194:
ARM GAS  /tmp/ccs1isz7.s 			page 32


 1112 00a2 0B55     		strb	r3, [r1, r4]
 1113              	.LVL195:
 534:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   cinfo->colormap[1][icolor] = (JSAMPLE) ((c1total + (total>>1)) / total);
 1114              		.loc 1 534 0
 1115 00a4 5319     		adds	r3, r2, r5
 1116 00a6 93FBF7F3 		sdiv	r3, r3, r7
 1117 00aa D0F88810 		ldr	r1, [r0, #136]
 1118 00ae 4968     		ldr	r1, [r1, #4]
 1119 00b0 0B55     		strb	r3, [r1, r4]
 535:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   cinfo->colormap[2][icolor] = (JSAMPLE) ((c2total + (total>>1)) / total);
 1120              		.loc 1 535 0
 1121 00b2 6244     		add	r2, r2, ip
 1122 00b4 92FBF7F7 		sdiv	r7, r2, r7
 1123              	.LVL196:
 1124 00b8 D0F88830 		ldr	r3, [r0, #136]
 1125 00bc 9B68     		ldr	r3, [r3, #8]
 1126 00be 1F55     		strb	r7, [r3, r4]
 536:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** }
 1127              		.loc 1 536 0
 1128 00c0 05B0     		add	sp, sp, #20
 1129              	.LCFI11:
 1130              		.cfi_def_cfa_offset 36
 1131              	.LVL197:
 1132              		@ sp needed
 1133 00c2 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 1134              		.cfi_endproc
 1135              	.LFE8:
 1137              		.section	.text.select_colors,"ax",%progbits
 1138              		.align	1
 1139              		.syntax unified
 1140              		.thumb
 1141              		.thumb_func
 1142              		.fpu fpv5-sp-d16
 1144              	select_colors:
 1145              	.LFB9:
 537:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 
 538:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 
 539:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** LOCAL(void)
 540:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** select_colors (j_decompress_ptr cinfo, int desired_colors)
 541:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** /* Master routine for color selection */
 542:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** {
 1146              		.loc 1 542 0
 1147              		.cfi_startproc
 1148              		@ args = 0, pretend = 0, frame = 0
 1149              		@ frame_needed = 0, uses_anonymous_args = 0
 1150              	.LVL198:
 1151 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1152              	.LCFI12:
 1153              		.cfi_def_cfa_offset 24
 1154              		.cfi_offset 3, -24
 1155              		.cfi_offset 4, -20
 1156              		.cfi_offset 5, -16
 1157              		.cfi_offset 6, -12
 1158              		.cfi_offset 7, -8
 1159              		.cfi_offset 14, -4
 1160 0002 0546     		mov	r5, r0
 1161 0004 0F46     		mov	r7, r1
ARM GAS  /tmp/ccs1isz7.s 			page 33


 543:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   boxptr boxlist;
 544:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   int numboxes;
 545:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   int i;
 546:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 
 547:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   /* Allocate workspace for box list */
 548:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   boxlist = (boxptr) (*cinfo->mem->alloc_small)
 1162              		.loc 1 548 0
 1163 0006 4368     		ldr	r3, [r0, #4]
 1164 0008 1B68     		ldr	r3, [r3]
 1165 000a 4A01     		lsls	r2, r1, #5
 1166 000c 0121     		movs	r1, #1
 1167              	.LVL199:
 1168 000e 9847     		blx	r3
 1169              	.LVL200:
 1170 0010 0646     		mov	r6, r0
 1171              	.LVL201:
 549:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****     ((j_common_ptr) cinfo, JPOOL_IMAGE, desired_colors * SIZEOF(box));
 550:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   /* Initialize one box containing whole space */
 551:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   numboxes = 1;
 552:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   boxlist[0].c0min = 0;
 1172              		.loc 1 552 0
 1173 0012 0024     		movs	r4, #0
 1174 0014 0460     		str	r4, [r0]
 553:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   boxlist[0].c0max = MAXJSAMPLE >> C0_SHIFT;
 1175              		.loc 1 553 0
 1176 0016 1F23     		movs	r3, #31
 1177 0018 4360     		str	r3, [r0, #4]
 554:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   boxlist[0].c1min = 0;
 1178              		.loc 1 554 0
 1179 001a 8460     		str	r4, [r0, #8]
 555:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   boxlist[0].c1max = MAXJSAMPLE >> C1_SHIFT;
 1180              		.loc 1 555 0
 1181 001c 3F22     		movs	r2, #63
 1182 001e C260     		str	r2, [r0, #12]
 556:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   boxlist[0].c2min = 0;
 1183              		.loc 1 556 0
 1184 0020 0461     		str	r4, [r0, #16]
 557:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   boxlist[0].c2max = MAXJSAMPLE >> C2_SHIFT;
 1185              		.loc 1 557 0
 1186 0022 4361     		str	r3, [r0, #20]
 558:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   /* Shrink it to actually-used volume and set its statistics */
 559:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   update_box(cinfo, & boxlist[0]);
 1187              		.loc 1 559 0
 1188 0024 0146     		mov	r1, r0
 1189 0026 2846     		mov	r0, r5
 1190              	.LVL202:
 1191 0028 FFF7FEFF 		bl	update_box
 1192              	.LVL203:
 560:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   /* Perform median-cut to produce final box list */
 561:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   numboxes = median_cut(cinfo, boxlist, numboxes, desired_colors);
 1193              		.loc 1 561 0
 1194 002c 3B46     		mov	r3, r7
 1195 002e 0122     		movs	r2, #1
 1196 0030 3146     		mov	r1, r6
 1197 0032 2846     		mov	r0, r5
 1198 0034 FFF7FEFF 		bl	median_cut
 1199              	.LVL204:
ARM GAS  /tmp/ccs1isz7.s 			page 34


 1200 0038 0746     		mov	r7, r0
 1201              	.LVL205:
 562:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   /* Compute the representative color for each box, fill colormap */
 563:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   for (i = 0; i < numboxes; i++)
 1202              		.loc 1 563 0
 1203 003a 06E0     		b	.L140
 1204              	.LVL206:
 1205              	.L141:
 564:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****     compute_color(cinfo, & boxlist[i], i);
 1206              		.loc 1 564 0 discriminator 3
 1207 003c 2246     		mov	r2, r4
 1208 003e 06EB4411 		add	r1, r6, r4, lsl #5
 1209 0042 2846     		mov	r0, r5
 1210 0044 FFF7FEFF 		bl	compute_color
 1211              	.LVL207:
 563:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****     compute_color(cinfo, & boxlist[i], i);
 1212              		.loc 1 563 0 discriminator 3
 1213 0048 0134     		adds	r4, r4, #1
 1214              	.LVL208:
 1215              	.L140:
 563:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****     compute_color(cinfo, & boxlist[i], i);
 1216              		.loc 1 563 0 is_stmt 0 discriminator 1
 1217 004a BC42     		cmp	r4, r7
 1218 004c F6DB     		blt	.L141
 565:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   cinfo->actual_number_of_colors = numboxes;
 1219              		.loc 1 565 0 is_stmt 1
 1220 004e C5F88470 		str	r7, [r5, #132]
 566:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   TRACEMS1(cinfo, 1, JTRC_QUANT_SELECTED, numboxes);
 1221              		.loc 1 566 0
 1222 0052 2B68     		ldr	r3, [r5]
 1223 0054 6222     		movs	r2, #98
 1224 0056 5A61     		str	r2, [r3, #20]
 1225 0058 2B68     		ldr	r3, [r5]
 1226 005a 9F61     		str	r7, [r3, #24]
 1227 005c 2B68     		ldr	r3, [r5]
 1228 005e 5B68     		ldr	r3, [r3, #4]
 1229 0060 0121     		movs	r1, #1
 1230 0062 2846     		mov	r0, r5
 1231 0064 9847     		blx	r3
 1232              	.LVL209:
 567:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** }
 1233              		.loc 1 567 0
 1234 0066 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1235              		.cfi_endproc
 1236              	.LFE9:
 1238              		.section	.text.find_nearby_colors,"ax",%progbits
 1239              		.align	1
 1240              		.syntax unified
 1241              		.thumb
 1242              		.thumb_func
 1243              		.fpu fpv5-sp-d16
 1245              	find_nearby_colors:
 1246              	.LFB10:
 568:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 
 569:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 
 570:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** /*
 571:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****  * These routines are concerned with the time-critical task of mapping input
ARM GAS  /tmp/ccs1isz7.s 			page 35


 572:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****  * colors to the nearest color in the selected colormap.
 573:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****  *
 574:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****  * We re-use the histogram space as an "inverse color map", essentially a
 575:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****  * cache for the results of nearest-color searches.  All colors within a
 576:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****  * histogram cell will be mapped to the same colormap entry, namely the one
 577:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****  * closest to the cell's center.  This may not be quite the closest entry to
 578:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****  * the actual input color, but it's almost as good.  A zero in the cache
 579:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****  * indicates we haven't found the nearest color for that cell yet; the array
 580:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****  * is cleared to zeroes before starting the mapping pass.  When we find the
 581:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****  * nearest color for a cell, its colormap index plus one is recorded in the
 582:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****  * cache for future use.  The pass2 scanning routines call fill_inverse_cmap
 583:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****  * when they need to use an unfilled entry in the cache.
 584:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****  *
 585:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****  * Our method of efficiently finding nearest colors is based on the "locally
 586:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****  * sorted search" idea described by Heckbert and on the incremental distance
 587:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****  * calculation described by Spencer W. Thomas in chapter III.1 of Graphics
 588:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****  * Gems II (James Arvo, ed.  Academic Press, 1991).  Thomas points out that
 589:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****  * the distances from a given colormap entry to each cell of the histogram can
 590:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****  * be computed quickly using an incremental method: the differences between
 591:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****  * distances to adjacent cells themselves differ by a constant.  This allows a
 592:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****  * fairly fast implementation of the "brute force" approach of computing the
 593:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****  * distance from every colormap entry to every histogram cell.  Unfortunately,
 594:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****  * it needs a work array to hold the best-distance-so-far for each histogram
 595:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****  * cell (because the inner loop has to be over cells, not colormap entries).
 596:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****  * The work array elements have to be INT32s, so the work array would need
 597:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****  * 256Kb at our recommended precision.  This is not feasible in DOS machines.
 598:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****  *
 599:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****  * To get around these problems, we apply Thomas' method to compute the
 600:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****  * nearest colors for only the cells within a small subbox of the histogram.
 601:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****  * The work array need be only as big as the subbox, so the memory usage
 602:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****  * problem is solved.  Furthermore, we need not fill subboxes that are never
 603:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****  * referenced in pass2; many images use only part of the color gamut, so a
 604:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****  * fair amount of work is saved.  An additional advantage of this
 605:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****  * approach is that we can apply Heckbert's locality criterion to quickly
 606:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****  * eliminate colormap entries that are far away from the subbox; typically
 607:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****  * three-fourths of the colormap entries are rejected by Heckbert's criterion,
 608:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****  * and we need not compute their distances to individual cells in the subbox.
 609:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****  * The speed of this approach is heavily influenced by the subbox size: too
 610:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****  * small means too much overhead, too big loses because Heckbert's criterion
 611:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****  * can't eliminate as many colormap entries.  Empirically the best subbox
 612:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****  * size seems to be about 1/512th of the histogram (1/8th in each direction).
 613:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****  *
 614:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****  * Thomas' article also describes a refined method which is asymptotically
 615:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****  * faster than the brute-force method, but it is also far more complex and
 616:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****  * cannot efficiently be applied to small subboxes.  It is therefore not
 617:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****  * useful for programs intended to be portable to DOS machines.  On machines
 618:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****  * with plenty of memory, filling the whole histogram in one shot with Thomas'
 619:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****  * refined method might be faster than the present code --- but then again,
 620:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****  * it might not be any faster, and it's certainly more complicated.
 621:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****  */
 622:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 
 623:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 
 624:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** /* log2(histogram cells in update box) for each axis; this can be adjusted */
 625:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** #define BOX_C0_LOG  (HIST_C0_BITS-3)
 626:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** #define BOX_C1_LOG  (HIST_C1_BITS-3)
 627:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** #define BOX_C2_LOG  (HIST_C2_BITS-3)
 628:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 
ARM GAS  /tmp/ccs1isz7.s 			page 36


 629:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** #define BOX_C0_ELEMS  (1<<BOX_C0_LOG) /* # of hist cells in update box */
 630:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** #define BOX_C1_ELEMS  (1<<BOX_C1_LOG)
 631:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** #define BOX_C2_ELEMS  (1<<BOX_C2_LOG)
 632:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 
 633:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** #define BOX_C0_SHIFT  (C0_SHIFT + BOX_C0_LOG)
 634:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** #define BOX_C1_SHIFT  (C1_SHIFT + BOX_C1_LOG)
 635:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** #define BOX_C2_SHIFT  (C2_SHIFT + BOX_C2_LOG)
 636:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 
 637:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 
 638:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** /*
 639:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****  * The next three routines implement inverse colormap filling.  They could
 640:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****  * all be folded into one big routine, but splitting them up this way saves
 641:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****  * some stack space (the mindist[] and bestdist[] arrays need not coexist)
 642:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****  * and may allow some compilers to produce better code by registerizing more
 643:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****  * inner-loop variables.
 644:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****  */
 645:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 
 646:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** LOCAL(int)
 647:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** find_nearby_colors (j_decompress_ptr cinfo, int minc0, int minc1, int minc2,
 648:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 		    JSAMPLE colorlist[])
 649:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** /* Locate the colormap entries close enough to an update box to be candidates
 650:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****  * for the nearest entry to some cell(s) in the update box.  The update box
 651:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****  * is specified by the center coordinates of its first cell.  The number of
 652:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****  * candidate colormap entries is returned, and their colormap indexes are
 653:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****  * placed in colorlist[].
 654:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****  * This routine uses Heckbert's "locally sorted search" criterion to select
 655:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****  * the colors that need further consideration.
 656:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****  */
 657:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** {
 1247              		.loc 1 657 0
 1248              		.cfi_startproc
 1249              		@ args = 4, pretend = 0, frame = 1048
 1250              		@ frame_needed = 0, uses_anonymous_args = 0
 1251              	.LVL210:
 1252 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 1253              	.LCFI13:
 1254              		.cfi_def_cfa_offset 36
 1255              		.cfi_offset 4, -36
 1256              		.cfi_offset 5, -32
 1257              		.cfi_offset 6, -28
 1258              		.cfi_offset 7, -24
 1259              		.cfi_offset 8, -20
 1260              		.cfi_offset 9, -16
 1261              		.cfi_offset 10, -12
 1262              		.cfi_offset 11, -8
 1263              		.cfi_offset 14, -4
 1264 0004 ADF21C4D 		subw	sp, sp, #1052
 1265              	.LCFI14:
 1266              		.cfi_def_cfa_offset 1088
 1267 0008 0290     		str	r0, [sp, #8]
 658:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   int numcolors = cinfo->actual_number_of_colors;
 1268              		.loc 1 658 0
 1269 000a D0F884E0 		ldr	lr, [r0, #132]
 1270              	.LVL211:
 659:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   int maxc0, maxc1, maxc2;
 660:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   int centerc0, centerc1, centerc2;
 661:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   int i, x, ncolors;
ARM GAS  /tmp/ccs1isz7.s 			page 37


 662:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   INT32 minmaxdist, min_dist, max_dist, tdist;
 663:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   INT32 mindist[MAXNUMCOLORS];	/* min distance to colormap entry i */
 664:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 
 665:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   /* Compute true coordinates of update box's upper corner and center.
 666:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****    * Actually we compute the coordinates of the center of the upper-corner
 667:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****    * histogram cell, which are the upper bounds of the volume we care about.
 668:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****    * Note that since ">>" rounds down, the "center" values may be closer to
 669:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****    * min than to max; hence comparisons to them must be "<=", not "<".
 670:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****    */
 671:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   maxc0 = minc0 + ((1 << BOX_C0_SHIFT) - (1 << C0_SHIFT));
 1271              		.loc 1 671 0
 1272 000e 01F11809 		add	r9, r1, #24
 1273              	.LVL212:
 672:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   centerc0 = (minc0 + maxc0) >> 1;
 1274              		.loc 1 672 0
 1275 0012 01EB0900 		add	r0, r1, r9
 1276              	.LVL213:
 1277 0016 4010     		asrs	r0, r0, #1
 1278 0018 0390     		str	r0, [sp, #12]
 1279              	.LVL214:
 673:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   maxc1 = minc1 + ((1 << BOX_C1_SHIFT) - (1 << C1_SHIFT));
 1280              		.loc 1 673 0
 1281 001a 02F11C08 		add	r8, r2, #28
 1282              	.LVL215:
 674:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   centerc1 = (minc1 + maxc1) >> 1;
 1283              		.loc 1 674 0
 1284 001e 02EB0800 		add	r0, r2, r8
 1285              	.LVL216:
 1286 0022 4010     		asrs	r0, r0, #1
 1287 0024 0490     		str	r0, [sp, #16]
 1288              	.LVL217:
 675:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   maxc2 = minc2 + ((1 << BOX_C2_SHIFT) - (1 << C2_SHIFT));
 1289              		.loc 1 675 0
 1290 0026 03F11800 		add	r0, r3, #24
 1291              	.LVL218:
 1292 002a 0190     		str	r0, [sp, #4]
 1293              	.LVL219:
 676:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   centerc2 = (minc2 + maxc2) >> 1;
 1294              		.loc 1 676 0
 1295 002c 1818     		adds	r0, r3, r0
 1296              	.LVL220:
 1297 002e 4010     		asrs	r0, r0, #1
 1298 0030 0590     		str	r0, [sp, #20]
 1299              	.LVL221:
 677:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 
 678:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   /* For each color in colormap, find:
 679:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****    *  1. its minimum squared-distance to any point in the update box
 680:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****    *     (zero if color is within update box);
 681:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****    *  2. its maximum squared-distance to any point in the update box.
 682:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****    * Both of these can be found by considering only the corners of the box.
 683:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****    * We save the minimum distance for each color in mindist[];
 684:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****    * only the smallest maximum distance is of interest.
 685:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****    */
 686:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   minmaxdist = 0x7FFFFFFFL;
 1300              		.loc 1 686 0
 1301 0032 6FF0004C 		mvn	ip, #-2147483648
 687:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 
ARM GAS  /tmp/ccs1isz7.s 			page 38


 688:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   for (i = 0; i < numcolors; i++) {
 1302              		.loc 1 688 0
 1303 0036 0025     		movs	r5, #0
 1304 0038 59E0     		b	.L144
 1305              	.LVL222:
 1306              	.L145:
 689:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****     /* We compute the squared-c0-distance term, then add in the other two. */
 690:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****     x = GETJSAMPLE(cinfo->colormap[0][i]);
 691:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****     if (x < minc0) {
 692:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       tdist = (x - minc0) * C0_SCALE;
 693:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       min_dist = tdist*tdist;
 694:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       tdist = (x - maxc0) * C0_SCALE;
 695:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       max_dist = tdist*tdist;
 696:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****     } else if (x > maxc0) {
 1307              		.loc 1 696 0
 1308 003a A145     		cmp	r9, r4
 1309 003c 0BDA     		bge	.L147
 697:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       tdist = (x - maxc0) * C0_SCALE;
 1310              		.loc 1 697 0
 1311 003e A4EB090A 		sub	r10, r4, r9
 1312 0042 4FEA4A0A 		lsl	r10, r10, #1
 1313              	.LVL223:
 698:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       min_dist = tdist*tdist;
 1314              		.loc 1 698 0
 1315 0046 0AFB0AFA 		mul	r10, r10, r10
 1316              	.LVL224:
 699:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       tdist = (x - minc0) * C0_SCALE;
 1317              		.loc 1 699 0
 1318 004a 641A     		subs	r4, r4, r1
 1319              	.LVL225:
 1320 004c 6400     		lsls	r4, r4, #1
 1321              	.LVL226:
 700:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       max_dist = tdist*tdist;
 1322              		.loc 1 700 0
 1323 004e 04FB04F0 		mul	r0, r4, r4
 1324              	.LVL227:
 1325 0052 0090     		str	r0, [sp]
 1326              	.LVL228:
 1327 0054 61E0     		b	.L146
 1328              	.LVL229:
 1329              	.L147:
 701:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****     } else {
 702:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       /* within cell range so no contribution to min_dist */
 703:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       min_dist = 0;
 704:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       if (x <= centerc0) {
 1330              		.loc 1 704 0
 1331 0056 0398     		ldr	r0, [sp, #12]
 1332 0058 A042     		cmp	r0, r4
 1333 005a 08DB     		blt	.L148
 705:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 	tdist = (x - maxc0) * C0_SCALE;
 1334              		.loc 1 705 0
 1335 005c A4EB0904 		sub	r4, r4, r9
 1336              	.LVL230:
 1337 0060 6400     		lsls	r4, r4, #1
 1338              	.LVL231:
 706:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 	max_dist = tdist*tdist;
 1339              		.loc 1 706 0
ARM GAS  /tmp/ccs1isz7.s 			page 39


 1340 0062 04FB04F0 		mul	r0, r4, r4
 1341 0066 0090     		str	r0, [sp]
 1342              	.LVL232:
 703:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       if (x <= centerc0) {
 1343              		.loc 1 703 0
 1344 0068 4FF0000A 		mov	r10, #0
 1345 006c 55E0     		b	.L146
 1346              	.LVL233:
 1347              	.L148:
 707:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       } else {
 708:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 	tdist = (x - minc0) * C0_SCALE;
 1348              		.loc 1 708 0
 1349 006e 641A     		subs	r4, r4, r1
 1350 0070 6400     		lsls	r4, r4, #1
 1351              	.LVL234:
 709:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 	max_dist = tdist*tdist;
 1352              		.loc 1 709 0
 1353 0072 04FB04F0 		mul	r0, r4, r4
 1354 0076 0090     		str	r0, [sp]
 1355              	.LVL235:
 703:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       if (x <= centerc0) {
 1356              		.loc 1 703 0
 1357 0078 4FF0000A 		mov	r10, #0
 1358 007c 4DE0     		b	.L146
 1359              	.LVL236:
 1360              	.L149:
 710:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       }
 711:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****     }
 712:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 
 713:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****     x = GETJSAMPLE(cinfo->colormap[1][i]);
 714:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****     if (x < minc1) {
 715:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       tdist = (x - minc1) * C1_SCALE;
 716:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       min_dist += tdist*tdist;
 717:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       tdist = (x - maxc1) * C1_SCALE;
 718:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       max_dist += tdist*tdist;
 719:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****     } else if (x > maxc1) {
 1361              		.loc 1 719 0
 1362 007e 8045     		cmp	r8, r0
 1363 0080 0CDA     		bge	.L151
 720:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       tdist = (x - maxc1) * C1_SCALE;
 1364              		.loc 1 720 0
 1365 0082 A0EB080B 		sub	fp, r0, r8
 1366 0086 0BEB4B0B 		add	fp, fp, fp, lsl #1
 1367              	.LVL237:
 721:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       min_dist += tdist*tdist;
 1368              		.loc 1 721 0
 1369 008a 0BFB0BAA 		mla	r10, fp, fp, r10
 1370              	.LVL238:
 722:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       tdist = (x - minc1) * C1_SCALE;
 1371              		.loc 1 722 0
 1372 008e 801A     		subs	r0, r0, r2
 1373              	.LVL239:
 1374 0090 00EB4000 		add	r0, r0, r0, lsl #1
 1375              	.LVL240:
 723:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       max_dist += tdist*tdist;
 1376              		.loc 1 723 0
 1377 0094 009C     		ldr	r4, [sp]
ARM GAS  /tmp/ccs1isz7.s 			page 40


 1378 0096 00FB0040 		mla	r0, r0, r0, r4
 1379              	.LVL241:
 1380 009a 4FE0     		b	.L150
 1381              	.LVL242:
 1382              	.L151:
 724:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****     } else {
 725:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       /* within cell range so no contribution to min_dist */
 726:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       if (x <= centerc1) {
 1383              		.loc 1 726 0
 1384 009c 049C     		ldr	r4, [sp, #16]
 1385              	.LVL243:
 1386 009e 8442     		cmp	r4, r0
 1387 00a0 07DB     		blt	.L152
 727:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 	tdist = (x - maxc1) * C1_SCALE;
 1388              		.loc 1 727 0
 1389 00a2 A0EB0800 		sub	r0, r0, r8
 1390 00a6 00EB4000 		add	r0, r0, r0, lsl #1
 1391              	.LVL244:
 728:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 	max_dist += tdist*tdist;
 1392              		.loc 1 728 0
 1393 00aa 009C     		ldr	r4, [sp]
 1394 00ac 00FB0040 		mla	r0, r0, r0, r4
 1395              	.LVL245:
 1396 00b0 44E0     		b	.L150
 1397              	.LVL246:
 1398              	.L152:
 729:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       } else {
 730:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 	tdist = (x - minc1) * C1_SCALE;
 1399              		.loc 1 730 0
 1400 00b2 801A     		subs	r0, r0, r2
 1401 00b4 00EB4000 		add	r0, r0, r0, lsl #1
 1402              	.LVL247:
 731:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 	max_dist += tdist*tdist;
 1403              		.loc 1 731 0
 1404 00b8 009C     		ldr	r4, [sp]
 1405 00ba 00FB0040 		mla	r0, r0, r0, r4
 1406              	.LVL248:
 1407 00be 3DE0     		b	.L150
 1408              	.LVL249:
 1409              	.L153:
 732:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       }
 733:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****     }
 734:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 
 735:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****     x = GETJSAMPLE(cinfo->colormap[2][i]);
 736:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****     if (x < minc2) {
 737:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       tdist = (x - minc2) * C2_SCALE;
 738:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       min_dist += tdist*tdist;
 739:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       tdist = (x - maxc2) * C2_SCALE;
 740:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       max_dist += tdist*tdist;
 741:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****     } else if (x > maxc2) {
 1410              		.loc 1 741 0
 1411 00c0 019E     		ldr	r6, [sp, #4]
 1412 00c2 A642     		cmp	r6, r4
 1413 00c4 06DA     		bge	.L155
 742:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       tdist = (x - maxc2) * C2_SCALE;
 1414              		.loc 1 742 0
 1415 00c6 A61B     		subs	r6, r4, r6
ARM GAS  /tmp/ccs1isz7.s 			page 41


 1416              	.LVL250:
 743:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       min_dist += tdist*tdist;
 1417              		.loc 1 743 0
 1418 00c8 06FB06AA 		mla	r10, r6, r6, r10
 1419              	.LVL251:
 744:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       tdist = (x - minc2) * C2_SCALE;
 1420              		.loc 1 744 0
 1421 00cc E41A     		subs	r4, r4, r3
 1422              	.LVL252:
 745:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       max_dist += tdist*tdist;
 1423              		.loc 1 745 0
 1424 00ce 04FB0400 		mla	r0, r4, r4, r0
 1425              	.LVL253:
 1426 00d2 3EE0     		b	.L154
 1427              	.LVL254:
 1428              	.L155:
 746:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****     } else {
 747:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       /* within cell range so no contribution to min_dist */
 748:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       if (x <= centerc2) {
 1429              		.loc 1 748 0
 1430 00d4 059E     		ldr	r6, [sp, #20]
 1431 00d6 A642     		cmp	r6, r4
 1432 00d8 04DB     		blt	.L156
 749:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 	tdist = (x - maxc2) * C2_SCALE;
 1433              		.loc 1 749 0
 1434 00da 019E     		ldr	r6, [sp, #4]
 1435 00dc A41B     		subs	r4, r4, r6
 1436              	.LVL255:
 750:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 	max_dist += tdist*tdist;
 1437              		.loc 1 750 0
 1438 00de 04FB0400 		mla	r0, r4, r4, r0
 1439              	.LVL256:
 1440 00e2 36E0     		b	.L154
 1441              	.LVL257:
 1442              	.L156:
 751:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       } else {
 752:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 	tdist = (x - minc2) * C2_SCALE;
 1443              		.loc 1 752 0
 1444 00e4 E41A     		subs	r4, r4, r3
 1445              	.LVL258:
 753:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 	max_dist += tdist*tdist;
 1446              		.loc 1 753 0
 1447 00e6 04FB0400 		mla	r0, r4, r4, r0
 1448              	.LVL259:
 1449 00ea 32E0     		b	.L154
 1450              	.LVL260:
 1451              	.L157:
 688:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****     /* We compute the squared-c0-distance term, then add in the other two. */
 1452              		.loc 1 688 0 discriminator 2
 1453 00ec 0135     		adds	r5, r5, #1
 1454              	.LVL261:
 1455              	.L144:
 688:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****     /* We compute the squared-c0-distance term, then add in the other two. */
 1456              		.loc 1 688 0 is_stmt 0 discriminator 1
 1457 00ee 7545     		cmp	r5, lr
 1458 00f0 36DA     		bge	.L164
 690:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****     if (x < minc0) {
ARM GAS  /tmp/ccs1isz7.s 			page 42


 1459              		.loc 1 690 0 is_stmt 1
 1460 00f2 0298     		ldr	r0, [sp, #8]
 1461 00f4 D0F88860 		ldr	r6, [r0, #136]
 1462 00f8 3068     		ldr	r0, [r6]
 1463 00fa 2F46     		mov	r7, r5
 1464 00fc 445D     		ldrb	r4, [r0, r5]	@ zero_extendqisi2
 1465              	.LVL262:
 691:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       tdist = (x - minc0) * C0_SCALE;
 1466              		.loc 1 691 0
 1467 00fe A142     		cmp	r1, r4
 1468 0100 9BDD     		ble	.L145
 692:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       min_dist = tdist*tdist;
 1469              		.loc 1 692 0
 1470 0102 A4EB010A 		sub	r10, r4, r1
 1471 0106 4FEA4A0A 		lsl	r10, r10, #1
 1472              	.LVL263:
 693:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       tdist = (x - maxc0) * C0_SCALE;
 1473              		.loc 1 693 0
 1474 010a 0AFB0AFA 		mul	r10, r10, r10
 1475              	.LVL264:
 694:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       max_dist = tdist*tdist;
 1476              		.loc 1 694 0
 1477 010e A4EB0904 		sub	r4, r4, r9
 1478              	.LVL265:
 1479 0112 6400     		lsls	r4, r4, #1
 1480              	.LVL266:
 695:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****     } else if (x > maxc0) {
 1481              		.loc 1 695 0
 1482 0114 04FB04F0 		mul	r0, r4, r4
 1483              	.LVL267:
 1484 0118 0090     		str	r0, [sp]
 1485              	.LVL268:
 1486              	.L146:
 713:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****     if (x < minc1) {
 1487              		.loc 1 713 0
 1488 011a 7068     		ldr	r0, [r6, #4]
 1489 011c C05D     		ldrb	r0, [r0, r7]	@ zero_extendqisi2
 1490              	.LVL269:
 714:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       tdist = (x - minc1) * C1_SCALE;
 1491              		.loc 1 714 0
 1492 011e 8242     		cmp	r2, r0
 1493 0120 ADDD     		ble	.L149
 715:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       min_dist += tdist*tdist;
 1494              		.loc 1 715 0
 1495 0122 A0EB020B 		sub	fp, r0, r2
 1496 0126 0BEB4B0B 		add	fp, fp, fp, lsl #1
 1497              	.LVL270:
 716:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       tdist = (x - maxc1) * C1_SCALE;
 1498              		.loc 1 716 0
 1499 012a 0BFB0BAA 		mla	r10, fp, fp, r10
 1500              	.LVL271:
 717:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       max_dist += tdist*tdist;
 1501              		.loc 1 717 0
 1502 012e A0EB0800 		sub	r0, r0, r8
 1503              	.LVL272:
 1504 0132 00EB4000 		add	r0, r0, r0, lsl #1
 1505              	.LVL273:
ARM GAS  /tmp/ccs1isz7.s 			page 43


 718:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****     } else if (x > maxc1) {
 1506              		.loc 1 718 0
 1507 0136 009C     		ldr	r4, [sp]
 1508 0138 00FB0040 		mla	r0, r0, r0, r4
 1509              	.LVL274:
 1510              	.L150:
 735:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****     if (x < minc2) {
 1511              		.loc 1 735 0
 1512 013c B468     		ldr	r4, [r6, #8]
 1513 013e E45D     		ldrb	r4, [r4, r7]	@ zero_extendqisi2
 1514              	.LVL275:
 736:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       tdist = (x - minc2) * C2_SCALE;
 1515              		.loc 1 736 0
 1516 0140 A342     		cmp	r3, r4
 1517 0142 BDDD     		ble	.L153
 737:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       min_dist += tdist*tdist;
 1518              		.loc 1 737 0
 1519 0144 E61A     		subs	r6, r4, r3
 1520              	.LVL276:
 738:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       tdist = (x - maxc2) * C2_SCALE;
 1521              		.loc 1 738 0
 1522 0146 06FB06AA 		mla	r10, r6, r6, r10
 1523              	.LVL277:
 739:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       max_dist += tdist*tdist;
 1524              		.loc 1 739 0
 1525 014a 019E     		ldr	r6, [sp, #4]
 1526              	.LVL278:
 1527 014c A41B     		subs	r4, r4, r6
 1528              	.LVL279:
 740:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****     } else if (x > maxc2) {
 1529              		.loc 1 740 0
 1530 014e 04FB0400 		mla	r0, r4, r4, r0
 1531              	.LVL280:
 1532              	.L154:
 754:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       }
 755:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****     }
 756:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 
 757:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****     mindist[i] = min_dist;	/* save away the results */
 1533              		.loc 1 757 0
 1534 0152 06AC     		add	r4, sp, #24
 1535              	.LVL281:
 1536 0154 44F825A0 		str	r10, [r4, r5, lsl #2]
 758:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****     if (max_dist < minmaxdist)
 1537              		.loc 1 758 0
 1538 0158 8445     		cmp	ip, r0
 1539 015a C7DD     		ble	.L157
 759:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       minmaxdist = max_dist;
 1540              		.loc 1 759 0
 1541 015c 8446     		mov	ip, r0
 1542              	.LVL282:
 1543 015e C5E7     		b	.L157
 1544              	.LVL283:
 1545              	.L164:
 760:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   }
 761:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 
 762:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   /* Now we know that no cell in the update box is more than minmaxdist
 763:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****    * away from some colormap entry.  Therefore, only colors that are
ARM GAS  /tmp/ccs1isz7.s 			page 44


 764:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****    * within minmaxdist of some part of the box need be considered.
 765:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****    */
 766:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   ncolors = 0;
 1546              		.loc 1 766 0
 1547 0160 0020     		movs	r0, #0
 767:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   for (i = 0; i < numcolors; i++) {
 1548              		.loc 1 767 0
 1549 0162 0346     		mov	r3, r0
 1550              	.LVL284:
 1551 0164 DDF84014 		ldr	r1, [sp, #1088]
 1552              	.LVL285:
 1553 0168 00E0     		b	.L159
 1554              	.LVL286:
 1555              	.L160:
 1556              		.loc 1 767 0 is_stmt 0 discriminator 2
 1557 016a 0133     		adds	r3, r3, #1
 1558              	.LVL287:
 1559              	.L159:
 1560              		.loc 1 767 0 discriminator 1
 1561 016c 7345     		cmp	r3, lr
 1562 016e 07DA     		bge	.L165
 768:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****     if (mindist[i] <= minmaxdist)
 1563              		.loc 1 768 0 is_stmt 1
 1564 0170 06AA     		add	r2, sp, #24
 1565 0172 52F82320 		ldr	r2, [r2, r3, lsl #2]
 1566 0176 6245     		cmp	r2, ip
 1567 0178 F7DC     		bgt	.L160
 1568              	.LVL288:
 769:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       colorlist[ncolors++] = (JSAMPLE) i;
 1569              		.loc 1 769 0
 1570 017a 0B54     		strb	r3, [r1, r0]
 1571 017c 0130     		adds	r0, r0, #1
 1572              	.LVL289:
 1573 017e F4E7     		b	.L160
 1574              	.L165:
 770:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   }
 771:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   return ncolors;
 772:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** }
 1575              		.loc 1 772 0
 1576 0180 0DF21C4D 		addw	sp, sp, #1052
 1577              	.LCFI15:
 1578              		.cfi_def_cfa_offset 36
 1579              		@ sp needed
 1580 0184 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 1581              		.cfi_endproc
 1582              	.LFE10:
 1584              		.section	.text.find_best_colors,"ax",%progbits
 1585              		.align	1
 1586              		.syntax unified
 1587              		.thumb
 1588              		.thumb_func
 1589              		.fpu fpv5-sp-d16
 1591              	find_best_colors:
 1592              	.LFB11:
 773:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 
 774:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 
 775:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** LOCAL(void)
ARM GAS  /tmp/ccs1isz7.s 			page 45


 776:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** find_best_colors (j_decompress_ptr cinfo, int minc0, int minc1, int minc2,
 777:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 		  int numcolors, JSAMPLE colorlist[], JSAMPLE bestcolor[])
 778:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** /* Find the closest colormap entry for each cell in the update box,
 779:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****  * given the list of candidate colors prepared by find_nearby_colors.
 780:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****  * Return the indexes of the closest entries in the bestcolor[] array.
 781:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****  * This routine uses Thomas' incremental distance calculation method to
 782:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****  * find the distance from a colormap entry to successive cells in the box.
 783:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****  */
 784:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** {
 1593              		.loc 1 784 0
 1594              		.cfi_startproc
 1595              		@ args = 12, pretend = 0, frame = 536
 1596              		@ frame_needed = 0, uses_anonymous_args = 0
 1597              	.LVL290:
 1598 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 1599              	.LCFI16:
 1600              		.cfi_def_cfa_offset 36
 1601              		.cfi_offset 4, -36
 1602              		.cfi_offset 5, -32
 1603              		.cfi_offset 6, -28
 1604              		.cfi_offset 7, -24
 1605              		.cfi_offset 8, -20
 1606              		.cfi_offset 9, -16
 1607              		.cfi_offset 10, -12
 1608              		.cfi_offset 11, -8
 1609              		.cfi_offset 14, -4
 1610 0004 ADF5077D 		sub	sp, sp, #540
 1611              	.LCFI17:
 1612              		.cfi_def_cfa_offset 576
 1613 0008 0290     		str	r0, [sp, #8]
 1614 000a 0391     		str	r1, [sp, #12]
 1615 000c 0492     		str	r2, [sp, #16]
 1616 000e 0593     		str	r3, [sp, #20]
 1617              	.LVL291:
 785:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   int ic0, ic1, ic2;
 786:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   int i, icolor;
 787:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   register INT32 * bptr;	/* pointer into bestdist[] array */
 788:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   JSAMPLE * cptr;		/* pointer into bestcolor[] array */
 789:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   INT32 dist0, dist1;		/* initial distance values */
 790:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   register INT32 dist2;		/* current distance in inner loop */
 791:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   INT32 xx0, xx1;		/* distance increments */
 792:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   register INT32 xx2;
 793:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   INT32 inc0, inc1, inc2;	/* initial values for increments */
 794:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   /* This array holds the distance to the nearest-so-far color for each cell */
 795:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   INT32 bestdist[BOX_C0_ELEMS * BOX_C1_ELEMS * BOX_C2_ELEMS];
 796:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 
 797:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   /* Initialize best-distance for each cell of the update box */
 798:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   bptr = bestdist;
 1618              		.loc 1 798 0
 1619 0010 06AA     		add	r2, sp, #24
 1620              	.LVL292:
 799:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   for (i = BOX_C0_ELEMS*BOX_C1_ELEMS*BOX_C2_ELEMS-1; i >= 0; i--)
 1621              		.loc 1 799 0
 1622 0012 7F23     		movs	r3, #127
 1623              	.LVL293:
 1624 0014 04E0     		b	.L167
 1625              	.LVL294:
ARM GAS  /tmp/ccs1isz7.s 			page 46


 1626              	.L168:
 800:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****     *bptr++ = 0x7FFFFFFFL;
 1627              		.loc 1 800 0 discriminator 3
 1628 0016 6FF00041 		mvn	r1, #-2147483648
 1629 001a 1160     		str	r1, [r2]
 799:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   for (i = BOX_C0_ELEMS*BOX_C1_ELEMS*BOX_C2_ELEMS-1; i >= 0; i--)
 1630              		.loc 1 799 0 discriminator 3
 1631 001c 013B     		subs	r3, r3, #1
 1632              	.LVL295:
 1633              		.loc 1 800 0 discriminator 3
 1634 001e 0432     		adds	r2, r2, #4
 1635              	.LVL296:
 1636              	.L167:
 799:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   for (i = BOX_C0_ELEMS*BOX_C1_ELEMS*BOX_C2_ELEMS-1; i >= 0; i--)
 1637              		.loc 1 799 0 discriminator 1
 1638 0020 002B     		cmp	r3, #0
 1639 0022 F8DA     		bge	.L168
 801:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   
 802:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   /* For each color selected by find_nearby_colors,
 803:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****    * compute its distance to the center of each cell in the box.
 804:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****    * If that's less than best-so-far, update best distance and color number.
 805:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****    */
 806:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   
 807:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   /* Nominal steps between cell centers ("x" in Thomas article) */
 808:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** #define STEP_C0  ((1 << C0_SHIFT) * C0_SCALE)
 809:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** #define STEP_C1  ((1 << C1_SHIFT) * C1_SCALE)
 810:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** #define STEP_C2  ((1 << C2_SHIFT) * C2_SCALE)
 811:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   
 812:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   for (i = 0; i < numcolors; i++) {
 1640              		.loc 1 812 0
 1641 0024 0025     		movs	r5, #0
 1642 0026 27E0     		b	.L169
 1643              	.LVL297:
 1644              	.L171:
 813:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****     icolor = GETJSAMPLE(colorlist[i]);
 814:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****     /* Compute (square of) distance from minc0/c1/c2 to this color */
 815:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****     inc0 = (minc0 - GETJSAMPLE(cinfo->colormap[0][icolor])) * C0_SCALE;
 816:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****     dist0 = inc0*inc0;
 817:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****     inc1 = (minc1 - GETJSAMPLE(cinfo->colormap[1][icolor])) * C1_SCALE;
 818:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****     dist0 += inc1*inc1;
 819:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****     inc2 = (minc2 - GETJSAMPLE(cinfo->colormap[2][icolor])) * C2_SCALE;
 820:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****     dist0 += inc2*inc2;
 821:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****     /* Form the initial difference increments */
 822:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****     inc0 = inc0 * (2 * STEP_C0) + STEP_C0 * STEP_C0;
 823:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****     inc1 = inc1 * (2 * STEP_C1) + STEP_C1 * STEP_C1;
 824:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****     inc2 = inc2 * (2 * STEP_C2) + STEP_C2 * STEP_C2;
 825:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****     /* Now loop over all cells in box, updating distance per Thomas method */
 826:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****     bptr = bestdist;
 827:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****     cptr = bestcolor;
 828:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****     xx0 = inc0;
 829:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****     for (ic0 = BOX_C0_ELEMS-1; ic0 >= 0; ic0--) {
 830:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       dist1 = dist0;
 831:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       xx1 = inc1;
 832:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       for (ic1 = BOX_C1_ELEMS-1; ic1 >= 0; ic1--) {
 833:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 	dist2 = dist1;
 834:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 	xx2 = inc2;
 835:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 	for (ic2 = BOX_C2_ELEMS-1; ic2 >= 0; ic2--) {
ARM GAS  /tmp/ccs1isz7.s 			page 47


 836:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 	  if (dist2 < *bptr) {
 837:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 	    *bptr = dist2;
 838:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 	    *cptr = (JSAMPLE) icolor;
 839:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 	  }
 840:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 	  dist2 += xx2;
 1645              		.loc 1 840 0 discriminator 2
 1646 0028 0344     		add	r3, r3, r0
 1647              	.LVL298:
 841:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 	  xx2 += 2 * STEP_C2 * STEP_C2;
 1648              		.loc 1 841 0 discriminator 2
 1649 002a 8030     		adds	r0, r0, #128
 1650              	.LVL299:
 842:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 	  bptr++;
 1651              		.loc 1 842 0 discriminator 2
 1652 002c 0432     		adds	r2, r2, #4
 1653              	.LVL300:
 843:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 	  cptr++;
 1654              		.loc 1 843 0 discriminator 2
 1655 002e 0134     		adds	r4, r4, #1
 1656              	.LVL301:
 835:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 	  if (dist2 < *bptr) {
 1657              		.loc 1 835 0 discriminator 2
 1658 0030 0139     		subs	r1, r1, #1
 1659              	.LVL302:
 1660              	.L173:
 835:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 	  if (dist2 < *bptr) {
 1661              		.loc 1 835 0 is_stmt 0 discriminator 1
 1662 0032 0029     		cmp	r1, #0
 1663 0034 06DB     		blt	.L179
 836:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 	    *bptr = dist2;
 1664              		.loc 1 836 0 is_stmt 1
 1665 0036 1568     		ldr	r5, [r2]
 1666 0038 9D42     		cmp	r5, r3
 1667 003a F5DD     		ble	.L171
 837:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 	    *cptr = (JSAMPLE) icolor;
 1668              		.loc 1 837 0
 1669 003c 1360     		str	r3, [r2]
 838:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 	  }
 1670              		.loc 1 838 0
 1671 003e 84F80080 		strb	r8, [r4]
 1672 0042 F1E7     		b	.L171
 1673              	.L179:
 1674 0044 009D     		ldr	r5, [sp]
 844:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 	}
 845:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 	dist1 += xx1;
 1675              		.loc 1 845 0 discriminator 2
 1676 0046 F444     		add	ip, ip, lr
 1677              	.LVL303:
 846:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 	xx1 += 2 * STEP_C1 * STEP_C1;
 1678              		.loc 1 846 0 discriminator 2
 1679 0048 0EF5907E 		add	lr, lr, #288
 1680              	.LVL304:
 832:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 	dist2 = dist1;
 1681              		.loc 1 832 0 discriminator 2
 1682 004c 013F     		subs	r7, r7, #1
 1683              	.LVL305:
 1684              	.L174:
ARM GAS  /tmp/ccs1isz7.s 			page 48


 832:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 	dist2 = dist1;
 1685              		.loc 1 832 0 is_stmt 0 discriminator 1
 1686 004e 002F     		cmp	r7, #0
 1687 0050 04DB     		blt	.L180
 834:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 	for (ic2 = BOX_C2_ELEMS-1; ic2 >= 0; ic2--) {
 1688              		.loc 1 834 0 is_stmt 1
 1689 0052 3046     		mov	r0, r6
 833:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 	xx2 = inc2;
 1690              		.loc 1 833 0
 1691 0054 6346     		mov	r3, ip
 835:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 	  if (dist2 < *bptr) {
 1692              		.loc 1 835 0
 1693 0056 0321     		movs	r1, #3
 1694 0058 0095     		str	r5, [sp]
 1695 005a EAE7     		b	.L173
 1696              	.L180:
 847:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       }
 848:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       dist0 += xx0;
 1697              		.loc 1 848 0 discriminator 2
 1698 005c CA44     		add	r10, r10, r9
 1699              	.LVL306:
 849:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       xx0 += 2 * STEP_C0 * STEP_C0;
 1700              		.loc 1 849 0 discriminator 2
 1701 005e 09F50079 		add	r9, r9, #512
 1702              	.LVL307:
 829:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       dist1 = dist0;
 1703              		.loc 1 829 0 discriminator 2
 1704 0062 0BF1FF3B 		add	fp, fp, #-1
 1705              	.LVL308:
 1706              	.L170:
 829:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       dist1 = dist0;
 1707              		.loc 1 829 0 is_stmt 0 discriminator 1
 1708 0066 BBF1000F 		cmp	fp, #0
 1709 006a 04DB     		blt	.L181
 831:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       for (ic1 = BOX_C1_ELEMS-1; ic1 >= 0; ic1--) {
 1710              		.loc 1 831 0 is_stmt 1
 1711 006c DDF804E0 		ldr	lr, [sp, #4]
 830:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       xx1 = inc1;
 1712              		.loc 1 830 0
 1713 0070 D446     		mov	ip, r10
 832:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 	dist2 = dist1;
 1714              		.loc 1 832 0
 1715 0072 0727     		movs	r7, #7
 1716 0074 EBE7     		b	.L174
 1717              	.L181:
 812:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****     icolor = GETJSAMPLE(colorlist[i]);
 1718              		.loc 1 812 0 discriminator 2
 1719 0076 0135     		adds	r5, r5, #1
 1720              	.LVL309:
 1721              	.L169:
 812:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****     icolor = GETJSAMPLE(colorlist[i]);
 1722              		.loc 1 812 0 is_stmt 0 discriminator 1
 1723 0078 909B     		ldr	r3, [sp, #576]
 1724 007a 9D42     		cmp	r5, r3
 1725 007c 30DA     		bge	.L182
 813:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****     /* Compute (square of) distance from minc0/c1/c2 to this color */
 1726              		.loc 1 813 0 is_stmt 1
ARM GAS  /tmp/ccs1isz7.s 			page 49


 1727 007e 919B     		ldr	r3, [sp, #580]
 1728 0080 13F80580 		ldrb	r8, [r3, r5]	@ zero_extendqisi2
 1729              	.LVL310:
 815:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****     dist0 = inc0*inc0;
 1730              		.loc 1 815 0
 1731 0084 029B     		ldr	r3, [sp, #8]
 1732 0086 D3F88820 		ldr	r2, [r3, #136]
 1733              	.LVL311:
 1734 008a 1368     		ldr	r3, [r2]
 1735 008c 13F80890 		ldrb	r9, [r3, r8]	@ zero_extendqisi2
 1736 0090 039B     		ldr	r3, [sp, #12]
 1737 0092 A3EB0909 		sub	r9, r3, r9
 1738 0096 4FEA4909 		lsl	r9, r9, #1
 1739              	.LVL312:
 817:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****     dist0 += inc1*inc1;
 1740              		.loc 1 817 0
 1741 009a 5368     		ldr	r3, [r2, #4]
 1742 009c 13F80830 		ldrb	r3, [r3, r8]	@ zero_extendqisi2
 1743 00a0 0499     		ldr	r1, [sp, #16]
 1744 00a2 CB1A     		subs	r3, r1, r3
 1745 00a4 03EB4303 		add	r3, r3, r3, lsl #1
 1746              	.LVL313:
 818:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****     inc2 = (minc2 - GETJSAMPLE(cinfo->colormap[2][icolor])) * C2_SCALE;
 1747              		.loc 1 818 0
 1748 00a8 03FB03FA 		mul	r10, r3, r3
 1749 00ac 09FB09AA 		mla	r10, r9, r9, r10
 1750              	.LVL314:
 819:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****     dist0 += inc2*inc2;
 1751              		.loc 1 819 0
 1752 00b0 9268     		ldr	r2, [r2, #8]
 1753 00b2 12F80820 		ldrb	r2, [r2, r8]	@ zero_extendqisi2
 1754 00b6 0599     		ldr	r1, [sp, #20]
 1755 00b8 8A1A     		subs	r2, r1, r2
 1756              	.LVL315:
 820:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****     /* Form the initial difference increments */
 1757              		.loc 1 820 0
 1758 00ba 02FB02AA 		mla	r10, r2, r2, r10
 1759              	.LVL316:
 822:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****     inc1 = inc1 * (2 * STEP_C1) + STEP_C1 * STEP_C1;
 1760              		.loc 1 822 0
 1761 00be 09F10809 		add	r9, r9, #8
 1762              	.LVL317:
 1763 00c2 4FEA4919 		lsl	r9, r9, #5
 1764              	.LVL318:
 823:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****     inc2 = inc2 * (2 * STEP_C2) + STEP_C2 * STEP_C2;
 1765              		.loc 1 823 0
 1766 00c6 03EB4303 		add	r3, r3, r3, lsl #1
 1767              	.LVL319:
 1768 00ca D900     		lsls	r1, r3, #3
 1769 00cc 01F19003 		add	r3, r1, #144
 1770 00d0 0193     		str	r3, [sp, #4]
 1771              	.LVL320:
 824:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****     /* Now loop over all cells in box, updating distance per Thomas method */
 1772              		.loc 1 824 0
 1773 00d2 0432     		adds	r2, r2, #4
 1774              	.LVL321:
 1775 00d4 1601     		lsls	r6, r2, #4
ARM GAS  /tmp/ccs1isz7.s 			page 50


 1776              	.LVL322:
 827:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****     xx0 = inc0;
 1777              		.loc 1 827 0
 1778 00d6 929C     		ldr	r4, [sp, #584]
 826:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****     cptr = bestcolor;
 1779              		.loc 1 826 0
 1780 00d8 06AA     		add	r2, sp, #24
 1781              	.LVL323:
 829:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       dist1 = dist0;
 1782              		.loc 1 829 0
 1783 00da 4FF0030B 		mov	fp, #3
 1784 00de C2E7     		b	.L170
 1785              	.LVL324:
 1786              	.L182:
 850:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****     }
 851:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   }
 852:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** }
 1787              		.loc 1 852 0
 1788 00e0 0DF5077D 		add	sp, sp, #540
 1789              	.LCFI18:
 1790              		.cfi_def_cfa_offset 36
 1791              		@ sp needed
 1792 00e4 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 1793              		.cfi_endproc
 1794              	.LFE11:
 1796              		.section	.text.fill_inverse_cmap,"ax",%progbits
 1797              		.align	1
 1798              		.syntax unified
 1799              		.thumb
 1800              		.thumb_func
 1801              		.fpu fpv5-sp-d16
 1803              	fill_inverse_cmap:
 1804              	.LFB12:
 853:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 
 854:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 
 855:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** LOCAL(void)
 856:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** fill_inverse_cmap (j_decompress_ptr cinfo, int c0, int c1, int c2)
 857:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** /* Fill the inverse-colormap entries in the update box that contains */
 858:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** /* histogram cell c0/c1/c2.  (Only that one cell MUST be filled, but */
 859:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** /* we can fill as many others as we wish.) */
 860:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** {
 1805              		.loc 1 860 0
 1806              		.cfi_startproc
 1807              		@ args = 0, pretend = 0, frame = 392
 1808              		@ frame_needed = 0, uses_anonymous_args = 0
 1809              	.LVL325:
 1810 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 1811              	.LCFI19:
 1812              		.cfi_def_cfa_offset 36
 1813              		.cfi_offset 4, -36
 1814              		.cfi_offset 5, -32
 1815              		.cfi_offset 6, -28
 1816              		.cfi_offset 7, -24
 1817              		.cfi_offset 8, -20
 1818              		.cfi_offset 9, -16
 1819              		.cfi_offset 10, -12
 1820              		.cfi_offset 11, -8
ARM GAS  /tmp/ccs1isz7.s 			page 51


 1821              		.cfi_offset 14, -4
 1822 0004 E7B0     		sub	sp, sp, #412
 1823              	.LCFI20:
 1824              		.cfi_def_cfa_offset 448
 1825 0006 8346     		mov	fp, r0
 1826 0008 8846     		mov	r8, r1
 1827 000a 1646     		mov	r6, r2
 1828 000c 1D46     		mov	r5, r3
 861:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   my_cquantize_ptr cquantize = (my_cquantize_ptr) cinfo->cquantize;
 1829              		.loc 1 861 0
 1830 000e D0F8E031 		ldr	r3, [r0, #480]
 1831              	.LVL326:
 862:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   hist3d histogram = cquantize->histogram;
 1832              		.loc 1 862 0
 1833 0012 D3F81890 		ldr	r9, [r3, #24]
 1834              	.LVL327:
 863:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   int minc0, minc1, minc2;	/* lower left corner of update box */
 864:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   int ic0, ic1, ic2;
 865:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   register JSAMPLE * cptr;	/* pointer into bestcolor[] array */
 866:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   register histptr cachep;	/* pointer into main cache array */
 867:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   /* This array lists the candidate colormap indexes. */
 868:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   JSAMPLE colorlist[MAXNUMCOLORS];
 869:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   int numcolors;		/* number of candidate colors */
 870:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   /* This array holds the actually closest colormap index for each cell. */
 871:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   JSAMPLE bestcolor[BOX_C0_ELEMS * BOX_C1_ELEMS * BOX_C2_ELEMS];
 872:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 
 873:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   /* Convert cell coordinates to update box ID */
 874:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   c0 >>= BOX_C0_LOG;
 1835              		.loc 1 874 0
 1836 0016 8A10     		asrs	r2, r1, #2
 1837              	.LVL328:
 875:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   c1 >>= BOX_C1_LOG;
 1838              		.loc 1 875 0
 1839 0018 F310     		asrs	r3, r6, #3
 1840              	.LVL329:
 876:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   c2 >>= BOX_C2_LOG;
 1841              		.loc 1 876 0
 1842 001a 4FEAA50A 		asr	r10, r5, #2
 1843              	.LVL330:
 877:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 
 878:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   /* Compute true coordinates of update box's origin corner.
 879:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****    * Actually we compute the coordinates of the center of the corner
 880:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****    * histogram cell, which are the lower bounds of the volume we care about.
 881:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****    */
 882:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   minc0 = (c0 << BOX_C0_SHIFT) + ((1 << C0_SHIFT) >> 1);
 1844              		.loc 1 882 0
 1845 001e 5201     		lsls	r2, r2, #5
 1846              	.LVL331:
 1847 0020 111D     		adds	r1, r2, #4
 1848              	.LVL332:
 883:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   minc1 = (c1 << BOX_C1_SHIFT) + ((1 << C1_SHIFT) >> 1);
 1849              		.loc 1 883 0
 1850 0022 5B01     		lsls	r3, r3, #5
 1851              	.LVL333:
 1852 0024 9A1C     		adds	r2, r3, #2
 1853              	.LVL334:
 884:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   minc2 = (c2 << BOX_C2_SHIFT) + ((1 << C2_SHIFT) >> 1);
ARM GAS  /tmp/ccs1isz7.s 			page 52


 1854              		.loc 1 884 0
 1855 0026 4FEA4A1A 		lsl	r10, r10, #5
 1856              	.LVL335:
 1857 002a 0AF1040A 		add	r10, r10, #4
 1858              	.LVL336:
 885:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   
 886:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   /* Determine which colormap entries are close enough to be candidates
 887:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****    * for the nearest entry to some cell in the update box.
 888:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****    */
 889:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   numcolors = find_nearby_colors(cinfo, minc0, minc1, minc2, colorlist);
 1859              		.loc 1 889 0
 1860 002e 26AF     		add	r7, sp, #152
 1861 0030 0097     		str	r7, [sp]
 1862              	.LVL337:
 1863 0032 5346     		mov	r3, r10
 1864 0034 0592     		str	r2, [sp, #20]
 1865 0036 0491     		str	r1, [sp, #16]
 1866 0038 FFF7FEFF 		bl	find_nearby_colors
 1867              	.LVL338:
 890:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 
 891:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   /* Determine the actually nearest colors. */
 892:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   find_best_colors(cinfo, minc0, minc1, minc2, numcolors, colorlist,
 1868              		.loc 1 892 0
 1869 003c 06AC     		add	r4, sp, #24
 1870 003e 0294     		str	r4, [sp, #8]
 1871 0040 0197     		str	r7, [sp, #4]
 1872 0042 0090     		str	r0, [sp]
 1873 0044 5346     		mov	r3, r10
 1874 0046 059A     		ldr	r2, [sp, #20]
 1875 0048 0499     		ldr	r1, [sp, #16]
 1876 004a 5846     		mov	r0, fp
 1877              	.LVL339:
 1878 004c FFF7FEFF 		bl	find_best_colors
 1879              	.LVL340:
 893:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 		   bestcolor);
 894:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 
 895:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   /* Save the best color numbers (plus 1) in the main cache array */
 896:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   c0 <<= BOX_C0_LOG;		/* convert ID back to base cell indexes */
 1880              		.loc 1 896 0
 1881 0050 28F00308 		bic	r8, r8, #3
 1882              	.LVL341:
 897:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   c1 <<= BOX_C1_LOG;
 1883              		.loc 1 897 0
 1884 0054 26F00706 		bic	r6, r6, #7
 1885              	.LVL342:
 898:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   c2 <<= BOX_C2_LOG;
 1886              		.loc 1 898 0
 1887 0058 25F00305 		bic	r5, r5, #3
 1888              	.LVL343:
 899:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   cptr = bestcolor;
 900:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   for (ic0 = 0; ic0 < BOX_C0_ELEMS; ic0++) {
 1889              		.loc 1 900 0
 1890 005c 0027     		movs	r7, #0
 1891 005e 16E0     		b	.L184
 1892              	.LVL344:
 1893              	.L186:
 901:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****     for (ic1 = 0; ic1 < BOX_C1_ELEMS; ic1++) {
ARM GAS  /tmp/ccs1isz7.s 			page 53


 902:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       cachep = & histogram[c0+ic0][c1+ic1][c2];
 903:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       for (ic2 = 0; ic2 < BOX_C2_ELEMS; ic2++) {
 904:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 	*cachep++ = (histcell) (GETJSAMPLE(*cptr++) + 1);
 1894              		.loc 1 904 0 discriminator 3
 1895 0060 2278     		ldrb	r2, [r4]	@ zero_extendqisi2
 1896              	.LVL345:
 1897 0062 0132     		adds	r2, r2, #1
 1898 0064 1A80     		strh	r2, [r3]	@ movhi
 903:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 	*cachep++ = (histcell) (GETJSAMPLE(*cptr++) + 1);
 1899              		.loc 1 903 0 discriminator 3
 1900 0066 0131     		adds	r1, r1, #1
 1901              	.LVL346:
 1902              		.loc 1 904 0 discriminator 3
 1903 0068 0233     		adds	r3, r3, #2
 1904              	.LVL347:
 1905 006a 0134     		adds	r4, r4, #1
 1906              	.LVL348:
 1907              	.L185:
 903:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 	*cachep++ = (histcell) (GETJSAMPLE(*cptr++) + 1);
 1908              		.loc 1 903 0 discriminator 1
 1909 006c 0329     		cmp	r1, #3
 1910 006e F7DD     		ble	.L186
 901:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****     for (ic1 = 0; ic1 < BOX_C1_ELEMS; ic1++) {
 1911              		.loc 1 901 0 discriminator 2
 1912 0070 0130     		adds	r0, r0, #1
 1913              	.LVL349:
 1914              	.L188:
 901:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****     for (ic1 = 0; ic1 < BOX_C1_ELEMS; ic1++) {
 1915              		.loc 1 901 0 is_stmt 0 discriminator 1
 1916 0072 0728     		cmp	r0, #7
 1917 0074 0ADC     		bgt	.L191
 902:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       for (ic2 = 0; ic2 < BOX_C2_ELEMS; ic2++) {
 1918              		.loc 1 902 0 is_stmt 1
 1919 0076 07EB0803 		add	r3, r7, r8
 1920 007a 59F82330 		ldr	r3, [r9, r3, lsl #2]
 1921 007e 8219     		adds	r2, r0, r6
 1922 0080 03EB8213 		add	r3, r3, r2, lsl #6
 1923 0084 03EB4503 		add	r3, r3, r5, lsl #1
 1924              	.LVL350:
 903:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 	*cachep++ = (histcell) (GETJSAMPLE(*cptr++) + 1);
 1925              		.loc 1 903 0
 1926 0088 0021     		movs	r1, #0
 1927 008a EFE7     		b	.L185
 1928              	.LVL351:
 1929              	.L191:
 900:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****     for (ic1 = 0; ic1 < BOX_C1_ELEMS; ic1++) {
 1930              		.loc 1 900 0 discriminator 2
 1931 008c 0137     		adds	r7, r7, #1
 1932              	.LVL352:
 1933              	.L184:
 900:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****     for (ic1 = 0; ic1 < BOX_C1_ELEMS; ic1++) {
 1934              		.loc 1 900 0 is_stmt 0 discriminator 1
 1935 008e 032F     		cmp	r7, #3
 1936 0090 01DC     		bgt	.L192
 901:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       cachep = & histogram[c0+ic0][c1+ic1][c2];
 1937              		.loc 1 901 0 is_stmt 1
 1938 0092 0020     		movs	r0, #0
ARM GAS  /tmp/ccs1isz7.s 			page 54


 1939 0094 EDE7     		b	.L188
 1940              	.L192:
 905:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       }
 906:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****     }
 907:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   }
 908:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** }
 1941              		.loc 1 908 0
 1942 0096 67B0     		add	sp, sp, #412
 1943              	.LCFI21:
 1944              		.cfi_def_cfa_offset 36
 1945              		@ sp needed
 1946 0098 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 1947              		.cfi_endproc
 1948              	.LFE12:
 1950              		.section	.text.pass2_no_dither,"ax",%progbits
 1951              		.align	1
 1952              		.syntax unified
 1953              		.thumb
 1954              		.thumb_func
 1955              		.fpu fpv5-sp-d16
 1957              	pass2_no_dither:
 1958              	.LFB13:
 909:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 
 910:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 
 911:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** /*
 912:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****  * Map some rows of pixels to the output colormapped representation.
 913:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****  */
 914:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 
 915:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** METHODDEF(void)
 916:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** pass2_no_dither (j_decompress_ptr cinfo,
 917:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 		 JSAMPARRAY input_buf, JSAMPARRAY output_buf, int num_rows)
 918:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** /* This version performs no dithering */
 919:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** {
 1959              		.loc 1 919 0
 1960              		.cfi_startproc
 1961              		@ args = 0, pretend = 0, frame = 16
 1962              		@ frame_needed = 0, uses_anonymous_args = 0
 1963              	.LVL353:
 1964 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 1965              	.LCFI22:
 1966              		.cfi_def_cfa_offset 36
 1967              		.cfi_offset 4, -36
 1968              		.cfi_offset 5, -32
 1969              		.cfi_offset 6, -28
 1970              		.cfi_offset 7, -24
 1971              		.cfi_offset 8, -20
 1972              		.cfi_offset 9, -16
 1973              		.cfi_offset 10, -12
 1974              		.cfi_offset 11, -8
 1975              		.cfi_offset 14, -4
 1976 0004 85B0     		sub	sp, sp, #20
 1977              	.LCFI23:
 1978              		.cfi_def_cfa_offset 56
 1979 0006 0090     		str	r0, [sp]
 1980 0008 0291     		str	r1, [sp, #8]
 1981 000a 0392     		str	r2, [sp, #12]
 1982 000c 9B46     		mov	fp, r3
ARM GAS  /tmp/ccs1isz7.s 			page 55


 920:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   my_cquantize_ptr cquantize = (my_cquantize_ptr) cinfo->cquantize;
 1983              		.loc 1 920 0
 1984 000e D0F8E031 		ldr	r3, [r0, #480]
 1985              	.LVL354:
 921:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   hist3d histogram = cquantize->histogram;
 1986              		.loc 1 921 0
 1987 0012 D3F81890 		ldr	r9, [r3, #24]
 1988              	.LVL355:
 922:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   register JSAMPROW inptr, outptr;
 923:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   register histptr cachep;
 924:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   register int c0, c1, c2;
 925:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   int row;
 926:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   JDIMENSION col;
 927:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   JDIMENSION width = cinfo->output_width;
 1989              		.loc 1 927 0
 1990 0016 036F     		ldr	r3, [r0, #112]
 1991              	.LVL356:
 1992 0018 0193     		str	r3, [sp, #4]
 1993              	.LVL357:
 928:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 
 929:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   for (row = 0; row < num_rows; row++) {
 1994              		.loc 1 929 0
 1995 001a 4FF0000A 		mov	r10, #0
 1996 001e 1DE0     		b	.L194
 1997              	.LVL358:
 1998              	.L196:
 930:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****     inptr = input_buf[row];
 931:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****     outptr = output_buf[row];
 932:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****     for (col = width; col > 0; col--) {
 933:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       /* get pixel value and index into the cache */
 934:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       c0 = GETJSAMPLE(*inptr++) >> C0_SHIFT;
 935:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       c1 = GETJSAMPLE(*inptr++) >> C1_SHIFT;
 936:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       c2 = GETJSAMPLE(*inptr++) >> C2_SHIFT;
 937:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       cachep = & histogram[c0][c1][c2];
 938:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       /* If we have not seen this color before, find nearest colormap entry */
 939:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       /* and update the cache */
 940:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       if (*cachep == 0)
 941:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 	fill_inverse_cmap(cinfo, c0,c1,c2);
 942:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       /* Now emit the colormap index for this cell */
 943:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       *outptr++ = (JSAMPLE) (*cachep - 1);
 1999              		.loc 1 943 0 discriminator 2
 2000 0020 38F81430 		ldrh	r3, [r8, r4, lsl #1]
 2001              	.LVL359:
 2002 0024 013B     		subs	r3, r3, #1
 2003 0026 3B70     		strb	r3, [r7]
 932:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       /* get pixel value and index into the cache */
 2004              		.loc 1 932 0 discriminator 2
 2005 0028 013E     		subs	r6, r6, #1
 2006              	.LVL360:
 2007              		.loc 1 943 0 discriminator 2
 2008 002a 0137     		adds	r7, r7, #1
 2009              	.LVL361:
 936:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       cachep = & histogram[c0][c1][c2];
 2010              		.loc 1 936 0 discriminator 2
 2011 002c 2B46     		mov	r3, r5
 2012              	.LVL362:
 2013              	.L195:
ARM GAS  /tmp/ccs1isz7.s 			page 56


 932:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       /* get pixel value and index into the cache */
 2014              		.loc 1 932 0 discriminator 1
 2015 002e 9EB1     		cbz	r6, .L200
 2016              	.LVL363:
 934:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       c1 = GETJSAMPLE(*inptr++) >> C1_SHIFT;
 2017              		.loc 1 934 0
 2018 0030 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2019 0032 C908     		lsrs	r1, r1, #3
 2020              	.LVL364:
 935:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       c2 = GETJSAMPLE(*inptr++) >> C2_SHIFT;
 2021              		.loc 1 935 0
 2022 0034 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 2023 0036 9208     		lsrs	r2, r2, #2
 2024              	.LVL365:
 936:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       cachep = & histogram[c0][c1][c2];
 2025              		.loc 1 936 0
 2026 0038 DD1C     		adds	r5, r3, #3
 2027              	.LVL366:
 2028 003a 9C78     		ldrb	r4, [r3, #2]	@ zero_extendqisi2
 2029 003c E408     		lsrs	r4, r4, #3
 2030              	.LVL367:
 937:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       /* If we have not seen this color before, find nearest colormap entry */
 2031              		.loc 1 937 0
 2032 003e 59F82130 		ldr	r3, [r9, r1, lsl #2]
 2033 0042 03EB8218 		add	r8, r3, r2, lsl #6
 2034              	.LVL368:
 940:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 	fill_inverse_cmap(cinfo, c0,c1,c2);
 2035              		.loc 1 940 0
 2036 0046 38F81430 		ldrh	r3, [r8, r4, lsl #1]
 2037 004a 002B     		cmp	r3, #0
 2038 004c E8D1     		bne	.L196
 941:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       /* Now emit the colormap index for this cell */
 2039              		.loc 1 941 0
 2040 004e 2346     		mov	r3, r4
 2041 0050 0098     		ldr	r0, [sp]
 2042 0052 FFF7FEFF 		bl	fill_inverse_cmap
 2043              	.LVL369:
 2044 0056 E3E7     		b	.L196
 2045              	.LVL370:
 2046              	.L200:
 929:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****     inptr = input_buf[row];
 2047              		.loc 1 929 0 discriminator 2
 2048 0058 0AF1010A 		add	r10, r10, #1
 2049              	.LVL371:
 2050              	.L194:
 929:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****     inptr = input_buf[row];
 2051              		.loc 1 929 0 is_stmt 0 discriminator 1
 2052 005c DA45     		cmp	r10, fp
 2053 005e 07DA     		bge	.L201
 930:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****     outptr = output_buf[row];
 2054              		.loc 1 930 0 is_stmt 1
 2055 0060 029B     		ldr	r3, [sp, #8]
 2056 0062 53F82A30 		ldr	r3, [r3, r10, lsl #2]
 2057              	.LVL372:
 931:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****     for (col = width; col > 0; col--) {
 2058              		.loc 1 931 0
 2059 0066 039A     		ldr	r2, [sp, #12]
ARM GAS  /tmp/ccs1isz7.s 			page 57


 2060 0068 52F82A70 		ldr	r7, [r2, r10, lsl #2]
 2061              	.LVL373:
 932:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       /* get pixel value and index into the cache */
 2062              		.loc 1 932 0
 2063 006c 019E     		ldr	r6, [sp, #4]
 2064 006e DEE7     		b	.L195
 2065              	.LVL374:
 2066              	.L201:
 944:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****     }
 945:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   }
 946:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** }
 2067              		.loc 1 946 0
 2068 0070 05B0     		add	sp, sp, #20
 2069              	.LCFI24:
 2070              		.cfi_def_cfa_offset 36
 2071              	.LVL375:
 2072              		@ sp needed
 2073 0072 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 2074              		.cfi_endproc
 2075              	.LFE13:
 2077              		.section	.text.pass2_fs_dither,"ax",%progbits
 2078              		.align	1
 2079              		.syntax unified
 2080              		.thumb
 2081              		.thumb_func
 2082              		.fpu fpv5-sp-d16
 2084              	pass2_fs_dither:
 2085              	.LFB14:
 947:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 
 948:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 
 949:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** METHODDEF(void)
 950:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** pass2_fs_dither (j_decompress_ptr cinfo,
 951:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 		 JSAMPARRAY input_buf, JSAMPARRAY output_buf, int num_rows)
 952:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** /* This version performs Floyd-Steinberg dithering */
 953:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** {
 2086              		.loc 1 953 0
 2087              		.cfi_startproc
 2088              		@ args = 0, pretend = 0, frame = 96
 2089              		@ frame_needed = 0, uses_anonymous_args = 0
 2090              	.LVL376:
 2091 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 2092              	.LCFI25:
 2093              		.cfi_def_cfa_offset 36
 2094              		.cfi_offset 4, -36
 2095              		.cfi_offset 5, -32
 2096              		.cfi_offset 6, -28
 2097              		.cfi_offset 7, -24
 2098              		.cfi_offset 8, -20
 2099              		.cfi_offset 9, -16
 2100              		.cfi_offset 10, -12
 2101              		.cfi_offset 11, -8
 2102              		.cfi_offset 14, -4
 2103 0004 99B0     		sub	sp, sp, #100
 2104              	.LCFI26:
 2105              		.cfi_def_cfa_offset 136
 2106 0006 1290     		str	r0, [sp, #72]
 2107 0008 1691     		str	r1, [sp, #88]
ARM GAS  /tmp/ccs1isz7.s 			page 58


 2108 000a 1792     		str	r2, [sp, #92]
 2109 000c 1593     		str	r3, [sp, #84]
 954:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   my_cquantize_ptr cquantize = (my_cquantize_ptr) cinfo->cquantize;
 2110              		.loc 1 954 0
 2111 000e D0F8E011 		ldr	r1, [r0, #480]
 2112              	.LVL377:
 2113 0012 1391     		str	r1, [sp, #76]
 2114              	.LVL378:
 955:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   hist3d histogram = cquantize->histogram;
 2115              		.loc 1 955 0
 2116 0014 8A69     		ldr	r2, [r1, #24]
 2117              	.LVL379:
 2118 0016 0B92     		str	r2, [sp, #44]
 2119              	.LVL380:
 956:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   register LOCFSERROR cur0, cur1, cur2;	/* current error or pixel value */
 957:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   LOCFSERROR belowerr0, belowerr1, belowerr2; /* error for pixel below cur */
 958:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   LOCFSERROR bpreverr0, bpreverr1, bpreverr2; /* error for below/prev col */
 959:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   register FSERRPTR errorptr;	/* => fserrors[] at column before current */
 960:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   JSAMPROW inptr;		/* => current input pixel */
 961:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   JSAMPROW outptr;		/* => current output pixel */
 962:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   histptr cachep;
 963:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   int dir;			/* +1 or -1 depending on direction */
 964:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   int dir3;			/* 3*dir, for advancing inptr & errorptr */
 965:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   int row;
 966:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   JDIMENSION col;
 967:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   JDIMENSION width = cinfo->output_width;
 2120              		.loc 1 967 0
 2121 0018 026F     		ldr	r2, [r0, #112]
 2122              	.LVL381:
 2123 001a 1492     		str	r2, [sp, #80]
 2124              	.LVL382:
 968:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   JSAMPLE *range_limit = cinfo->sample_range_limit;
 2125              		.loc 1 968 0
 2126 001c D0F84C21 		ldr	r2, [r0, #332]
 2127              	.LVL383:
 2128 0020 0C92     		str	r2, [sp, #48]
 2129              	.LVL384:
 969:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   int *error_limit = cquantize->error_limiter;
 2130              		.loc 1 969 0
 2131 0022 D1F82890 		ldr	r9, [r1, #40]
 2132              	.LVL385:
 970:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   JSAMPROW colormap0 = cinfo->colormap[0];
 2133              		.loc 1 970 0
 2134 0026 D0F88830 		ldr	r3, [r0, #136]
 2135              	.LVL386:
 2136 002a 1A68     		ldr	r2, [r3]
 2137              	.LVL387:
 2138 002c 0D92     		str	r2, [sp, #52]
 2139              	.LVL388:
 971:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   JSAMPROW colormap1 = cinfo->colormap[1];
 2140              		.loc 1 971 0
 2141 002e 5A68     		ldr	r2, [r3, #4]
 2142              	.LVL389:
 2143 0030 0E92     		str	r2, [sp, #56]
 2144              	.LVL390:
 972:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   JSAMPROW colormap2 = cinfo->colormap[2];
 2145              		.loc 1 972 0
ARM GAS  /tmp/ccs1isz7.s 			page 59


 2146 0032 9B68     		ldr	r3, [r3, #8]
 2147              	.LVL391:
 2148 0034 0F93     		str	r3, [sp, #60]
 2149              	.LVL392:
 973:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   SHIFT_TEMPS
 974:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 
 975:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   for (row = 0; row < num_rows; row++) {
 2150              		.loc 1 975 0
 2151 0036 0023     		movs	r3, #0
 2152              	.LVL393:
 2153 0038 1193     		str	r3, [sp, #68]
 2154 003a CDF84090 		str	r9, [sp, #64]
 2155 003e 94E0     		b	.L203
 2156              	.LVL394:
 2157              	.L204:
 976:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****     inptr = input_buf[row];
 977:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****     outptr = output_buf[row];
 978:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****     if (cquantize->on_odd_row) {
 979:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       /* work right to left in this row */
 980:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       inptr += (width-1) * 3;	/* so point to rightmost pixel */
 981:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       outptr += width-1;
 982:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       dir = -1;
 983:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       dir3 = -3;
 984:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       errorptr = cquantize->fserrors + (width+1)*3; /* => entry after last column */
 985:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       cquantize->on_odd_row = FALSE; /* flip for next time */
 986:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****     } else {
 987:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       /* work left to right in this row */
 988:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       dir = 1;
 989:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       dir3 = 3;
 990:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       errorptr = cquantize->fserrors; /* => entry before first real column */
 2158              		.loc 1 990 0
 2159 0040 139A     		ldr	r2, [sp, #76]
 2160 0042 176A     		ldr	r7, [r2, #32]
 2161              	.LVL395:
 991:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       cquantize->on_odd_row = TRUE; /* flip for next time */
 2162              		.loc 1 991 0
 2163 0044 0123     		movs	r3, #1
 2164 0046 5362     		str	r3, [r2, #36]
 989:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       errorptr = cquantize->fserrors; /* => entry before first real column */
 2165              		.loc 1 989 0
 2166 0048 4FF0030A 		mov	r10, #3
 988:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       dir3 = 3;
 2167              		.loc 1 988 0
 2168 004c 0A93     		str	r3, [sp, #40]
 2169 004e B1E0     		b	.L205
 2170              	.LVL396:
 2171              	.L207:
 2172              	.LBB2:
 992:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****     }
 993:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****     /* Preset error values: no error propagated to first pixel from left */
 994:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****     cur0 = cur1 = cur2 = 0;
 995:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****     /* and no error propagated to row below yet */
 996:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****     belowerr0 = belowerr1 = belowerr2 = 0;
 997:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****     bpreverr0 = bpreverr1 = bpreverr2 = 0;
 998:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 
 999:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****     for (col = width; col > 0; col--) {
1000:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       /* curN holds the error propagated from the previous pixel on the
ARM GAS  /tmp/ccs1isz7.s 			page 60


1001:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****        * current line.  Add the error propagated from the previous line
1002:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****        * to form the complete error correction term for this pixel, and
1003:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****        * round the error term (which is expressed * 16) to an integer.
1004:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****        * RIGHT_SHIFT rounds towards minus infinity, so adding 8 is correct
1005:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****        * for either sign of the error value.
1006:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****        * Note: errorptr points to *previous* column's array entry.
1007:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****        */
1008:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       cur0 = RIGHT_SHIFT(cur0 + errorptr[dir3+0] + 8, 4);
1009:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       cur1 = RIGHT_SHIFT(cur1 + errorptr[dir3+1] + 8, 4);
1010:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       cur2 = RIGHT_SHIFT(cur2 + errorptr[dir3+2] + 8, 4);
1011:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       /* Limit the error using transfer function set by init_error_limit.
1012:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****        * See comments with init_error_limit for rationale.
1013:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****        */
1014:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       cur0 = error_limit[cur0];
1015:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       cur1 = error_limit[cur1];
1016:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       cur2 = error_limit[cur2];
1017:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       /* Form pixel value + error, and range-limit to 0..MAXJSAMPLE.
1018:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****        * The maximum error is +- MAXJSAMPLE (or less with error limiting);
1019:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****        * this sets the required size of the range_limit array.
1020:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****        */
1021:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       cur0 += GETJSAMPLE(inptr[0]);
1022:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       cur1 += GETJSAMPLE(inptr[1]);
1023:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       cur2 += GETJSAMPLE(inptr[2]);
1024:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       cur0 = GETJSAMPLE(range_limit[cur0]);
1025:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       cur1 = GETJSAMPLE(range_limit[cur1]);
1026:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       cur2 = GETJSAMPLE(range_limit[cur2]);
1027:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       /* Index into the cache with adjusted pixel value */
1028:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       cachep = & histogram[cur0>>C0_SHIFT][cur1>>C1_SHIFT][cur2>>C2_SHIFT];
1029:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       /* If we have not seen this color before, find nearest colormap */
1030:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       /* entry and update the cache */
1031:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       if (*cachep == 0)
1032:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 	fill_inverse_cmap(cinfo, cur0>>C0_SHIFT,cur1>>C1_SHIFT,cur2>>C2_SHIFT);
1033:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       /* Now emit the colormap index for this cell */
1034:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       { register int pixcode = *cachep - 1;
 2173              		.loc 1 1034 0 discriminator 2
 2174 0050 099B     		ldr	r3, [sp, #36]
 2175 0052 33F81430 		ldrh	r3, [r3, r4, lsl #1]
 2176 0056 013B     		subs	r3, r3, #1
 2177              	.LVL397:
1035:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 	*outptr = (JSAMPLE) pixcode;
 2178              		.loc 1 1035 0 discriminator 2
 2179 0058 2B70     		strb	r3, [r5]
1036:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 	/* Compute representation error for this pixel */
1037:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 	cur0 -= GETJSAMPLE(colormap0[pixcode]);
 2180              		.loc 1 1037 0 discriminator 2
 2181 005a 0D9A     		ldr	r2, [sp, #52]
 2182 005c D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 2183 005e A9EB0209 		sub	r9, r9, r2
 2184              	.LVL398:
1038:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 	cur1 -= GETJSAMPLE(colormap1[pixcode]);
 2185              		.loc 1 1038 0 discriminator 2
 2186 0062 0E9A     		ldr	r2, [sp, #56]
 2187 0064 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 2188 0066 A8EB0208 		sub	r8, r8, r2
 2189              	.LVL399:
1039:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 	cur2 -= GETJSAMPLE(colormap2[pixcode]);
 2190              		.loc 1 1039 0 discriminator 2
ARM GAS  /tmp/ccs1isz7.s 			page 61


 2191 006a 0F9A     		ldr	r2, [sp, #60]
 2192 006c D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 2193              	.LVL400:
 2194 006e F61A     		subs	r6, r6, r3
 2195              	.LVL401:
 2196              	.LBE2:
 2197              	.LBB3:
1040:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       }
1041:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       /* Compute error fractions to be propagated to adjacent pixels.
1042:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****        * Add these into the running sums, and simultaneously shift the
1043:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****        * next-line error sums left by 1 column.
1044:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****        */
1045:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       { register LOCFSERROR bnexterr, delta;
1046:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 
1047:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 	bnexterr = cur0;	/* Process component 0 */
1048:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 	delta = cur0 * 2;
 2198              		.loc 1 1048 0 discriminator 2
 2199 0070 4FEA4902 		lsl	r2, r9, #1
 2200              	.LVL402:
1049:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 	cur0 += delta;		/* form error * 3 */
 2201              		.loc 1 1049 0 discriminator 2
 2202 0074 09EB0203 		add	r3, r9, r2
 2203              	.LVL403:
1050:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 	errorptr[0] = (FSERROR) (bpreverr0 + cur0);
 2204              		.loc 1 1050 0 discriminator 2
 2205 0078 0199     		ldr	r1, [sp, #4]
 2206 007a 1944     		add	r1, r1, r3
 2207 007c 3980     		strh	r1, [r7]	@ movhi
1051:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 	cur0 += delta;		/* form error * 5 */
 2208              		.loc 1 1051 0 discriminator 2
 2209 007e 1344     		add	r3, r3, r2
 2210              	.LVL404:
1052:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 	bpreverr0 = belowerr0 + cur0;
 2211              		.loc 1 1052 0 discriminator 2
 2212 0080 0499     		ldr	r1, [sp, #16]
 2213 0082 1944     		add	r1, r1, r3
 2214 0084 0191     		str	r1, [sp, #4]
 2215              	.LVL405:
1053:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 	belowerr0 = bnexterr;
1054:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 	cur0 += delta;		/* form error * 7 */
 2216              		.loc 1 1054 0 discriminator 2
 2217 0086 1344     		add	r3, r3, r2
 2218              	.LVL406:
1055:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 	bnexterr = cur1;	/* Process component 1 */
1056:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 	delta = cur1 * 2;
 2219              		.loc 1 1056 0 discriminator 2
 2220 0088 4FEA4802 		lsl	r2, r8, #1
 2221              	.LVL407:
1057:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 	cur1 += delta;		/* form error * 3 */
 2222              		.loc 1 1057 0 discriminator 2
 2223 008c 08EB0201 		add	r1, r8, r2
 2224              	.LVL408:
1058:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 	errorptr[1] = (FSERROR) (bpreverr1 + cur1);
 2225              		.loc 1 1058 0 discriminator 2
 2226 0090 0298     		ldr	r0, [sp, #8]
 2227 0092 0844     		add	r0, r0, r1
 2228 0094 7880     		strh	r0, [r7, #2]	@ movhi
ARM GAS  /tmp/ccs1isz7.s 			page 62


1059:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 	cur1 += delta;		/* form error * 5 */
 2229              		.loc 1 1059 0 discriminator 2
 2230 0096 1144     		add	r1, r1, r2
 2231              	.LVL409:
1060:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 	bpreverr1 = belowerr1 + cur1;
 2232              		.loc 1 1060 0 discriminator 2
 2233 0098 0598     		ldr	r0, [sp, #20]
 2234 009a 0844     		add	r0, r0, r1
 2235 009c 0290     		str	r0, [sp, #8]
 2236              	.LVL410:
1061:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 	belowerr1 = bnexterr;
1062:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 	cur1 += delta;		/* form error * 7 */
 2237              		.loc 1 1062 0 discriminator 2
 2238 009e 0A44     		add	r2, r2, r1
 2239              	.LVL411:
1063:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 	bnexterr = cur2;	/* Process component 2 */
1064:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 	delta = cur2 * 2;
 2240              		.loc 1 1064 0 discriminator 2
 2241 00a0 7000     		lsls	r0, r6, #1
 2242              	.LVL412:
1065:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 	cur2 += delta;		/* form error * 3 */
 2243              		.loc 1 1065 0 discriminator 2
 2244 00a2 3118     		adds	r1, r6, r0
 2245              	.LVL413:
1066:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 	errorptr[2] = (FSERROR) (bpreverr2 + cur2);
 2246              		.loc 1 1066 0 discriminator 2
 2247 00a4 039C     		ldr	r4, [sp, #12]
 2248              	.LVL414:
 2249 00a6 0C44     		add	r4, r4, r1
 2250 00a8 BC80     		strh	r4, [r7, #4]	@ movhi
1067:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 	cur2 += delta;		/* form error * 5 */
 2251              		.loc 1 1067 0 discriminator 2
 2252 00aa 0144     		add	r1, r1, r0
 2253              	.LVL415:
1068:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 	bpreverr2 = belowerr2 + cur2;
 2254              		.loc 1 1068 0 discriminator 2
 2255 00ac 069C     		ldr	r4, [sp, #24]
 2256 00ae 0C44     		add	r4, r4, r1
 2257 00b0 0394     		str	r4, [sp, #12]
 2258              	.LVL416:
1069:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 	belowerr2 = bnexterr;
1070:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 	cur2 += delta;		/* form error * 7 */
 2259              		.loc 1 1070 0 discriminator 2
 2260 00b2 0844     		add	r0, r0, r1
 2261              	.LVL417:
 2262              	.LBE3:
1071:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       }
1072:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       /* At this point curN contains the 7/16 error value to be propagated
1073:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****        * to the next pixel on the current line, and all the errors for the
1074:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****        * next line have been shifted over.  We are therefore ready to move on.
1075:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****        */
1076:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       inptr += dir3;		/* Advance pixel pointers to next column */
 2263              		.loc 1 1076 0 discriminator 2
 2264 00b4 0799     		ldr	r1, [sp, #28]
 2265 00b6 8B44     		add	fp, fp, r1
 2266              	.LVL418:
1077:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       outptr += dir;
ARM GAS  /tmp/ccs1isz7.s 			page 63


 2267              		.loc 1 1077 0 discriminator 2
 2268 00b8 0A99     		ldr	r1, [sp, #40]
 2269 00ba 0D44     		add	r5, r5, r1
 2270              	.LVL419:
 999:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       /* curN holds the error propagated from the previous pixel on the
 2271              		.loc 1 999 0 discriminator 2
 2272 00bc 0099     		ldr	r1, [sp]
 2273 00be 0139     		subs	r1, r1, #1
 2274 00c0 0091     		str	r1, [sp]
 2275              	.LVL420:
1078:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       errorptr += dir3;		/* advance errorptr to current column */
 2276              		.loc 1 1078 0 discriminator 2
 2277 00c2 089F     		ldr	r7, [sp, #32]
 2278              	.LBB4:
1069:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 	cur2 += delta;		/* form error * 7 */
 2279              		.loc 1 1069 0 discriminator 2
 2280 00c4 0696     		str	r6, [sp, #24]
1061:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 	cur1 += delta;		/* form error * 7 */
 2281              		.loc 1 1061 0 discriminator 2
 2282 00c6 CDF81480 		str	r8, [sp, #20]
1053:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 	cur0 += delta;		/* form error * 7 */
 2283              		.loc 1 1053 0 discriminator 2
 2284 00ca CDF81090 		str	r9, [sp, #16]
 2285              	.LVL421:
 2286              	.L206:
 2287              	.LBE4:
 999:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       /* curN holds the error propagated from the previous pixel on the
 2288              		.loc 1 999 0 discriminator 1
 2289 00ce 0099     		ldr	r1, [sp]
 2290 00d0 0029     		cmp	r1, #0
 2291 00d2 41D0     		beq	.L211
1008:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       cur1 = RIGHT_SHIFT(cur1 + errorptr[dir3+1] + 8, 4);
 2292              		.loc 1 1008 0
 2293 00d4 CDF81CA0 		str	r10, [sp, #28]
 2294 00d8 07EB4A01 		add	r1, r7, r10, lsl #1
 2295 00dc 0891     		str	r1, [sp, #32]
 2296 00de 37F91A10 		ldrsh	r1, [r7, r10, lsl #1]
 2297 00e2 0B44     		add	r3, r3, r1
 2298              	.LVL422:
 2299 00e4 0833     		adds	r3, r3, #8
 2300 00e6 1B11     		asrs	r3, r3, #4
 2301              	.LVL423:
1009:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       cur2 = RIGHT_SHIFT(cur2 + errorptr[dir3+2] + 8, 4);
 2302              		.loc 1 1009 0
 2303 00e8 0AF10101 		add	r1, r10, #1
 2304 00ec 37F91110 		ldrsh	r1, [r7, r1, lsl #1]
 2305 00f0 0A44     		add	r2, r2, r1
 2306              	.LVL424:
 2307 00f2 0832     		adds	r2, r2, #8
 2308 00f4 1211     		asrs	r2, r2, #4
 2309              	.LVL425:
1010:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       /* Limit the error using transfer function set by init_error_limit.
 2310              		.loc 1 1010 0
 2311 00f6 0AF10201 		add	r1, r10, #2
 2312 00fa 37F91110 		ldrsh	r1, [r7, r1, lsl #1]
 2313 00fe 0144     		add	r1, r1, r0
 2314 0100 0831     		adds	r1, r1, #8
ARM GAS  /tmp/ccs1isz7.s 			page 64


 2315 0102 0911     		asrs	r1, r1, #4
 2316              	.LVL426:
1014:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       cur1 = error_limit[cur1];
 2317              		.loc 1 1014 0
 2318 0104 1098     		ldr	r0, [sp, #64]
 2319 0106 50F82340 		ldr	r4, [r0, r3, lsl #2]
 2320              	.LVL427:
1015:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       cur2 = error_limit[cur2];
 2321              		.loc 1 1015 0
 2322 010a 50F82230 		ldr	r3, [r0, r2, lsl #2]
 2323              	.LVL428:
1016:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       /* Form pixel value + error, and range-limit to 0..MAXJSAMPLE.
 2324              		.loc 1 1016 0
 2325 010e 50F82100 		ldr	r0, [r0, r1, lsl #2]
 2326              	.LVL429:
1021:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       cur1 += GETJSAMPLE(inptr[1]);
 2327              		.loc 1 1021 0
 2328 0112 9BF80010 		ldrb	r1, [fp]	@ zero_extendqisi2
 2329 0116 2144     		add	r1, r1, r4
 2330              	.LVL430:
1022:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       cur2 += GETJSAMPLE(inptr[2]);
 2331              		.loc 1 1022 0
 2332 0118 9BF80120 		ldrb	r2, [fp, #1]	@ zero_extendqisi2
 2333 011c 1A44     		add	r2, r2, r3
 2334              	.LVL431:
1023:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       cur0 = GETJSAMPLE(range_limit[cur0]);
 2335              		.loc 1 1023 0
 2336 011e 9BF80230 		ldrb	r3, [fp, #2]	@ zero_extendqisi2
 2337 0122 0344     		add	r3, r3, r0
 2338              	.LVL432:
1024:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       cur1 = GETJSAMPLE(range_limit[cur1]);
 2339              		.loc 1 1024 0
 2340 0124 0C98     		ldr	r0, [sp, #48]
 2341 0126 10F80190 		ldrb	r9, [r0, r1]	@ zero_extendqisi2
 2342              	.LVL433:
1025:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       cur2 = GETJSAMPLE(range_limit[cur2]);
 2343              		.loc 1 1025 0
 2344 012a 10F80280 		ldrb	r8, [r0, r2]	@ zero_extendqisi2
 2345              	.LVL434:
1026:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       /* Index into the cache with adjusted pixel value */
 2346              		.loc 1 1026 0
 2347 012e C65C     		ldrb	r6, [r0, r3]	@ zero_extendqisi2
 2348              	.LVL435:
1028:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       /* If we have not seen this color before, find nearest colormap */
 2349              		.loc 1 1028 0
 2350 0130 4FEAE901 		asr	r1, r9, #3
 2351 0134 0B9B     		ldr	r3, [sp, #44]
 2352 0136 53F82140 		ldr	r4, [r3, r1, lsl #2]
 2353 013a 4FEAA802 		asr	r2, r8, #2
 2354 013e 04EB8213 		add	r3, r4, r2, lsl #6
 2355 0142 0993     		str	r3, [sp, #36]
 2356 0144 F410     		asrs	r4, r6, #3
 2357              	.LVL436:
1031:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 	fill_inverse_cmap(cinfo, cur0>>C0_SHIFT,cur1>>C1_SHIFT,cur2>>C2_SHIFT);
 2358              		.loc 1 1031 0
 2359 0146 33F81430 		ldrh	r3, [r3, r4, lsl #1]
 2360              	.LVL437:
ARM GAS  /tmp/ccs1isz7.s 			page 65


 2361 014a 002B     		cmp	r3, #0
 2362 014c 80D1     		bne	.L207
1032:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       /* Now emit the colormap index for this cell */
 2363              		.loc 1 1032 0
 2364 014e 2346     		mov	r3, r4
 2365 0150 1298     		ldr	r0, [sp, #72]
 2366 0152 FFF7FEFF 		bl	fill_inverse_cmap
 2367              	.LVL438:
 2368 0156 7BE7     		b	.L207
 2369              	.LVL439:
 2370              	.L211:
1079:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****     }
1080:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****     /* Post-loop cleanup: we must unload the final error values into the
1081:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****      * final fserrors[] entry.  Note we need not unload belowerrN because
1082:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****      * it is for the dummy column before or after the actual array.
1083:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****      */
1084:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****     errorptr[0] = (FSERROR) bpreverr0; /* unload prev errs into array */
 2371              		.loc 1 1084 0 discriminator 2
 2372 0158 019B     		ldr	r3, [sp, #4]
 2373              	.LVL440:
 2374 015a 3B80     		strh	r3, [r7]	@ movhi
1085:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****     errorptr[1] = (FSERROR) bpreverr1;
 2375              		.loc 1 1085 0 discriminator 2
 2376 015c 029B     		ldr	r3, [sp, #8]
 2377 015e 7B80     		strh	r3, [r7, #2]	@ movhi
1086:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****     errorptr[2] = (FSERROR) bpreverr2;
 2378              		.loc 1 1086 0 discriminator 2
 2379 0160 039B     		ldr	r3, [sp, #12]
 2380 0162 BB80     		strh	r3, [r7, #4]	@ movhi
 975:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****     inptr = input_buf[row];
 2381              		.loc 1 975 0 discriminator 2
 2382 0164 119B     		ldr	r3, [sp, #68]
 2383 0166 0133     		adds	r3, r3, #1
 2384 0168 1193     		str	r3, [sp, #68]
 2385              	.LVL441:
 2386              	.L203:
 975:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****     inptr = input_buf[row];
 2387              		.loc 1 975 0 is_stmt 0 discriminator 1
 2388 016a 119B     		ldr	r3, [sp, #68]
 2389 016c 159A     		ldr	r2, [sp, #84]
 2390 016e 9342     		cmp	r3, r2
 2391 0170 2DDA     		bge	.L212
 976:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****     outptr = output_buf[row];
 2392              		.loc 1 976 0 is_stmt 1
 2393 0172 169B     		ldr	r3, [sp, #88]
 2394 0174 1946     		mov	r1, r3
 2395 0176 119B     		ldr	r3, [sp, #68]
 2396 0178 51F823B0 		ldr	fp, [r1, r3, lsl #2]
 2397              	.LVL442:
 977:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****     if (cquantize->on_odd_row) {
 2398              		.loc 1 977 0
 2399 017c 179A     		ldr	r2, [sp, #92]
 2400 017e 52F82380 		ldr	r8, [r2, r3, lsl #2]
 2401              	.LVL443:
 978:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       /* work right to left in this row */
 2402              		.loc 1 978 0
 2403 0182 1399     		ldr	r1, [sp, #76]
ARM GAS  /tmp/ccs1isz7.s 			page 66


 2404 0184 4B6A     		ldr	r3, [r1, #36]
 2405 0186 002B     		cmp	r3, #0
 2406 0188 3FF45AAF 		beq	.L204
 980:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       outptr += width-1;
 2407              		.loc 1 980 0
 2408 018c 1498     		ldr	r0, [sp, #80]
 2409 018e 00EB4003 		add	r3, r0, r0, lsl #1
 2410 0192 033B     		subs	r3, r3, #3
 2411 0194 9B44     		add	fp, fp, r3
 2412              	.LVL444:
 981:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       dir = -1;
 2413              		.loc 1 981 0
 2414 0196 431E     		subs	r3, r0, #1
 2415 0198 9844     		add	r8, r8, r3
 2416              	.LVL445:
 984:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       cquantize->on_odd_row = FALSE; /* flip for next time */
 2417              		.loc 1 984 0
 2418 019a 0F6A     		ldr	r7, [r1, #32]
 2419 019c 431C     		adds	r3, r0, #1
 2420 019e 03EB4303 		add	r3, r3, r3, lsl #1
 2421 01a2 5A00     		lsls	r2, r3, #1
 2422 01a4 1744     		add	r7, r7, r2
 2423              	.LVL446:
 985:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****     } else {
 2424              		.loc 1 985 0
 2425 01a6 0023     		movs	r3, #0
 2426 01a8 4B62     		str	r3, [r1, #36]
 983:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       errorptr = cquantize->fserrors + (width+1)*3; /* => entry after last column */
 2427              		.loc 1 983 0
 2428 01aa 6FF0020A 		mvn	r10, #2
 982:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       dir3 = -3;
 2429              		.loc 1 982 0
 2430 01ae 4FF0FF33 		mov	r3, #-1
 2431 01b2 0A93     		str	r3, [sp, #40]
 2432              	.LVL447:
 2433              	.L205:
 999:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       /* curN holds the error propagated from the previous pixel on the
 2434              		.loc 1 999 0
 2435 01b4 149B     		ldr	r3, [sp, #80]
 2436 01b6 0093     		str	r3, [sp]
 997:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 
 2437              		.loc 1 997 0
 2438 01b8 0023     		movs	r3, #0
 2439 01ba 0393     		str	r3, [sp, #12]
 2440 01bc 0293     		str	r3, [sp, #8]
 2441 01be 0193     		str	r3, [sp, #4]
 996:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****     bpreverr0 = bpreverr1 = bpreverr2 = 0;
 2442              		.loc 1 996 0
 2443 01c0 0693     		str	r3, [sp, #24]
 2444 01c2 0593     		str	r3, [sp, #20]
 2445 01c4 0493     		str	r3, [sp, #16]
 994:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****     /* and no error propagated to row below yet */
 2446              		.loc 1 994 0
 2447 01c6 1846     		mov	r0, r3
 2448 01c8 1A46     		mov	r2, r3
 2449 01ca 4546     		mov	r5, r8
 999:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       /* curN holds the error propagated from the previous pixel on the
ARM GAS  /tmp/ccs1isz7.s 			page 67


 2450              		.loc 1 999 0
 2451 01cc 7FE7     		b	.L206
 2452              	.LVL448:
 2453              	.L212:
1087:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   }
1088:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** }
 2454              		.loc 1 1088 0
 2455 01ce 19B0     		add	sp, sp, #100
 2456              	.LCFI27:
 2457              		.cfi_def_cfa_offset 36
 2458              		@ sp needed
 2459 01d0 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 2460              		.cfi_endproc
 2461              	.LFE14:
 2463              		.section	.text.init_error_limit,"ax",%progbits
 2464              		.align	1
 2465              		.syntax unified
 2466              		.thumb
 2467              		.thumb_func
 2468              		.fpu fpv5-sp-d16
 2470              	init_error_limit:
 2471              	.LFB15:
1089:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 
1090:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 
1091:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** /*
1092:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****  * Initialize the error-limiting transfer function (lookup table).
1093:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****  * The raw F-S error computation can potentially compute error values of up to
1094:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****  * +- MAXJSAMPLE.  But we want the maximum correction applied to a pixel to be
1095:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****  * much less, otherwise obviously wrong pixels will be created.  (Typical
1096:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****  * effects include weird fringes at color-area boundaries, isolated bright
1097:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****  * pixels in a dark area, etc.)  The standard advice for avoiding this problem
1098:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****  * is to ensure that the "corners" of the color cube are allocated as output
1099:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****  * colors; then repeated errors in the same direction cannot cause cascading
1100:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****  * error buildup.  However, that only prevents the error from getting
1101:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****  * completely out of hand; Aaron Giles reports that error limiting improves
1102:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****  * the results even with corner colors allocated.
1103:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****  * A simple clamping of the error values to about +- MAXJSAMPLE/8 works pretty
1104:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****  * well, but the smoother transfer function used below is even better.  Thanks
1105:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****  * to Aaron Giles for this idea.
1106:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****  */
1107:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 
1108:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** LOCAL(void)
1109:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** init_error_limit (j_decompress_ptr cinfo)
1110:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** /* Allocate and fill in the error_limiter table */
1111:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** {
 2472              		.loc 1 1111 0
 2473              		.cfi_startproc
 2474              		@ args = 0, pretend = 0, frame = 0
 2475              		@ frame_needed = 0, uses_anonymous_args = 0
 2476              	.LVL449:
 2477 0000 10B5     		push	{r4, lr}
 2478              	.LCFI28:
 2479              		.cfi_def_cfa_offset 8
 2480              		.cfi_offset 4, -8
 2481              		.cfi_offset 14, -4
1112:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   my_cquantize_ptr cquantize = (my_cquantize_ptr) cinfo->cquantize;
 2482              		.loc 1 1112 0
ARM GAS  /tmp/ccs1isz7.s 			page 68


 2483 0002 D0F8E041 		ldr	r4, [r0, #480]
 2484              	.LVL450:
1113:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   int * table;
1114:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   int in, out;
1115:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 
1116:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   table = (int *) (*cinfo->mem->alloc_small)
 2485              		.loc 1 1116 0
 2486 0006 4368     		ldr	r3, [r0, #4]
 2487 0008 1B68     		ldr	r3, [r3]
 2488 000a 40F2FC72 		movw	r2, #2044
 2489 000e 0121     		movs	r1, #1
 2490 0010 9847     		blx	r3
 2491              	.LVL451:
1117:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****     ((j_common_ptr) cinfo, JPOOL_IMAGE, (MAXJSAMPLE*2+1) * SIZEOF(int));
1118:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   table += MAXJSAMPLE;		/* so can index -MAXJSAMPLE .. +MAXJSAMPLE */
 2492              		.loc 1 1118 0
 2493 0012 00F57F70 		add	r0, r0, #1020
 2494              	.LVL452:
1119:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   cquantize->error_limiter = table;
 2495              		.loc 1 1119 0
 2496 0016 A062     		str	r0, [r4, #40]
 2497              	.LVL453:
1120:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 
1121:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** #define STEPSIZE ((MAXJSAMPLE+1)/16)
1122:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   /* Map errors 1:1 up to +- MAXJSAMPLE/16 */
1123:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   out = 0;
1124:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   for (in = 0; in < STEPSIZE; in++, out++) {
 2498              		.loc 1 1124 0
 2499 0018 0023     		movs	r3, #0
 2500 001a 07E0     		b	.L214
 2501              	.LVL454:
 2502              	.L215:
1125:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****     table[in] = out; table[-in] = -out;
 2503              		.loc 1 1125 0 discriminator 3
 2504 001c 40F82330 		str	r3, [r0, r3, lsl #2]
 2505 0020 C3EB8371 		rsb	r1, r3, r3, lsl #30
 2506 0024 8A00     		lsls	r2, r1, #2
 2507 0026 5942     		negs	r1, r3
 2508 0028 8150     		str	r1, [r0, r2]
1124:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****     table[in] = out; table[-in] = -out;
 2509              		.loc 1 1124 0 discriminator 3
 2510 002a 0133     		adds	r3, r3, #1
 2511              	.LVL455:
 2512              	.L214:
1124:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****     table[in] = out; table[-in] = -out;
 2513              		.loc 1 1124 0 is_stmt 0 discriminator 1
 2514 002c 0F2B     		cmp	r3, #15
 2515 002e F5DD     		ble	.L215
 2516 0030 1A46     		mov	r2, r3
 2517 0032 0DE0     		b	.L216
 2518              	.LVL456:
 2519              	.L217:
1126:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   }
1127:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   /* Map errors 1:2 up to +- 3*MAXJSAMPLE/16 */
1128:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   for (; in < STEPSIZE*3; in++, out += (in&1) ? 0 : 1) {
1129:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****     table[in] = out; table[-in] = -out;
 2520              		.loc 1 1129 0 is_stmt 1 discriminator 2
ARM GAS  /tmp/ccs1isz7.s 			page 69


 2521 0034 40F82320 		str	r2, [r0, r3, lsl #2]
 2522 0038 C3EB8374 		rsb	r4, r3, r3, lsl #30
 2523 003c A100     		lsls	r1, r4, #2
 2524 003e 5442     		negs	r4, r2
 2525 0040 4450     		str	r4, [r0, r1]
1128:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****     table[in] = out; table[-in] = -out;
 2526              		.loc 1 1128 0 discriminator 2
 2527 0042 0133     		adds	r3, r3, #1
 2528              	.LVL457:
 2529 0044 13F0010F 		tst	r3, #1
 2530 0048 0CBF     		ite	eq
 2531 004a 0121     		moveq	r1, #1
 2532 004c 0021     		movne	r1, #0
 2533 004e 0A44     		add	r2, r2, r1
 2534              	.LVL458:
 2535              	.L216:
1128:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****     table[in] = out; table[-in] = -out;
 2536              		.loc 1 1128 0 is_stmt 0 discriminator 1
 2537 0050 2F2B     		cmp	r3, #47
 2538 0052 EFDD     		ble	.L217
 2539 0054 07E0     		b	.L218
 2540              	.L219:
1130:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   }
1131:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   /* Clamp the rest to final out value (which is (MAXJSAMPLE+1)/8) */
1132:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   for (; in <= MAXJSAMPLE; in++) {
1133:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****     table[in] = out; table[-in] = -out;
 2541              		.loc 1 1133 0 is_stmt 1 discriminator 2
 2542 0056 40F82320 		str	r2, [r0, r3, lsl #2]
 2543 005a C3EB8374 		rsb	r4, r3, r3, lsl #30
 2544 005e A100     		lsls	r1, r4, #2
 2545 0060 5442     		negs	r4, r2
 2546 0062 4450     		str	r4, [r0, r1]
1132:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****     table[in] = out; table[-in] = -out;
 2547              		.loc 1 1132 0 discriminator 2
 2548 0064 0133     		adds	r3, r3, #1
 2549              	.LVL459:
 2550              	.L218:
1132:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****     table[in] = out; table[-in] = -out;
 2551              		.loc 1 1132 0 is_stmt 0 discriminator 1
 2552 0066 FF2B     		cmp	r3, #255
 2553 0068 F5DD     		ble	.L219
1134:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   }
1135:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** #undef STEPSIZE
1136:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** }
 2554              		.loc 1 1136 0 is_stmt 1
 2555 006a 10BD     		pop	{r4, pc}
 2556              		.cfi_endproc
 2557              	.LFE15:
 2559              		.section	.text.finish_pass1,"ax",%progbits
 2560              		.align	1
 2561              		.syntax unified
 2562              		.thumb
 2563              		.thumb_func
 2564              		.fpu fpv5-sp-d16
 2566              	finish_pass1:
 2567              	.LFB16:
1137:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 
ARM GAS  /tmp/ccs1isz7.s 			page 70


1138:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 
1139:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** /*
1140:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****  * Finish up at the end of each pass.
1141:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****  */
1142:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 
1143:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** METHODDEF(void)
1144:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** finish_pass1 (j_decompress_ptr cinfo)
1145:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** {
 2568              		.loc 1 1145 0
 2569              		.cfi_startproc
 2570              		@ args = 0, pretend = 0, frame = 0
 2571              		@ frame_needed = 0, uses_anonymous_args = 0
 2572              	.LVL460:
 2573 0000 10B5     		push	{r4, lr}
 2574              	.LCFI29:
 2575              		.cfi_def_cfa_offset 8
 2576              		.cfi_offset 4, -8
 2577              		.cfi_offset 14, -4
1146:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   my_cquantize_ptr cquantize = (my_cquantize_ptr) cinfo->cquantize;
 2578              		.loc 1 1146 0
 2579 0002 D0F8E041 		ldr	r4, [r0, #480]
 2580              	.LVL461:
1147:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 
1148:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   /* Select the representative colors and fill in cinfo->colormap */
1149:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   cinfo->colormap = cquantize->sv_colormap;
 2581              		.loc 1 1149 0
 2582 0006 2269     		ldr	r2, [r4, #16]
 2583 0008 C0F88820 		str	r2, [r0, #136]
1150:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   select_colors(cinfo, cquantize->desired);
 2584              		.loc 1 1150 0
 2585 000c 6169     		ldr	r1, [r4, #20]
 2586 000e FFF7FEFF 		bl	select_colors
 2587              	.LVL462:
1151:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   /* Force next pass to zero the color index table */
1152:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   cquantize->needs_zeroed = TRUE;
 2588              		.loc 1 1152 0
 2589 0012 0123     		movs	r3, #1
 2590 0014 E361     		str	r3, [r4, #28]
1153:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** }
 2591              		.loc 1 1153 0
 2592 0016 10BD     		pop	{r4, pc}
 2593              		.cfi_endproc
 2594              	.LFE16:
 2596              		.section	.text.finish_pass2,"ax",%progbits
 2597              		.align	1
 2598              		.syntax unified
 2599              		.thumb
 2600              		.thumb_func
 2601              		.fpu fpv5-sp-d16
 2603              	finish_pass2:
 2604              	.LFB17:
1154:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 
1155:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 
1156:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** METHODDEF(void)
1157:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** finish_pass2 (j_decompress_ptr cinfo)
1158:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** {
 2605              		.loc 1 1158 0
ARM GAS  /tmp/ccs1isz7.s 			page 71


 2606              		.cfi_startproc
 2607              		@ args = 0, pretend = 0, frame = 0
 2608              		@ frame_needed = 0, uses_anonymous_args = 0
 2609              		@ link register save eliminated.
 2610              	.LVL463:
1159:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   /* no work */
1160:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** }
 2611              		.loc 1 1160 0
 2612 0000 7047     		bx	lr
 2613              		.cfi_endproc
 2614              	.LFE17:
 2616              		.section	.text.new_color_map_2_quant,"ax",%progbits
 2617              		.align	1
 2618              		.syntax unified
 2619              		.thumb
 2620              		.thumb_func
 2621              		.fpu fpv5-sp-d16
 2623              	new_color_map_2_quant:
 2624              	.LFB19:
1161:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 
1162:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 
1163:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** /*
1164:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****  * Initialize for each processing pass.
1165:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****  */
1166:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 
1167:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** METHODDEF(void)
1168:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** start_pass_2_quant (j_decompress_ptr cinfo, boolean is_pre_scan)
1169:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** {
1170:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   my_cquantize_ptr cquantize = (my_cquantize_ptr) cinfo->cquantize;
1171:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   hist3d histogram = cquantize->histogram;
1172:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   int i;
1173:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 
1174:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   /* Only F-S dithering or no dithering is supported. */
1175:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   /* If user asks for ordered dither, give him F-S. */
1176:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   if (cinfo->dither_mode != JDITHER_NONE)
1177:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****     cinfo->dither_mode = JDITHER_FS;
1178:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 
1179:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   if (is_pre_scan) {
1180:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****     /* Set up method pointers */
1181:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****     cquantize->pub.color_quantize = prescan_quantize;
1182:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****     cquantize->pub.finish_pass = finish_pass1;
1183:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****     cquantize->needs_zeroed = TRUE; /* Always zero histogram */
1184:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   } else {
1185:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****     /* Set up method pointers */
1186:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****     if (cinfo->dither_mode == JDITHER_FS)
1187:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       cquantize->pub.color_quantize = pass2_fs_dither;
1188:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****     else
1189:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       cquantize->pub.color_quantize = pass2_no_dither;
1190:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****     cquantize->pub.finish_pass = finish_pass2;
1191:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 
1192:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****     /* Make sure color count is acceptable */
1193:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****     i = cinfo->actual_number_of_colors;
1194:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****     if (i < 1)
1195:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       ERREXIT1(cinfo, JERR_QUANT_FEW_COLORS, 1);
1196:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****     if (i > MAXNUMCOLORS)
1197:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       ERREXIT1(cinfo, JERR_QUANT_MANY_COLORS, MAXNUMCOLORS);
1198:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 
ARM GAS  /tmp/ccs1isz7.s 			page 72


1199:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****     if (cinfo->dither_mode == JDITHER_FS) {
1200:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       size_t arraysize = (size_t) ((cinfo->output_width + 2) *
1201:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 				   (3 * SIZEOF(FSERROR)));
1202:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       /* Allocate Floyd-Steinberg workspace if we didn't already. */
1203:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       if (cquantize->fserrors == NULL)
1204:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 	cquantize->fserrors = (FSERRPTR) (*cinfo->mem->alloc_large)
1205:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 	  ((j_common_ptr) cinfo, JPOOL_IMAGE, arraysize);
1206:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       /* Initialize the propagated errors to zero. */
1207:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       FMEMZERO((void FAR *) cquantize->fserrors, arraysize);
1208:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       /* Make the error-limit table if we didn't already. */
1209:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       if (cquantize->error_limiter == NULL)
1210:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 	init_error_limit(cinfo);
1211:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       cquantize->on_odd_row = FALSE;
1212:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****     }
1213:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 
1214:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   }
1215:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   /* Zero the histogram or inverse color map, if necessary */
1216:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   if (cquantize->needs_zeroed) {
1217:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****     for (i = 0; i < HIST_C0_ELEMS; i++) {
1218:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       FMEMZERO((void FAR *) histogram[i],
1219:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 	       HIST_C1_ELEMS*HIST_C2_ELEMS * SIZEOF(histcell));
1220:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****     }
1221:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****     cquantize->needs_zeroed = FALSE;
1222:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   }
1223:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** }
1224:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 
1225:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 
1226:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** /*
1227:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****  * Switch to a new external colormap between output passes.
1228:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****  */
1229:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 
1230:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** METHODDEF(void)
1231:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** new_color_map_2_quant (j_decompress_ptr cinfo)
1232:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** {
 2625              		.loc 1 1232 0
 2626              		.cfi_startproc
 2627              		@ args = 0, pretend = 0, frame = 0
 2628              		@ frame_needed = 0, uses_anonymous_args = 0
 2629              		@ link register save eliminated.
 2630              	.LVL464:
1233:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   my_cquantize_ptr cquantize = (my_cquantize_ptr) cinfo->cquantize;
 2631              		.loc 1 1233 0
 2632 0000 D0F8E031 		ldr	r3, [r0, #480]
 2633              	.LVL465:
1234:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 
1235:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   /* Reset the inverse color map */
1236:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   cquantize->needs_zeroed = TRUE;
 2634              		.loc 1 1236 0
 2635 0004 0122     		movs	r2, #1
 2636 0006 DA61     		str	r2, [r3, #28]
1237:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** }
 2637              		.loc 1 1237 0
 2638 0008 7047     		bx	lr
 2639              		.cfi_endproc
 2640              	.LFE19:
 2642              		.section	.text.start_pass_2_quant,"ax",%progbits
 2643              		.align	1
ARM GAS  /tmp/ccs1isz7.s 			page 73


 2644              		.syntax unified
 2645              		.thumb
 2646              		.thumb_func
 2647              		.fpu fpv5-sp-d16
 2649              	start_pass_2_quant:
 2650              	.LFB18:
1169:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   my_cquantize_ptr cquantize = (my_cquantize_ptr) cinfo->cquantize;
 2651              		.loc 1 1169 0
 2652              		.cfi_startproc
 2653              		@ args = 0, pretend = 0, frame = 0
 2654              		@ frame_needed = 0, uses_anonymous_args = 0
 2655              	.LVL466:
 2656 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 2657              	.LCFI30:
 2658              		.cfi_def_cfa_offset 24
 2659              		.cfi_offset 3, -24
 2660              		.cfi_offset 4, -20
 2661              		.cfi_offset 5, -16
 2662              		.cfi_offset 6, -12
 2663              		.cfi_offset 7, -8
 2664              		.cfi_offset 14, -4
 2665 0002 0446     		mov	r4, r0
1170:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   hist3d histogram = cquantize->histogram;
 2666              		.loc 1 1170 0
 2667 0004 D0F8E061 		ldr	r6, [r0, #480]
 2668              	.LVL467:
1171:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   int i;
 2669              		.loc 1 1171 0
 2670 0008 B569     		ldr	r5, [r6, #24]
 2671              	.LVL468:
1176:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****     cinfo->dither_mode = JDITHER_FS;
 2672              		.loc 1 1176 0
 2673 000a 90F85830 		ldrb	r3, [r0, #88]	@ zero_extendqisi2
 2674 000e 13B1     		cbz	r3, .L226
1177:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 
 2675              		.loc 1 1177 0
 2676 0010 0223     		movs	r3, #2
 2677 0012 80F85830 		strb	r3, [r0, #88]
 2678              	.L226:
1179:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****     /* Set up method pointers */
 2679              		.loc 1 1179 0
 2680 0016 51B1     		cbz	r1, .L227
1181:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****     cquantize->pub.finish_pass = finish_pass1;
 2681              		.loc 1 1181 0
 2682 0018 2F4B     		ldr	r3, .L242
 2683 001a 7360     		str	r3, [r6, #4]
1182:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****     cquantize->needs_zeroed = TRUE; /* Always zero histogram */
 2684              		.loc 1 1182 0
 2685 001c 2F4B     		ldr	r3, .L242+4
 2686 001e B360     		str	r3, [r6, #8]
1183:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   } else {
 2687              		.loc 1 1183 0
 2688 0020 0123     		movs	r3, #1
 2689 0022 F361     		str	r3, [r6, #28]
 2690              	.LVL469:
 2691              	.L228:
1216:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****     for (i = 0; i < HIST_C0_ELEMS; i++) {
ARM GAS  /tmp/ccs1isz7.s 			page 74


 2692              		.loc 1 1216 0
 2693 0024 F369     		ldr	r3, [r6, #28]
 2694 0026 002B     		cmp	r3, #0
 2695 0028 55D0     		beq	.L225
1217:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       FMEMZERO((void FAR *) histogram[i],
 2696              		.loc 1 1217 0
 2697 002a 0024     		movs	r4, #0
 2698              	.LVL470:
 2699 002c 4FE0     		b	.L235
 2700              	.LVL471:
 2701              	.L227:
1186:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       cquantize->pub.color_quantize = pass2_fs_dither;
 2702              		.loc 1 1186 0
 2703 002e 94F85830 		ldrb	r3, [r4, #88]	@ zero_extendqisi2
 2704 0032 022B     		cmp	r3, #2
 2705 0034 3CD0     		beq	.L240
1189:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****     cquantize->pub.finish_pass = finish_pass2;
 2706              		.loc 1 1189 0
 2707 0036 2A4B     		ldr	r3, .L242+8
 2708 0038 7360     		str	r3, [r6, #4]
 2709              	.L230:
1190:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 
 2710              		.loc 1 1190 0
 2711 003a 2A4B     		ldr	r3, .L242+12
 2712 003c B360     		str	r3, [r6, #8]
1193:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****     if (i < 1)
 2713              		.loc 1 1193 0
 2714 003e D4F88470 		ldr	r7, [r4, #132]
 2715              	.LVL472:
1194:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       ERREXIT1(cinfo, JERR_QUANT_FEW_COLORS, 1);
 2716              		.loc 1 1194 0
 2717 0042 002F     		cmp	r7, #0
 2718 0044 09DC     		bgt	.L231
1195:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****     if (i > MAXNUMCOLORS)
 2719              		.loc 1 1195 0
 2720 0046 2368     		ldr	r3, [r4]
 2721 0048 3A22     		movs	r2, #58
 2722 004a 5A61     		str	r2, [r3, #20]
 2723 004c 2368     		ldr	r3, [r4]
 2724 004e 0122     		movs	r2, #1
 2725 0050 9A61     		str	r2, [r3, #24]
 2726 0052 2368     		ldr	r3, [r4]
 2727 0054 1B68     		ldr	r3, [r3]
 2728 0056 2046     		mov	r0, r4
 2729              	.LVL473:
 2730 0058 9847     		blx	r3
 2731              	.LVL474:
 2732              	.L231:
1196:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       ERREXIT1(cinfo, JERR_QUANT_MANY_COLORS, MAXNUMCOLORS);
 2733              		.loc 1 1196 0
 2734 005a B7F5807F 		cmp	r7, #256
 2735 005e 0ADD     		ble	.L232
1197:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 
 2736              		.loc 1 1197 0
 2737 0060 2368     		ldr	r3, [r4]
 2738 0062 3B22     		movs	r2, #59
 2739 0064 5A61     		str	r2, [r3, #20]
ARM GAS  /tmp/ccs1isz7.s 			page 75


 2740 0066 2368     		ldr	r3, [r4]
 2741 0068 4FF48072 		mov	r2, #256
 2742 006c 9A61     		str	r2, [r3, #24]
 2743 006e 2368     		ldr	r3, [r4]
 2744 0070 1B68     		ldr	r3, [r3]
 2745 0072 2046     		mov	r0, r4
 2746 0074 9847     		blx	r3
 2747              	.LVL475:
 2748              	.L232:
1199:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       size_t arraysize = (size_t) ((cinfo->output_width + 2) *
 2749              		.loc 1 1199 0
 2750 0076 94F85830 		ldrb	r3, [r4, #88]	@ zero_extendqisi2
 2751 007a 022B     		cmp	r3, #2
 2752 007c D2D1     		bne	.L228
 2753              	.LBB5:
1200:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 				   (3 * SIZEOF(FSERROR)));
 2754              		.loc 1 1200 0
 2755 007e 236F     		ldr	r3, [r4, #112]
 2756 0080 03EB4303 		add	r3, r3, r3, lsl #1
 2757 0084 5A00     		lsls	r2, r3, #1
 2758 0086 02F10C07 		add	r7, r2, #12
 2759              	.LVL476:
1203:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 	cquantize->fserrors = (FSERRPTR) (*cinfo->mem->alloc_large)
 2760              		.loc 1 1203 0
 2761 008a 336A     		ldr	r3, [r6, #32]
 2762 008c 33B9     		cbnz	r3, .L233
1204:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 	  ((j_common_ptr) cinfo, JPOOL_IMAGE, arraysize);
 2763              		.loc 1 1204 0
 2764 008e 6368     		ldr	r3, [r4, #4]
 2765 0090 5B68     		ldr	r3, [r3, #4]
 2766 0092 3A46     		mov	r2, r7
 2767 0094 0121     		movs	r1, #1
 2768 0096 2046     		mov	r0, r4
 2769 0098 9847     		blx	r3
 2770              	.LVL477:
 2771 009a 3062     		str	r0, [r6, #32]
 2772              	.L233:
1207:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       /* Make the error-limit table if we didn't already. */
 2773              		.loc 1 1207 0
 2774 009c 3A46     		mov	r2, r7
 2775 009e 0021     		movs	r1, #0
 2776 00a0 306A     		ldr	r0, [r6, #32]
 2777 00a2 FFF7FEFF 		bl	memset
 2778              	.LVL478:
1209:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 	init_error_limit(cinfo);
 2779              		.loc 1 1209 0
 2780 00a6 B36A     		ldr	r3, [r6, #40]
 2781 00a8 2BB1     		cbz	r3, .L241
 2782              	.L234:
1211:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****     }
 2783              		.loc 1 1211 0
 2784 00aa 0023     		movs	r3, #0
 2785 00ac 7362     		str	r3, [r6, #36]
 2786 00ae B9E7     		b	.L228
 2787              	.LVL479:
 2788              	.L240:
 2789              	.LBE5:
ARM GAS  /tmp/ccs1isz7.s 			page 76


1187:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****     else
 2790              		.loc 1 1187 0
 2791 00b0 0D4B     		ldr	r3, .L242+16
 2792 00b2 7360     		str	r3, [r6, #4]
 2793 00b4 C1E7     		b	.L230
 2794              	.LVL480:
 2795              	.L241:
 2796              	.LBB6:
1210:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       cquantize->on_odd_row = FALSE;
 2797              		.loc 1 1210 0
 2798 00b6 2046     		mov	r0, r4
 2799 00b8 FFF7FEFF 		bl	init_error_limit
 2800              	.LVL481:
 2801 00bc F5E7     		b	.L234
 2802              	.LVL482:
 2803              	.L237:
 2804              	.LBE6:
1218:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 	       HIST_C1_ELEMS*HIST_C2_ELEMS * SIZEOF(histcell));
 2805              		.loc 1 1218 0 discriminator 3
 2806 00be 4FF48052 		mov	r2, #4096
 2807 00c2 0021     		movs	r1, #0
 2808 00c4 55F82400 		ldr	r0, [r5, r4, lsl #2]
 2809 00c8 FFF7FEFF 		bl	memset
 2810              	.LVL483:
1217:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       FMEMZERO((void FAR *) histogram[i],
 2811              		.loc 1 1217 0 discriminator 3
 2812 00cc 0134     		adds	r4, r4, #1
 2813              	.LVL484:
 2814              	.L235:
1217:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       FMEMZERO((void FAR *) histogram[i],
 2815              		.loc 1 1217 0 is_stmt 0 discriminator 1
 2816 00ce 1F2C     		cmp	r4, #31
 2817 00d0 F5DD     		ble	.L237
1221:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   }
 2818              		.loc 1 1221 0 is_stmt 1
 2819 00d2 0023     		movs	r3, #0
 2820 00d4 F361     		str	r3, [r6, #28]
 2821              	.LVL485:
 2822              	.L225:
1223:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 
 2823              		.loc 1 1223 0
 2824 00d6 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2825              	.LVL486:
 2826              	.L243:
 2827              		.align	2
 2828              	.L242:
 2829 00d8 00000000 		.word	prescan_quantize
 2830 00dc 00000000 		.word	finish_pass1
 2831 00e0 00000000 		.word	pass2_no_dither
 2832 00e4 00000000 		.word	finish_pass2
 2833 00e8 00000000 		.word	pass2_fs_dither
 2834              		.cfi_endproc
 2835              	.LFE18:
 2837              		.section	.text.jinit_2pass_quantizer,"ax",%progbits
 2838              		.align	1
 2839              		.global	jinit_2pass_quantizer
 2840              		.syntax unified
ARM GAS  /tmp/ccs1isz7.s 			page 77


 2841              		.thumb
 2842              		.thumb_func
 2843              		.fpu fpv5-sp-d16
 2845              	jinit_2pass_quantizer:
 2846              	.LFB20:
1238:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 
1239:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 
1240:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** /*
1241:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****  * Module initialization routine for 2-pass color quantization.
1242:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****  */
1243:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 
1244:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** GLOBAL(void)
1245:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** jinit_2pass_quantizer (j_decompress_ptr cinfo)
1246:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** {
 2847              		.loc 1 1246 0
 2848              		.cfi_startproc
 2849              		@ args = 0, pretend = 0, frame = 0
 2850              		@ frame_needed = 0, uses_anonymous_args = 0
 2851              	.LVL487:
 2852 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 2853              	.LCFI31:
 2854              		.cfi_def_cfa_offset 24
 2855              		.cfi_offset 3, -24
 2856              		.cfi_offset 4, -20
 2857              		.cfi_offset 5, -16
 2858              		.cfi_offset 6, -12
 2859              		.cfi_offset 7, -8
 2860              		.cfi_offset 14, -4
 2861 0002 0546     		mov	r5, r0
1247:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   my_cquantize_ptr cquantize;
1248:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   int i;
1249:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 
1250:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   cquantize = (my_cquantize_ptr)
1251:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****     (*cinfo->mem->alloc_small) ((j_common_ptr) cinfo, JPOOL_IMAGE,
 2862              		.loc 1 1251 0
 2863 0004 4368     		ldr	r3, [r0, #4]
 2864 0006 1B68     		ldr	r3, [r3]
1250:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****     (*cinfo->mem->alloc_small) ((j_common_ptr) cinfo, JPOOL_IMAGE,
 2865              		.loc 1 1250 0
 2866 0008 2C22     		movs	r2, #44
 2867 000a 0121     		movs	r1, #1
 2868 000c 9847     		blx	r3
 2869              	.LVL488:
 2870 000e 0746     		mov	r7, r0
 2871              	.LVL489:
1252:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 				SIZEOF(my_cquantizer));
1253:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   cinfo->cquantize = (struct jpeg_color_quantizer *) cquantize;
 2872              		.loc 1 1253 0
 2873 0010 C5F8E001 		str	r0, [r5, #480]
1254:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   cquantize->pub.start_pass = start_pass_2_quant;
 2874              		.loc 1 1254 0
 2875 0014 354B     		ldr	r3, .L255
 2876 0016 0360     		str	r3, [r0]
1255:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   cquantize->pub.new_color_map = new_color_map_2_quant;
 2877              		.loc 1 1255 0
 2878 0018 354B     		ldr	r3, .L255+4
 2879 001a C360     		str	r3, [r0, #12]
ARM GAS  /tmp/ccs1isz7.s 			page 78


1256:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   cquantize->fserrors = NULL;	/* flag optional arrays not allocated */
 2880              		.loc 1 1256 0
 2881 001c 0023     		movs	r3, #0
 2882 001e 0362     		str	r3, [r0, #32]
1257:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   cquantize->error_limiter = NULL;
 2883              		.loc 1 1257 0
 2884 0020 8362     		str	r3, [r0, #40]
1258:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 
1259:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   /* Make sure jdmaster didn't give me a case I can't handle */
1260:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   if (cinfo->out_color_components != 3)
 2885              		.loc 1 1260 0
 2886 0022 AB6F     		ldr	r3, [r5, #120]
 2887 0024 032B     		cmp	r3, #3
 2888 0026 06D0     		beq	.L245
1261:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****     ERREXIT(cinfo, JERR_NOTIMPL);
 2889              		.loc 1 1261 0
 2890 0028 2B68     		ldr	r3, [r5]
 2891 002a 3022     		movs	r2, #48
 2892 002c 5A61     		str	r2, [r3, #20]
 2893 002e 2B68     		ldr	r3, [r5]
 2894 0030 1B68     		ldr	r3, [r3]
 2895 0032 2846     		mov	r0, r5
 2896              	.LVL490:
 2897 0034 9847     		blx	r3
 2898              	.LVL491:
 2899              	.L245:
1262:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 
1263:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   /* Allocate the histogram/inverse colormap storage */
1264:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   cquantize->histogram = (hist3d) (*cinfo->mem->alloc_small)
 2900              		.loc 1 1264 0
 2901 0036 6B68     		ldr	r3, [r5, #4]
 2902 0038 1B68     		ldr	r3, [r3]
 2903 003a 8022     		movs	r2, #128
 2904 003c 0121     		movs	r1, #1
 2905 003e 2846     		mov	r0, r5
 2906 0040 9847     		blx	r3
 2907              	.LVL492:
 2908 0042 B861     		str	r0, [r7, #24]
 2909              	.LVL493:
1265:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****     ((j_common_ptr) cinfo, JPOOL_IMAGE, HIST_C0_ELEMS * SIZEOF(hist2d));
1266:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   for (i = 0; i < HIST_C0_ELEMS; i++) {
 2910              		.loc 1 1266 0
 2911 0044 0024     		movs	r4, #0
 2912 0046 0AE0     		b	.L246
 2913              	.LVL494:
 2914              	.L247:
1267:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****     cquantize->histogram[i] = (hist2d) (*cinfo->mem->alloc_large)
 2915              		.loc 1 1267 0 discriminator 3
 2916 0048 6B68     		ldr	r3, [r5, #4]
 2917 004a BE69     		ldr	r6, [r7, #24]
 2918 004c 5B68     		ldr	r3, [r3, #4]
 2919 004e 4FF48052 		mov	r2, #4096
 2920 0052 0121     		movs	r1, #1
 2921 0054 2846     		mov	r0, r5
 2922 0056 9847     		blx	r3
 2923              	.LVL495:
 2924 0058 46F82400 		str	r0, [r6, r4, lsl #2]
ARM GAS  /tmp/ccs1isz7.s 			page 79


1266:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****     cquantize->histogram[i] = (hist2d) (*cinfo->mem->alloc_large)
 2925              		.loc 1 1266 0 discriminator 3
 2926 005c 0134     		adds	r4, r4, #1
 2927              	.LVL496:
 2928              	.L246:
1266:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****     cquantize->histogram[i] = (hist2d) (*cinfo->mem->alloc_large)
 2929              		.loc 1 1266 0 is_stmt 0 discriminator 1
 2930 005e 1F2C     		cmp	r4, #31
 2931 0060 F2DD     		ble	.L247
1268:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       ((j_common_ptr) cinfo, JPOOL_IMAGE,
1269:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****        HIST_C1_ELEMS*HIST_C2_ELEMS * SIZEOF(histcell));
1270:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   }
1271:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   cquantize->needs_zeroed = TRUE; /* histogram is garbage now */
 2932              		.loc 1 1271 0 is_stmt 1
 2933 0062 0123     		movs	r3, #1
 2934 0064 FB61     		str	r3, [r7, #28]
1272:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 
1273:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   /* Allocate storage for the completed colormap, if required.
1274:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****    * We do this now since it is FAR storage and may affect
1275:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****    * the memory manager's space calculations.
1276:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****    */
1277:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   if (cinfo->enable_2pass_quant) {
 2935              		.loc 1 1277 0
 2936 0066 EB6E     		ldr	r3, [r5, #108]
 2937 0068 002B     		cmp	r3, #0
 2938 006a 3CD0     		beq	.L248
 2939              	.LBB7:
1278:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****     /* Make sure color count is acceptable */
1279:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****     int desired = cinfo->desired_number_of_colors;
 2940              		.loc 1 1279 0
 2941 006c 2C6E     		ldr	r4, [r5, #96]
 2942              	.LVL497:
1280:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****     /* Lower bound on # of colors ... somewhat arbitrary as long as > 0 */
1281:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****     if (desired < 8)
 2943              		.loc 1 1281 0
 2944 006e 072C     		cmp	r4, #7
 2945 0070 09DC     		bgt	.L249
1282:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       ERREXIT1(cinfo, JERR_QUANT_FEW_COLORS, 8);
 2946              		.loc 1 1282 0
 2947 0072 2B68     		ldr	r3, [r5]
 2948 0074 3A22     		movs	r2, #58
 2949 0076 5A61     		str	r2, [r3, #20]
 2950 0078 2B68     		ldr	r3, [r5]
 2951 007a 0822     		movs	r2, #8
 2952 007c 9A61     		str	r2, [r3, #24]
 2953 007e 2B68     		ldr	r3, [r5]
 2954 0080 1B68     		ldr	r3, [r3]
 2955 0082 2846     		mov	r0, r5
 2956 0084 9847     		blx	r3
 2957              	.LVL498:
 2958              	.L249:
1283:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****     /* Make sure colormap indexes can be represented by JSAMPLEs */
1284:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****     if (desired > MAXNUMCOLORS)
 2959              		.loc 1 1284 0
 2960 0086 B4F5807F 		cmp	r4, #256
 2961 008a 0ADD     		ble	.L250
1285:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       ERREXIT1(cinfo, JERR_QUANT_MANY_COLORS, MAXNUMCOLORS);
ARM GAS  /tmp/ccs1isz7.s 			page 80


 2962              		.loc 1 1285 0
 2963 008c 2B68     		ldr	r3, [r5]
 2964 008e 3B22     		movs	r2, #59
 2965 0090 5A61     		str	r2, [r3, #20]
 2966 0092 2B68     		ldr	r3, [r5]
 2967 0094 4FF48072 		mov	r2, #256
 2968 0098 9A61     		str	r2, [r3, #24]
 2969 009a 2B68     		ldr	r3, [r5]
 2970 009c 1B68     		ldr	r3, [r3]
 2971 009e 2846     		mov	r0, r5
 2972 00a0 9847     		blx	r3
 2973              	.LVL499:
 2974              	.L250:
1286:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****     cquantize->sv_colormap = (*cinfo->mem->alloc_sarray)
 2975              		.loc 1 1286 0
 2976 00a2 6B68     		ldr	r3, [r5, #4]
 2977 00a4 9E68     		ldr	r6, [r3, #8]
 2978 00a6 0323     		movs	r3, #3
 2979 00a8 2246     		mov	r2, r4
 2980 00aa 0121     		movs	r1, #1
 2981 00ac 2846     		mov	r0, r5
 2982 00ae B047     		blx	r6
 2983              	.LVL500:
 2984 00b0 3861     		str	r0, [r7, #16]
1287:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       ((j_common_ptr) cinfo,JPOOL_IMAGE, (JDIMENSION) desired, (JDIMENSION) 3);
1288:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****     cquantize->desired = desired;
 2985              		.loc 1 1288 0
 2986 00b2 7C61     		str	r4, [r7, #20]
 2987              	.LVL501:
 2988              	.L251:
 2989              	.LBE7:
1289:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   } else
1290:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****     cquantize->sv_colormap = NULL;
1291:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 
1292:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   /* Only F-S dithering or no dithering is supported. */
1293:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   /* If user asks for ordered dither, give him F-S. */
1294:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   if (cinfo->dither_mode != JDITHER_NONE)
 2990              		.loc 1 1294 0
 2991 00b4 95F85830 		ldrb	r3, [r5, #88]	@ zero_extendqisi2
 2992 00b8 13B1     		cbz	r3, .L252
1295:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****     cinfo->dither_mode = JDITHER_FS;
 2993              		.loc 1 1295 0
 2994 00ba 0223     		movs	r3, #2
 2995 00bc 85F85830 		strb	r3, [r5, #88]
 2996              	.L252:
1296:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 
1297:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   /* Allocate Floyd-Steinberg workspace if necessary.
1298:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****    * This isn't really needed until pass 2, but again it is FAR storage.
1299:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****    * Although we will cope with a later change in dither_mode,
1300:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****    * we do not promise to honor max_memory_to_use if dither_mode changes.
1301:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****    */
1302:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   if (cinfo->dither_mode == JDITHER_FS) {
 2997              		.loc 1 1302 0
 2998 00c0 95F85830 		ldrb	r3, [r5, #88]	@ zero_extendqisi2
 2999 00c4 022B     		cmp	r3, #2
 3000 00c6 0DD1     		bne	.L244
1303:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****     cquantize->fserrors = (FSERRPTR) (*cinfo->mem->alloc_large)
ARM GAS  /tmp/ccs1isz7.s 			page 81


 3001              		.loc 1 1303 0
 3002 00c8 6968     		ldr	r1, [r5, #4]
1304:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****       ((j_common_ptr) cinfo, JPOOL_IMAGE,
1305:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****        (size_t) ((cinfo->output_width + 2) * (3 * SIZEOF(FSERROR))));
 3003              		.loc 1 1305 0
 3004 00ca 2B6F     		ldr	r3, [r5, #112]
1303:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****     cquantize->fserrors = (FSERRPTR) (*cinfo->mem->alloc_large)
 3005              		.loc 1 1303 0
 3006 00cc 03EB4303 		add	r3, r3, r3, lsl #1
 3007 00d0 5A00     		lsls	r2, r3, #1
 3008 00d2 4B68     		ldr	r3, [r1, #4]
 3009 00d4 0C32     		adds	r2, r2, #12
 3010 00d6 0121     		movs	r1, #1
 3011 00d8 2846     		mov	r0, r5
 3012 00da 9847     		blx	r3
 3013              	.LVL502:
 3014 00dc 3862     		str	r0, [r7, #32]
1306:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****     /* Might as well create the error-limiting table too. */
1307:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****     init_error_limit(cinfo);
 3015              		.loc 1 1307 0
 3016 00de 2846     		mov	r0, r5
 3017 00e0 FFF7FEFF 		bl	init_error_limit
 3018              	.LVL503:
 3019              	.L244:
1308:Middlewares/Third_Party/LibJPEG/source/jquant2.c ****   }
1309:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** }
 3020              		.loc 1 1309 0
 3021 00e4 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 3022              	.LVL504:
 3023              	.L248:
1290:Middlewares/Third_Party/LibJPEG/source/jquant2.c **** 
 3024              		.loc 1 1290 0
 3025 00e6 0023     		movs	r3, #0
 3026 00e8 3B61     		str	r3, [r7, #16]
 3027 00ea E3E7     		b	.L251
 3028              	.L256:
 3029              		.align	2
 3030              	.L255:
 3031 00ec 00000000 		.word	start_pass_2_quant
 3032 00f0 00000000 		.word	new_color_map_2_quant
 3033              		.cfi_endproc
 3034              	.LFE20:
 3036              		.text
 3037              	.Letext0:
 3038              		.file 2 "/home/jaxc/opt/gcc-arm-none-eabi-7-2018-q2-update/lib/gcc/arm-none-eabi/7.3.1/include/std
 3039              		.file 3 "/home/jaxc/opt/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/lock.h"
 3040              		.file 4 "/home/jaxc/opt/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/_types.h"
 3041              		.file 5 "/home/jaxc/opt/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/reent.h"
 3042              		.file 6 "/home/jaxc/opt/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/stdlib.h"
 3043              		.file 7 "Inc/jmorecfg.h"
 3044              		.file 8 "Middlewares/Third_Party/LibJPEG/include/jpeglib.h"
 3045              		.file 9 "Middlewares/Third_Party/LibJPEG/include/jpegint.h"
 3046              		.file 10 "Middlewares/Third_Party/LibJPEG/include/jerror.h"
 3047              		.file 11 "<built-in>"
ARM GAS  /tmp/ccs1isz7.s 			page 82


DEFINED SYMBOLS
                            *ABS*:0000000000000000 jquant2.c
     /tmp/ccs1isz7.s:18     .text.prescan_quantize:0000000000000000 $t
     /tmp/ccs1isz7.s:24     .text.prescan_quantize:0000000000000000 prescan_quantize
     /tmp/ccs1isz7.s:109    .text.find_biggest_color_pop:0000000000000000 $t
     /tmp/ccs1isz7.s:115    .text.find_biggest_color_pop:0000000000000000 find_biggest_color_pop
     /tmp/ccs1isz7.s:180    .text.find_biggest_volume:0000000000000000 $t
     /tmp/ccs1isz7.s:186    .text.find_biggest_volume:0000000000000000 find_biggest_volume
     /tmp/ccs1isz7.s:245    .text.update_box:0000000000000000 $t
     /tmp/ccs1isz7.s:251    .text.update_box:0000000000000000 update_box
     /tmp/ccs1isz7.s:751    .text.median_cut:0000000000000000 $t
     /tmp/ccs1isz7.s:757    .text.median_cut:0000000000000000 median_cut
     /tmp/ccs1isz7.s:969    .text.compute_color:0000000000000000 $t
     /tmp/ccs1isz7.s:975    .text.compute_color:0000000000000000 compute_color
     /tmp/ccs1isz7.s:1138   .text.select_colors:0000000000000000 $t
     /tmp/ccs1isz7.s:1144   .text.select_colors:0000000000000000 select_colors
     /tmp/ccs1isz7.s:1239   .text.find_nearby_colors:0000000000000000 $t
     /tmp/ccs1isz7.s:1245   .text.find_nearby_colors:0000000000000000 find_nearby_colors
     /tmp/ccs1isz7.s:1585   .text.find_best_colors:0000000000000000 $t
     /tmp/ccs1isz7.s:1591   .text.find_best_colors:0000000000000000 find_best_colors
     /tmp/ccs1isz7.s:1797   .text.fill_inverse_cmap:0000000000000000 $t
     /tmp/ccs1isz7.s:1803   .text.fill_inverse_cmap:0000000000000000 fill_inverse_cmap
     /tmp/ccs1isz7.s:1951   .text.pass2_no_dither:0000000000000000 $t
     /tmp/ccs1isz7.s:1957   .text.pass2_no_dither:0000000000000000 pass2_no_dither
     /tmp/ccs1isz7.s:2078   .text.pass2_fs_dither:0000000000000000 $t
     /tmp/ccs1isz7.s:2084   .text.pass2_fs_dither:0000000000000000 pass2_fs_dither
     /tmp/ccs1isz7.s:2464   .text.init_error_limit:0000000000000000 $t
     /tmp/ccs1isz7.s:2470   .text.init_error_limit:0000000000000000 init_error_limit
     /tmp/ccs1isz7.s:2560   .text.finish_pass1:0000000000000000 $t
     /tmp/ccs1isz7.s:2566   .text.finish_pass1:0000000000000000 finish_pass1
     /tmp/ccs1isz7.s:2597   .text.finish_pass2:0000000000000000 $t
     /tmp/ccs1isz7.s:2603   .text.finish_pass2:0000000000000000 finish_pass2
     /tmp/ccs1isz7.s:2617   .text.new_color_map_2_quant:0000000000000000 $t
     /tmp/ccs1isz7.s:2623   .text.new_color_map_2_quant:0000000000000000 new_color_map_2_quant
     /tmp/ccs1isz7.s:2643   .text.start_pass_2_quant:0000000000000000 $t
     /tmp/ccs1isz7.s:2649   .text.start_pass_2_quant:0000000000000000 start_pass_2_quant
     /tmp/ccs1isz7.s:2829   .text.start_pass_2_quant:00000000000000d8 $d
     /tmp/ccs1isz7.s:2838   .text.jinit_2pass_quantizer:0000000000000000 $t
     /tmp/ccs1isz7.s:2845   .text.jinit_2pass_quantizer:0000000000000000 jinit_2pass_quantizer
     /tmp/ccs1isz7.s:3031   .text.jinit_2pass_quantizer:00000000000000ec $d

UNDEFINED SYMBOLS
memset
