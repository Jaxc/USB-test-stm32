ARM GAS  /tmp/ccZKX00x.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"jcmainct.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.start_pass_main,"ax",%progbits
  18              		.align	1
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv5-sp-d16
  24              	start_pass_main:
  25              	.LFB3:
  26              		.file 1 "Middlewares/Third_Party/LibJPEG/source/jcmainct.c"
   1:Middlewares/Third_Party/LibJPEG/source/jcmainct.c **** /*
   2:Middlewares/Third_Party/LibJPEG/source/jcmainct.c ****  * jcmainct.c
   3:Middlewares/Third_Party/LibJPEG/source/jcmainct.c ****  *
   4:Middlewares/Third_Party/LibJPEG/source/jcmainct.c ****  * Copyright (C) 1994-1996, Thomas G. Lane.
   5:Middlewares/Third_Party/LibJPEG/source/jcmainct.c ****  * This file is part of the Independent JPEG Group's software.
   6:Middlewares/Third_Party/LibJPEG/source/jcmainct.c ****  * For conditions of distribution and use, see the accompanying README file.
   7:Middlewares/Third_Party/LibJPEG/source/jcmainct.c ****  *
   8:Middlewares/Third_Party/LibJPEG/source/jcmainct.c ****  * This file contains the main buffer controller for compression.
   9:Middlewares/Third_Party/LibJPEG/source/jcmainct.c ****  * The main buffer lies between the pre-processor and the JPEG
  10:Middlewares/Third_Party/LibJPEG/source/jcmainct.c ****  * compressor proper; it holds downsampled data in the JPEG colorspace.
  11:Middlewares/Third_Party/LibJPEG/source/jcmainct.c ****  */
  12:Middlewares/Third_Party/LibJPEG/source/jcmainct.c **** 
  13:Middlewares/Third_Party/LibJPEG/source/jcmainct.c **** #define JPEG_INTERNALS
  14:Middlewares/Third_Party/LibJPEG/source/jcmainct.c **** #include "jinclude.h"
  15:Middlewares/Third_Party/LibJPEG/source/jcmainct.c **** #include "jpeglib.h"
  16:Middlewares/Third_Party/LibJPEG/source/jcmainct.c **** 
  17:Middlewares/Third_Party/LibJPEG/source/jcmainct.c **** 
  18:Middlewares/Third_Party/LibJPEG/source/jcmainct.c **** /* Note: currently, there is no operating mode in which a full-image buffer
  19:Middlewares/Third_Party/LibJPEG/source/jcmainct.c ****  * is needed at this step.  If there were, that mode could not be used with
  20:Middlewares/Third_Party/LibJPEG/source/jcmainct.c ****  * "raw data" input, since this module is bypassed in that case.  However,
  21:Middlewares/Third_Party/LibJPEG/source/jcmainct.c ****  * we've left the code here for possible use in special applications.
  22:Middlewares/Third_Party/LibJPEG/source/jcmainct.c ****  */
  23:Middlewares/Third_Party/LibJPEG/source/jcmainct.c **** #undef FULL_MAIN_BUFFER_SUPPORTED
  24:Middlewares/Third_Party/LibJPEG/source/jcmainct.c **** 
  25:Middlewares/Third_Party/LibJPEG/source/jcmainct.c **** 
  26:Middlewares/Third_Party/LibJPEG/source/jcmainct.c **** /* Private buffer controller object */
  27:Middlewares/Third_Party/LibJPEG/source/jcmainct.c **** 
  28:Middlewares/Third_Party/LibJPEG/source/jcmainct.c **** typedef struct {
  29:Middlewares/Third_Party/LibJPEG/source/jcmainct.c ****   struct jpeg_c_main_controller pub; /* public fields */
  30:Middlewares/Third_Party/LibJPEG/source/jcmainct.c **** 
  31:Middlewares/Third_Party/LibJPEG/source/jcmainct.c ****   JDIMENSION cur_iMCU_row;	/* number of current iMCU row */
  32:Middlewares/Third_Party/LibJPEG/source/jcmainct.c ****   JDIMENSION rowgroup_ctr;	/* counts row groups received in iMCU row */
ARM GAS  /tmp/ccZKX00x.s 			page 2


  33:Middlewares/Third_Party/LibJPEG/source/jcmainct.c ****   boolean suspended;		/* remember if we suspended output */
  34:Middlewares/Third_Party/LibJPEG/source/jcmainct.c ****   J_BUF_MODE pass_mode;		/* current operating mode */
  35:Middlewares/Third_Party/LibJPEG/source/jcmainct.c **** 
  36:Middlewares/Third_Party/LibJPEG/source/jcmainct.c ****   /* If using just a strip buffer, this points to the entire set of buffers
  37:Middlewares/Third_Party/LibJPEG/source/jcmainct.c ****    * (we allocate one for each component).  In the full-image case, this
  38:Middlewares/Third_Party/LibJPEG/source/jcmainct.c ****    * points to the currently accessible strips of the virtual arrays.
  39:Middlewares/Third_Party/LibJPEG/source/jcmainct.c ****    */
  40:Middlewares/Third_Party/LibJPEG/source/jcmainct.c ****   JSAMPARRAY buffer[MAX_COMPONENTS];
  41:Middlewares/Third_Party/LibJPEG/source/jcmainct.c **** 
  42:Middlewares/Third_Party/LibJPEG/source/jcmainct.c **** #ifdef FULL_MAIN_BUFFER_SUPPORTED
  43:Middlewares/Third_Party/LibJPEG/source/jcmainct.c ****   /* If using full-image storage, this array holds pointers to virtual-array
  44:Middlewares/Third_Party/LibJPEG/source/jcmainct.c ****    * control blocks for each component.  Unused if not full-image storage.
  45:Middlewares/Third_Party/LibJPEG/source/jcmainct.c ****    */
  46:Middlewares/Third_Party/LibJPEG/source/jcmainct.c ****   jvirt_sarray_ptr whole_image[MAX_COMPONENTS];
  47:Middlewares/Third_Party/LibJPEG/source/jcmainct.c **** #endif
  48:Middlewares/Third_Party/LibJPEG/source/jcmainct.c **** } my_main_controller;
  49:Middlewares/Third_Party/LibJPEG/source/jcmainct.c **** 
  50:Middlewares/Third_Party/LibJPEG/source/jcmainct.c **** typedef my_main_controller * my_main_ptr;
  51:Middlewares/Third_Party/LibJPEG/source/jcmainct.c **** 
  52:Middlewares/Third_Party/LibJPEG/source/jcmainct.c **** 
  53:Middlewares/Third_Party/LibJPEG/source/jcmainct.c **** /* Forward declarations */
  54:Middlewares/Third_Party/LibJPEG/source/jcmainct.c **** METHODDEF(void) process_data_simple_main
  55:Middlewares/Third_Party/LibJPEG/source/jcmainct.c **** 	JPP((j_compress_ptr cinfo, JSAMPARRAY input_buf,
  56:Middlewares/Third_Party/LibJPEG/source/jcmainct.c **** 	     JDIMENSION *in_row_ctr, JDIMENSION in_rows_avail));
  57:Middlewares/Third_Party/LibJPEG/source/jcmainct.c **** #ifdef FULL_MAIN_BUFFER_SUPPORTED
  58:Middlewares/Third_Party/LibJPEG/source/jcmainct.c **** METHODDEF(void) process_data_buffer_main
  59:Middlewares/Third_Party/LibJPEG/source/jcmainct.c **** 	JPP((j_compress_ptr cinfo, JSAMPARRAY input_buf,
  60:Middlewares/Third_Party/LibJPEG/source/jcmainct.c **** 	     JDIMENSION *in_row_ctr, JDIMENSION in_rows_avail));
  61:Middlewares/Third_Party/LibJPEG/source/jcmainct.c **** #endif
  62:Middlewares/Third_Party/LibJPEG/source/jcmainct.c **** 
  63:Middlewares/Third_Party/LibJPEG/source/jcmainct.c **** 
  64:Middlewares/Third_Party/LibJPEG/source/jcmainct.c **** /*
  65:Middlewares/Third_Party/LibJPEG/source/jcmainct.c ****  * Initialize for a processing pass.
  66:Middlewares/Third_Party/LibJPEG/source/jcmainct.c ****  */
  67:Middlewares/Third_Party/LibJPEG/source/jcmainct.c **** 
  68:Middlewares/Third_Party/LibJPEG/source/jcmainct.c **** METHODDEF(void)
  69:Middlewares/Third_Party/LibJPEG/source/jcmainct.c **** start_pass_main (j_compress_ptr cinfo, J_BUF_MODE pass_mode)
  70:Middlewares/Third_Party/LibJPEG/source/jcmainct.c **** {
  27              		.loc 1 70 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              	.LVL0:
  32 0000 08B5     		push	{r3, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 8
  35              		.cfi_offset 3, -8
  36              		.cfi_offset 14, -4
  71:Middlewares/Third_Party/LibJPEG/source/jcmainct.c ****   my_main_ptr main = (my_main_ptr) cinfo->main;
  37              		.loc 1 71 0
  38 0002 D0F88831 		ldr	r3, [r0, #392]
  39              	.LVL1:
  72:Middlewares/Third_Party/LibJPEG/source/jcmainct.c **** 
  73:Middlewares/Third_Party/LibJPEG/source/jcmainct.c ****   /* Do nothing in raw-data mode. */
  74:Middlewares/Third_Party/LibJPEG/source/jcmainct.c ****   if (cinfo->raw_data_in)
  40              		.loc 1 74 0
  41 0006 D0F8D020 		ldr	r2, [r0, #208]
ARM GAS  /tmp/ccZKX00x.s 			page 3


  42 000a 52B9     		cbnz	r2, .L1
  75:Middlewares/Third_Party/LibJPEG/source/jcmainct.c ****     return;
  76:Middlewares/Third_Party/LibJPEG/source/jcmainct.c **** 
  77:Middlewares/Third_Party/LibJPEG/source/jcmainct.c ****   main->cur_iMCU_row = 0;	/* initialize counters */
  43              		.loc 1 77 0
  44 000c 9A60     		str	r2, [r3, #8]
  78:Middlewares/Third_Party/LibJPEG/source/jcmainct.c ****   main->rowgroup_ctr = 0;
  45              		.loc 1 78 0
  46 000e DA60     		str	r2, [r3, #12]
  79:Middlewares/Third_Party/LibJPEG/source/jcmainct.c ****   main->suspended = FALSE;
  47              		.loc 1 79 0
  48 0010 1A61     		str	r2, [r3, #16]
  80:Middlewares/Third_Party/LibJPEG/source/jcmainct.c ****   main->pass_mode = pass_mode;	/* save mode for use by process_data */
  49              		.loc 1 80 0
  50 0012 1975     		strb	r1, [r3, #20]
  81:Middlewares/Third_Party/LibJPEG/source/jcmainct.c **** 
  82:Middlewares/Third_Party/LibJPEG/source/jcmainct.c ****   switch (pass_mode) {
  51              		.loc 1 82 0
  52 0014 31B1     		cbz	r1, .L7
  83:Middlewares/Third_Party/LibJPEG/source/jcmainct.c ****   case JBUF_PASS_THRU:
  84:Middlewares/Third_Party/LibJPEG/source/jcmainct.c **** #ifdef FULL_MAIN_BUFFER_SUPPORTED
  85:Middlewares/Third_Party/LibJPEG/source/jcmainct.c ****     if (main->whole_image[0] != NULL)
  86:Middlewares/Third_Party/LibJPEG/source/jcmainct.c ****       ERREXIT(cinfo, JERR_BAD_BUFFER_MODE);
  87:Middlewares/Third_Party/LibJPEG/source/jcmainct.c **** #endif
  88:Middlewares/Third_Party/LibJPEG/source/jcmainct.c ****     main->pub.process_data = process_data_simple_main;
  89:Middlewares/Third_Party/LibJPEG/source/jcmainct.c ****     break;
  90:Middlewares/Third_Party/LibJPEG/source/jcmainct.c **** #ifdef FULL_MAIN_BUFFER_SUPPORTED
  91:Middlewares/Third_Party/LibJPEG/source/jcmainct.c ****   case JBUF_SAVE_SOURCE:
  92:Middlewares/Third_Party/LibJPEG/source/jcmainct.c ****   case JBUF_CRANK_DEST:
  93:Middlewares/Third_Party/LibJPEG/source/jcmainct.c ****   case JBUF_SAVE_AND_PASS:
  94:Middlewares/Third_Party/LibJPEG/source/jcmainct.c ****     if (main->whole_image[0] == NULL)
  95:Middlewares/Third_Party/LibJPEG/source/jcmainct.c ****       ERREXIT(cinfo, JERR_BAD_BUFFER_MODE);
  96:Middlewares/Third_Party/LibJPEG/source/jcmainct.c ****     main->pub.process_data = process_data_buffer_main;
  97:Middlewares/Third_Party/LibJPEG/source/jcmainct.c ****     break;
  98:Middlewares/Third_Party/LibJPEG/source/jcmainct.c **** #endif
  99:Middlewares/Third_Party/LibJPEG/source/jcmainct.c ****   default:
 100:Middlewares/Third_Party/LibJPEG/source/jcmainct.c ****     ERREXIT(cinfo, JERR_BAD_BUFFER_MODE);
  53              		.loc 1 100 0
  54 0016 0368     		ldr	r3, [r0]
  55              	.LVL2:
  56 0018 0322     		movs	r2, #3
  57 001a 5A61     		str	r2, [r3, #20]
  58 001c 0368     		ldr	r3, [r0]
  59 001e 1B68     		ldr	r3, [r3]
  60 0020 9847     		blx	r3
  61              	.LVL3:
  62              	.L1:
 101:Middlewares/Third_Party/LibJPEG/source/jcmainct.c ****     break;
 102:Middlewares/Third_Party/LibJPEG/source/jcmainct.c ****   }
 103:Middlewares/Third_Party/LibJPEG/source/jcmainct.c **** }
  63              		.loc 1 103 0
  64 0022 08BD     		pop	{r3, pc}
  65              	.LVL4:
  66              	.L7:
  88:Middlewares/Third_Party/LibJPEG/source/jcmainct.c ****     break;
  67              		.loc 1 88 0
  68 0024 014A     		ldr	r2, .L8
ARM GAS  /tmp/ccZKX00x.s 			page 4


  69 0026 5A60     		str	r2, [r3, #4]
  89:Middlewares/Third_Party/LibJPEG/source/jcmainct.c **** #ifdef FULL_MAIN_BUFFER_SUPPORTED
  70              		.loc 1 89 0
  71 0028 FBE7     		b	.L1
  72              	.L9:
  73 002a 00BF     		.align	2
  74              	.L8:
  75 002c 00000000 		.word	process_data_simple_main
  76              		.cfi_endproc
  77              	.LFE3:
  79              		.section	.text.process_data_simple_main,"ax",%progbits
  80              		.align	1
  81              		.syntax unified
  82              		.thumb
  83              		.thumb_func
  84              		.fpu fpv5-sp-d16
  86              	process_data_simple_main:
  87              	.LFB4:
 104:Middlewares/Third_Party/LibJPEG/source/jcmainct.c **** 
 105:Middlewares/Third_Party/LibJPEG/source/jcmainct.c **** 
 106:Middlewares/Third_Party/LibJPEG/source/jcmainct.c **** /*
 107:Middlewares/Third_Party/LibJPEG/source/jcmainct.c ****  * Process some data.
 108:Middlewares/Third_Party/LibJPEG/source/jcmainct.c ****  * This routine handles the simple pass-through mode,
 109:Middlewares/Third_Party/LibJPEG/source/jcmainct.c ****  * where we have only a strip buffer.
 110:Middlewares/Third_Party/LibJPEG/source/jcmainct.c ****  */
 111:Middlewares/Third_Party/LibJPEG/source/jcmainct.c **** 
 112:Middlewares/Third_Party/LibJPEG/source/jcmainct.c **** METHODDEF(void)
 113:Middlewares/Third_Party/LibJPEG/source/jcmainct.c **** process_data_simple_main (j_compress_ptr cinfo,
 114:Middlewares/Third_Party/LibJPEG/source/jcmainct.c **** 			  JSAMPARRAY input_buf, JDIMENSION *in_row_ctr,
 115:Middlewares/Third_Party/LibJPEG/source/jcmainct.c **** 			  JDIMENSION in_rows_avail)
 116:Middlewares/Third_Party/LibJPEG/source/jcmainct.c **** {
  88              		.loc 1 116 0
  89              		.cfi_startproc
  90              		@ args = 0, pretend = 0, frame = 0
  91              		@ frame_needed = 0, uses_anonymous_args = 0
  92              	.LVL5:
  93 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
  94              	.LCFI1:
  95              		.cfi_def_cfa_offset 28
  96              		.cfi_offset 4, -28
  97              		.cfi_offset 5, -24
  98              		.cfi_offset 6, -20
  99              		.cfi_offset 7, -16
 100              		.cfi_offset 8, -12
 101              		.cfi_offset 9, -8
 102              		.cfi_offset 14, -4
 103 0004 85B0     		sub	sp, sp, #20
 104              	.LCFI2:
 105              		.cfi_def_cfa_offset 48
 106 0006 0546     		mov	r5, r0
 107 0008 8846     		mov	r8, r1
 108 000a 1646     		mov	r6, r2
 109 000c 9946     		mov	r9, r3
 117:Middlewares/Third_Party/LibJPEG/source/jcmainct.c ****   my_main_ptr main = (my_main_ptr) cinfo->main;
 110              		.loc 1 117 0
 111 000e D0F88841 		ldr	r4, [r0, #392]
 112              	.LVL6:
ARM GAS  /tmp/ccZKX00x.s 			page 5


 118:Middlewares/Third_Party/LibJPEG/source/jcmainct.c **** 
 119:Middlewares/Third_Party/LibJPEG/source/jcmainct.c ****   while (main->cur_iMCU_row < cinfo->total_iMCU_rows) {
 113              		.loc 1 119 0
 114 0012 0EE0     		b	.L11
 115              	.LVL7:
 116              	.L18:
 120:Middlewares/Third_Party/LibJPEG/source/jcmainct.c ****     /* Read input data if we haven't filled the main buffer yet */
 121:Middlewares/Third_Party/LibJPEG/source/jcmainct.c ****     if (main->rowgroup_ctr < (JDIMENSION) cinfo->min_DCT_v_scaled_size)
 122:Middlewares/Third_Party/LibJPEG/source/jcmainct.c ****       (*cinfo->prep->pre_process_data) (cinfo,
 123:Middlewares/Third_Party/LibJPEG/source/jcmainct.c **** 					input_buf, in_row_ctr, in_rows_avail,
 124:Middlewares/Third_Party/LibJPEG/source/jcmainct.c **** 					main->buffer, &main->rowgroup_ctr,
 125:Middlewares/Third_Party/LibJPEG/source/jcmainct.c **** 					(JDIMENSION) cinfo->min_DCT_v_scaled_size);
 126:Middlewares/Third_Party/LibJPEG/source/jcmainct.c **** 
 127:Middlewares/Third_Party/LibJPEG/source/jcmainct.c ****     /* If we don't have a full iMCU row buffered, return to application for
 128:Middlewares/Third_Party/LibJPEG/source/jcmainct.c ****      * more data.  Note that preprocessor will always pad to fill the iMCU row
 129:Middlewares/Third_Party/LibJPEG/source/jcmainct.c ****      * at the bottom of the image.
 130:Middlewares/Third_Party/LibJPEG/source/jcmainct.c ****      */
 131:Middlewares/Third_Party/LibJPEG/source/jcmainct.c ****     if (main->rowgroup_ctr != (JDIMENSION) cinfo->min_DCT_v_scaled_size)
 132:Middlewares/Third_Party/LibJPEG/source/jcmainct.c ****       return;
 133:Middlewares/Third_Party/LibJPEG/source/jcmainct.c **** 
 134:Middlewares/Third_Party/LibJPEG/source/jcmainct.c ****     /* Send the completed row to the compressor */
 135:Middlewares/Third_Party/LibJPEG/source/jcmainct.c ****     if (! (*cinfo->coef->compress_data) (cinfo, main->buffer)) {
 136:Middlewares/Third_Party/LibJPEG/source/jcmainct.c ****       /* If compressor did not consume the whole row, then we must need to
 137:Middlewares/Third_Party/LibJPEG/source/jcmainct.c ****        * suspend processing and return to the application.  In this situation
 138:Middlewares/Third_Party/LibJPEG/source/jcmainct.c ****        * we pretend we didn't yet consume the last input row; otherwise, if
 139:Middlewares/Third_Party/LibJPEG/source/jcmainct.c ****        * it happened to be the last row of the image, the application would
 140:Middlewares/Third_Party/LibJPEG/source/jcmainct.c ****        * think we were done.
 141:Middlewares/Third_Party/LibJPEG/source/jcmainct.c ****        */
 142:Middlewares/Third_Party/LibJPEG/source/jcmainct.c ****       if (! main->suspended) {
 117              		.loc 1 142 0
 118 0014 2369     		ldr	r3, [r4, #16]
 119 0016 23B9     		cbnz	r3, .L10
 143:Middlewares/Third_Party/LibJPEG/source/jcmainct.c **** 	(*in_row_ctr)--;
 120              		.loc 1 143 0
 121 0018 3368     		ldr	r3, [r6]
 122 001a 013B     		subs	r3, r3, #1
 123 001c 3360     		str	r3, [r6]
 144:Middlewares/Third_Party/LibJPEG/source/jcmainct.c **** 	main->suspended = TRUE;
 124              		.loc 1 144 0
 125 001e 0123     		movs	r3, #1
 126 0020 2361     		str	r3, [r4, #16]
 127              	.L10:
 145:Middlewares/Third_Party/LibJPEG/source/jcmainct.c ****       }
 146:Middlewares/Third_Party/LibJPEG/source/jcmainct.c ****       return;
 147:Middlewares/Third_Party/LibJPEG/source/jcmainct.c ****     }
 148:Middlewares/Third_Party/LibJPEG/source/jcmainct.c ****     /* We did finish the row.  Undo our little suspension hack if a previous
 149:Middlewares/Third_Party/LibJPEG/source/jcmainct.c ****      * call suspended; then mark the main buffer empty.
 150:Middlewares/Third_Party/LibJPEG/source/jcmainct.c ****      */
 151:Middlewares/Third_Party/LibJPEG/source/jcmainct.c ****     if (main->suspended) {
 152:Middlewares/Third_Party/LibJPEG/source/jcmainct.c ****       (*in_row_ctr)++;
 153:Middlewares/Third_Party/LibJPEG/source/jcmainct.c ****       main->suspended = FALSE;
 154:Middlewares/Third_Party/LibJPEG/source/jcmainct.c ****     }
 155:Middlewares/Third_Party/LibJPEG/source/jcmainct.c ****     main->rowgroup_ctr = 0;
 156:Middlewares/Third_Party/LibJPEG/source/jcmainct.c ****     main->cur_iMCU_row++;
 157:Middlewares/Third_Party/LibJPEG/source/jcmainct.c ****   }
 158:Middlewares/Third_Party/LibJPEG/source/jcmainct.c **** }
 128              		.loc 1 158 0
ARM GAS  /tmp/ccZKX00x.s 			page 6


 129 0022 05B0     		add	sp, sp, #20
 130              	.LCFI3:
 131              		.cfi_remember_state
 132              		.cfi_def_cfa_offset 28
 133              		@ sp needed
 134 0024 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 135              	.LVL8:
 136              	.L15:
 137              	.LCFI4:
 138              		.cfi_restore_state
 155:Middlewares/Third_Party/LibJPEG/source/jcmainct.c ****     main->cur_iMCU_row++;
 139              		.loc 1 155 0
 140 0028 0023     		movs	r3, #0
 141 002a E360     		str	r3, [r4, #12]
 156:Middlewares/Third_Party/LibJPEG/source/jcmainct.c ****   }
 142              		.loc 1 156 0
 143 002c A368     		ldr	r3, [r4, #8]
 144 002e 0133     		adds	r3, r3, #1
 145 0030 A360     		str	r3, [r4, #8]
 146              	.L11:
 119:Middlewares/Third_Party/LibJPEG/source/jcmainct.c ****     /* Read input data if we haven't filled the main buffer yet */
 147              		.loc 1 119 0
 148 0032 A268     		ldr	r2, [r4, #8]
 149 0034 D5F81C31 		ldr	r3, [r5, #284]
 150 0038 9A42     		cmp	r2, r3
 151 003a F2D2     		bcs	.L10
 121:Middlewares/Third_Party/LibJPEG/source/jcmainct.c ****       (*cinfo->prep->pre_process_data) (cinfo,
 152              		.loc 1 121 0
 153 003c E268     		ldr	r2, [r4, #12]
 154 003e D5F81831 		ldr	r3, [r5, #280]
 155 0042 9A42     		cmp	r2, r3
 156 0044 0ED2     		bcs	.L12
 122:Middlewares/Third_Party/LibJPEG/source/jcmainct.c **** 					input_buf, in_row_ctr, in_rows_avail,
 157              		.loc 1 122 0
 158 0046 D5F88C21 		ldr	r2, [r5, #396]
 124:Middlewares/Third_Party/LibJPEG/source/jcmainct.c **** 					(JDIMENSION) cinfo->min_DCT_v_scaled_size);
 159              		.loc 1 124 0
 160 004a 04F11801 		add	r1, r4, #24
 122:Middlewares/Third_Party/LibJPEG/source/jcmainct.c **** 					input_buf, in_row_ctr, in_rows_avail,
 161              		.loc 1 122 0
 162 004e 0293     		str	r3, [sp, #8]
 163 0050 04F10C03 		add	r3, r4, #12
 164 0054 0193     		str	r3, [sp, #4]
 165 0056 0091     		str	r1, [sp]
 166 0058 5768     		ldr	r7, [r2, #4]
 167 005a 4B46     		mov	r3, r9
 168 005c 3246     		mov	r2, r6
 169 005e 4146     		mov	r1, r8
 170 0060 2846     		mov	r0, r5
 171 0062 B847     		blx	r7
 172              	.LVL9:
 173              	.L12:
 131:Middlewares/Third_Party/LibJPEG/source/jcmainct.c ****       return;
 174              		.loc 1 131 0
 175 0064 E268     		ldr	r2, [r4, #12]
 176 0066 D5F81831 		ldr	r3, [r5, #280]
 177 006a 9A42     		cmp	r2, r3
ARM GAS  /tmp/ccZKX00x.s 			page 7


 178 006c D9D1     		bne	.L10
 135:Middlewares/Third_Party/LibJPEG/source/jcmainct.c ****       /* If compressor did not consume the whole row, then we must need to
 179              		.loc 1 135 0
 180 006e D5F89031 		ldr	r3, [r5, #400]
 181 0072 5B68     		ldr	r3, [r3, #4]
 182 0074 04F11801 		add	r1, r4, #24
 183 0078 2846     		mov	r0, r5
 184 007a 9847     		blx	r3
 185              	.LVL10:
 186 007c 0028     		cmp	r0, #0
 187 007e C9D0     		beq	.L18
 151:Middlewares/Third_Party/LibJPEG/source/jcmainct.c ****       (*in_row_ctr)++;
 188              		.loc 1 151 0
 189 0080 2369     		ldr	r3, [r4, #16]
 190 0082 002B     		cmp	r3, #0
 191 0084 D0D0     		beq	.L15
 152:Middlewares/Third_Party/LibJPEG/source/jcmainct.c ****       main->suspended = FALSE;
 192              		.loc 1 152 0
 193 0086 3368     		ldr	r3, [r6]
 194 0088 0133     		adds	r3, r3, #1
 195 008a 3360     		str	r3, [r6]
 153:Middlewares/Third_Party/LibJPEG/source/jcmainct.c ****     }
 196              		.loc 1 153 0
 197 008c 0023     		movs	r3, #0
 198 008e 2361     		str	r3, [r4, #16]
 199 0090 CAE7     		b	.L15
 200              		.cfi_endproc
 201              	.LFE4:
 203              		.section	.text.jinit_c_main_controller,"ax",%progbits
 204              		.align	1
 205              		.global	jinit_c_main_controller
 206              		.syntax unified
 207              		.thumb
 208              		.thumb_func
 209              		.fpu fpv5-sp-d16
 211              	jinit_c_main_controller:
 212              	.LFB5:
 159:Middlewares/Third_Party/LibJPEG/source/jcmainct.c **** 
 160:Middlewares/Third_Party/LibJPEG/source/jcmainct.c **** 
 161:Middlewares/Third_Party/LibJPEG/source/jcmainct.c **** #ifdef FULL_MAIN_BUFFER_SUPPORTED
 162:Middlewares/Third_Party/LibJPEG/source/jcmainct.c **** 
 163:Middlewares/Third_Party/LibJPEG/source/jcmainct.c **** /*
 164:Middlewares/Third_Party/LibJPEG/source/jcmainct.c ****  * Process some data.
 165:Middlewares/Third_Party/LibJPEG/source/jcmainct.c ****  * This routine handles all of the modes that use a full-size buffer.
 166:Middlewares/Third_Party/LibJPEG/source/jcmainct.c ****  */
 167:Middlewares/Third_Party/LibJPEG/source/jcmainct.c **** 
 168:Middlewares/Third_Party/LibJPEG/source/jcmainct.c **** METHODDEF(void)
 169:Middlewares/Third_Party/LibJPEG/source/jcmainct.c **** process_data_buffer_main (j_compress_ptr cinfo,
 170:Middlewares/Third_Party/LibJPEG/source/jcmainct.c **** 			  JSAMPARRAY input_buf, JDIMENSION *in_row_ctr,
 171:Middlewares/Third_Party/LibJPEG/source/jcmainct.c **** 			  JDIMENSION in_rows_avail)
 172:Middlewares/Third_Party/LibJPEG/source/jcmainct.c **** {
 173:Middlewares/Third_Party/LibJPEG/source/jcmainct.c ****   my_main_ptr main = (my_main_ptr) cinfo->main;
 174:Middlewares/Third_Party/LibJPEG/source/jcmainct.c ****   int ci;
 175:Middlewares/Third_Party/LibJPEG/source/jcmainct.c ****   jpeg_component_info *compptr;
 176:Middlewares/Third_Party/LibJPEG/source/jcmainct.c ****   boolean writing = (main->pass_mode != JBUF_CRANK_DEST);
 177:Middlewares/Third_Party/LibJPEG/source/jcmainct.c **** 
 178:Middlewares/Third_Party/LibJPEG/source/jcmainct.c ****   while (main->cur_iMCU_row < cinfo->total_iMCU_rows) {
ARM GAS  /tmp/ccZKX00x.s 			page 8


 179:Middlewares/Third_Party/LibJPEG/source/jcmainct.c ****     /* Realign the virtual buffers if at the start of an iMCU row. */
 180:Middlewares/Third_Party/LibJPEG/source/jcmainct.c ****     if (main->rowgroup_ctr == 0) {
 181:Middlewares/Third_Party/LibJPEG/source/jcmainct.c ****       for (ci = 0, compptr = cinfo->comp_info; ci < cinfo->num_components;
 182:Middlewares/Third_Party/LibJPEG/source/jcmainct.c **** 	   ci++, compptr++) {
 183:Middlewares/Third_Party/LibJPEG/source/jcmainct.c **** 	main->buffer[ci] = (*cinfo->mem->access_virt_sarray)
 184:Middlewares/Third_Party/LibJPEG/source/jcmainct.c **** 	  ((j_common_ptr) cinfo, main->whole_image[ci],
 185:Middlewares/Third_Party/LibJPEG/source/jcmainct.c **** 	   main->cur_iMCU_row * (compptr->v_samp_factor * DCTSIZE),
 186:Middlewares/Third_Party/LibJPEG/source/jcmainct.c **** 	   (JDIMENSION) (compptr->v_samp_factor * DCTSIZE), writing);
 187:Middlewares/Third_Party/LibJPEG/source/jcmainct.c ****       }
 188:Middlewares/Third_Party/LibJPEG/source/jcmainct.c ****       /* In a read pass, pretend we just read some source data. */
 189:Middlewares/Third_Party/LibJPEG/source/jcmainct.c ****       if (! writing) {
 190:Middlewares/Third_Party/LibJPEG/source/jcmainct.c **** 	*in_row_ctr += cinfo->max_v_samp_factor * DCTSIZE;
 191:Middlewares/Third_Party/LibJPEG/source/jcmainct.c **** 	main->rowgroup_ctr = DCTSIZE;
 192:Middlewares/Third_Party/LibJPEG/source/jcmainct.c ****       }
 193:Middlewares/Third_Party/LibJPEG/source/jcmainct.c ****     }
 194:Middlewares/Third_Party/LibJPEG/source/jcmainct.c **** 
 195:Middlewares/Third_Party/LibJPEG/source/jcmainct.c ****     /* If a write pass, read input data until the current iMCU row is full. */
 196:Middlewares/Third_Party/LibJPEG/source/jcmainct.c ****     /* Note: preprocessor will pad if necessary to fill the last iMCU row. */
 197:Middlewares/Third_Party/LibJPEG/source/jcmainct.c ****     if (writing) {
 198:Middlewares/Third_Party/LibJPEG/source/jcmainct.c ****       (*cinfo->prep->pre_process_data) (cinfo,
 199:Middlewares/Third_Party/LibJPEG/source/jcmainct.c **** 					input_buf, in_row_ctr, in_rows_avail,
 200:Middlewares/Third_Party/LibJPEG/source/jcmainct.c **** 					main->buffer, &main->rowgroup_ctr,
 201:Middlewares/Third_Party/LibJPEG/source/jcmainct.c **** 					(JDIMENSION) DCTSIZE);
 202:Middlewares/Third_Party/LibJPEG/source/jcmainct.c ****       /* Return to application if we need more data to fill the iMCU row. */
 203:Middlewares/Third_Party/LibJPEG/source/jcmainct.c ****       if (main->rowgroup_ctr < DCTSIZE)
 204:Middlewares/Third_Party/LibJPEG/source/jcmainct.c **** 	return;
 205:Middlewares/Third_Party/LibJPEG/source/jcmainct.c ****     }
 206:Middlewares/Third_Party/LibJPEG/source/jcmainct.c **** 
 207:Middlewares/Third_Party/LibJPEG/source/jcmainct.c ****     /* Emit data, unless this is a sink-only pass. */
 208:Middlewares/Third_Party/LibJPEG/source/jcmainct.c ****     if (main->pass_mode != JBUF_SAVE_SOURCE) {
 209:Middlewares/Third_Party/LibJPEG/source/jcmainct.c ****       if (! (*cinfo->coef->compress_data) (cinfo, main->buffer)) {
 210:Middlewares/Third_Party/LibJPEG/source/jcmainct.c **** 	/* If compressor did not consume the whole row, then we must need to
 211:Middlewares/Third_Party/LibJPEG/source/jcmainct.c **** 	 * suspend processing and return to the application.  In this situation
 212:Middlewares/Third_Party/LibJPEG/source/jcmainct.c **** 	 * we pretend we didn't yet consume the last input row; otherwise, if
 213:Middlewares/Third_Party/LibJPEG/source/jcmainct.c **** 	 * it happened to be the last row of the image, the application would
 214:Middlewares/Third_Party/LibJPEG/source/jcmainct.c **** 	 * think we were done.
 215:Middlewares/Third_Party/LibJPEG/source/jcmainct.c **** 	 */
 216:Middlewares/Third_Party/LibJPEG/source/jcmainct.c **** 	if (! main->suspended) {
 217:Middlewares/Third_Party/LibJPEG/source/jcmainct.c **** 	  (*in_row_ctr)--;
 218:Middlewares/Third_Party/LibJPEG/source/jcmainct.c **** 	  main->suspended = TRUE;
 219:Middlewares/Third_Party/LibJPEG/source/jcmainct.c **** 	}
 220:Middlewares/Third_Party/LibJPEG/source/jcmainct.c **** 	return;
 221:Middlewares/Third_Party/LibJPEG/source/jcmainct.c ****       }
 222:Middlewares/Third_Party/LibJPEG/source/jcmainct.c ****       /* We did finish the row.  Undo our little suspension hack if a previous
 223:Middlewares/Third_Party/LibJPEG/source/jcmainct.c ****        * call suspended; then mark the main buffer empty.
 224:Middlewares/Third_Party/LibJPEG/source/jcmainct.c ****        */
 225:Middlewares/Third_Party/LibJPEG/source/jcmainct.c ****       if (main->suspended) {
 226:Middlewares/Third_Party/LibJPEG/source/jcmainct.c **** 	(*in_row_ctr)++;
 227:Middlewares/Third_Party/LibJPEG/source/jcmainct.c **** 	main->suspended = FALSE;
 228:Middlewares/Third_Party/LibJPEG/source/jcmainct.c ****       }
 229:Middlewares/Third_Party/LibJPEG/source/jcmainct.c ****     }
 230:Middlewares/Third_Party/LibJPEG/source/jcmainct.c **** 
 231:Middlewares/Third_Party/LibJPEG/source/jcmainct.c ****     /* If get here, we are done with this iMCU row.  Mark buffer empty. */
 232:Middlewares/Third_Party/LibJPEG/source/jcmainct.c ****     main->rowgroup_ctr = 0;
 233:Middlewares/Third_Party/LibJPEG/source/jcmainct.c ****     main->cur_iMCU_row++;
 234:Middlewares/Third_Party/LibJPEG/source/jcmainct.c ****   }
 235:Middlewares/Third_Party/LibJPEG/source/jcmainct.c **** }
ARM GAS  /tmp/ccZKX00x.s 			page 9


 236:Middlewares/Third_Party/LibJPEG/source/jcmainct.c **** 
 237:Middlewares/Third_Party/LibJPEG/source/jcmainct.c **** #endif /* FULL_MAIN_BUFFER_SUPPORTED */
 238:Middlewares/Third_Party/LibJPEG/source/jcmainct.c **** 
 239:Middlewares/Third_Party/LibJPEG/source/jcmainct.c **** 
 240:Middlewares/Third_Party/LibJPEG/source/jcmainct.c **** /*
 241:Middlewares/Third_Party/LibJPEG/source/jcmainct.c ****  * Initialize main buffer controller.
 242:Middlewares/Third_Party/LibJPEG/source/jcmainct.c ****  */
 243:Middlewares/Third_Party/LibJPEG/source/jcmainct.c **** 
 244:Middlewares/Third_Party/LibJPEG/source/jcmainct.c **** GLOBAL(void)
 245:Middlewares/Third_Party/LibJPEG/source/jcmainct.c **** jinit_c_main_controller (j_compress_ptr cinfo, boolean need_full_buffer)
 246:Middlewares/Third_Party/LibJPEG/source/jcmainct.c **** {
 213              		.loc 1 246 0
 214              		.cfi_startproc
 215              		@ args = 0, pretend = 0, frame = 0
 216              		@ frame_needed = 0, uses_anonymous_args = 0
 217              	.LVL11:
 218 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 219              	.LCFI5:
 220              		.cfi_def_cfa_offset 24
 221              		.cfi_offset 4, -24
 222              		.cfi_offset 5, -20
 223              		.cfi_offset 6, -16
 224              		.cfi_offset 7, -12
 225              		.cfi_offset 8, -8
 226              		.cfi_offset 14, -4
 227 0004 0446     		mov	r4, r0
 228 0006 0E46     		mov	r6, r1
 247:Middlewares/Third_Party/LibJPEG/source/jcmainct.c ****   my_main_ptr main;
 248:Middlewares/Third_Party/LibJPEG/source/jcmainct.c ****   int ci;
 249:Middlewares/Third_Party/LibJPEG/source/jcmainct.c ****   jpeg_component_info *compptr;
 250:Middlewares/Third_Party/LibJPEG/source/jcmainct.c **** 
 251:Middlewares/Third_Party/LibJPEG/source/jcmainct.c ****   main = (my_main_ptr)
 252:Middlewares/Third_Party/LibJPEG/source/jcmainct.c ****     (*cinfo->mem->alloc_small) ((j_common_ptr) cinfo, JPOOL_IMAGE,
 229              		.loc 1 252 0
 230 0008 4368     		ldr	r3, [r0, #4]
 231 000a 1B68     		ldr	r3, [r3]
 251:Middlewares/Third_Party/LibJPEG/source/jcmainct.c ****     (*cinfo->mem->alloc_small) ((j_common_ptr) cinfo, JPOOL_IMAGE,
 232              		.loc 1 251 0
 233 000c 4022     		movs	r2, #64
 234 000e 0121     		movs	r1, #1
 235              	.LVL12:
 236 0010 9847     		blx	r3
 237              	.LVL13:
 253:Middlewares/Third_Party/LibJPEG/source/jcmainct.c **** 				SIZEOF(my_main_controller));
 254:Middlewares/Third_Party/LibJPEG/source/jcmainct.c ****   cinfo->main = (struct jpeg_c_main_controller *) main;
 238              		.loc 1 254 0
 239 0012 C4F88801 		str	r0, [r4, #392]
 255:Middlewares/Third_Party/LibJPEG/source/jcmainct.c ****   main->pub.start_pass = start_pass_main;
 240              		.loc 1 255 0
 241 0016 164B     		ldr	r3, .L25
 242 0018 0360     		str	r3, [r0]
 256:Middlewares/Third_Party/LibJPEG/source/jcmainct.c **** 
 257:Middlewares/Third_Party/LibJPEG/source/jcmainct.c ****   /* We don't need to create a buffer in raw-data mode. */
 258:Middlewares/Third_Party/LibJPEG/source/jcmainct.c ****   if (cinfo->raw_data_in)
 243              		.loc 1 258 0
 244 001a D4F8D030 		ldr	r3, [r4, #208]
 245 001e 43B9     		cbnz	r3, .L19
ARM GAS  /tmp/ccZKX00x.s 			page 10


 246 0020 0546     		mov	r5, r0
 259:Middlewares/Third_Party/LibJPEG/source/jcmainct.c ****     return;
 260:Middlewares/Third_Party/LibJPEG/source/jcmainct.c **** 
 261:Middlewares/Third_Party/LibJPEG/source/jcmainct.c ****   /* Create the buffer.  It holds downsampled data, so each component
 262:Middlewares/Third_Party/LibJPEG/source/jcmainct.c ****    * may be of a different size.
 263:Middlewares/Third_Party/LibJPEG/source/jcmainct.c ****    */
 264:Middlewares/Third_Party/LibJPEG/source/jcmainct.c ****   if (need_full_buffer) {
 247              		.loc 1 264 0
 248 0022 46B1     		cbz	r6, .L21
 265:Middlewares/Third_Party/LibJPEG/source/jcmainct.c **** #ifdef FULL_MAIN_BUFFER_SUPPORTED
 266:Middlewares/Third_Party/LibJPEG/source/jcmainct.c ****     /* Allocate a full-image virtual array for each component */
 267:Middlewares/Third_Party/LibJPEG/source/jcmainct.c ****     /* Note we pad the bottom to a multiple of the iMCU height */
 268:Middlewares/Third_Party/LibJPEG/source/jcmainct.c ****     for (ci = 0, compptr = cinfo->comp_info; ci < cinfo->num_components;
 269:Middlewares/Third_Party/LibJPEG/source/jcmainct.c **** 	 ci++, compptr++) {
 270:Middlewares/Third_Party/LibJPEG/source/jcmainct.c ****       main->whole_image[ci] = (*cinfo->mem->request_virt_sarray)
 271:Middlewares/Third_Party/LibJPEG/source/jcmainct.c **** 	((j_common_ptr) cinfo, JPOOL_IMAGE, FALSE,
 272:Middlewares/Third_Party/LibJPEG/source/jcmainct.c **** 	 compptr->width_in_blocks * compptr->DCT_h_scaled_size,
 273:Middlewares/Third_Party/LibJPEG/source/jcmainct.c **** 	 (JDIMENSION) jround_up((long) compptr->height_in_blocks,
 274:Middlewares/Third_Party/LibJPEG/source/jcmainct.c **** 				(long) compptr->v_samp_factor) * DCTSIZE,
 275:Middlewares/Third_Party/LibJPEG/source/jcmainct.c **** 	 (JDIMENSION) (compptr->v_samp_factor * compptr->DCT_v_scaled_size));
 276:Middlewares/Third_Party/LibJPEG/source/jcmainct.c ****     }
 277:Middlewares/Third_Party/LibJPEG/source/jcmainct.c **** #else
 278:Middlewares/Third_Party/LibJPEG/source/jcmainct.c ****     ERREXIT(cinfo, JERR_BAD_BUFFER_MODE);
 249              		.loc 1 278 0
 250 0024 2368     		ldr	r3, [r4]
 251 0026 0322     		movs	r2, #3
 252 0028 5A61     		str	r2, [r3, #20]
 253 002a 2368     		ldr	r3, [r4]
 254 002c 1B68     		ldr	r3, [r3]
 255 002e 2046     		mov	r0, r4
 256              	.LVL14:
 257 0030 9847     		blx	r3
 258              	.LVL15:
 259              	.L19:
 279:Middlewares/Third_Party/LibJPEG/source/jcmainct.c **** #endif
 280:Middlewares/Third_Party/LibJPEG/source/jcmainct.c ****   } else {
 281:Middlewares/Third_Party/LibJPEG/source/jcmainct.c **** #ifdef FULL_MAIN_BUFFER_SUPPORTED
 282:Middlewares/Third_Party/LibJPEG/source/jcmainct.c ****     main->whole_image[0] = NULL; /* flag for no virtual arrays */
 283:Middlewares/Third_Party/LibJPEG/source/jcmainct.c **** #endif
 284:Middlewares/Third_Party/LibJPEG/source/jcmainct.c ****     /* Allocate a strip buffer for each component */
 285:Middlewares/Third_Party/LibJPEG/source/jcmainct.c ****     for (ci = 0, compptr = cinfo->comp_info; ci < cinfo->num_components;
 286:Middlewares/Third_Party/LibJPEG/source/jcmainct.c **** 	 ci++, compptr++) {
 287:Middlewares/Third_Party/LibJPEG/source/jcmainct.c ****       main->buffer[ci] = (*cinfo->mem->alloc_sarray)
 288:Middlewares/Third_Party/LibJPEG/source/jcmainct.c **** 	((j_common_ptr) cinfo, JPOOL_IMAGE,
 289:Middlewares/Third_Party/LibJPEG/source/jcmainct.c **** 	 compptr->width_in_blocks * compptr->DCT_h_scaled_size,
 290:Middlewares/Third_Party/LibJPEG/source/jcmainct.c **** 	 (JDIMENSION) (compptr->v_samp_factor * compptr->DCT_v_scaled_size));
 291:Middlewares/Third_Party/LibJPEG/source/jcmainct.c ****     }
 292:Middlewares/Third_Party/LibJPEG/source/jcmainct.c ****   }
 293:Middlewares/Third_Party/LibJPEG/source/jcmainct.c **** }
 260              		.loc 1 293 0
 261 0032 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 262              	.LVL16:
 263              	.L21:
 285:Middlewares/Third_Party/LibJPEG/source/jcmainct.c **** 	 ci++, compptr++) {
 264              		.loc 1 285 0
 265 0036 666D     		ldr	r6, [r4, #84]
 266              	.LVL17:
ARM GAS  /tmp/ccZKX00x.s 			page 11


 267 0038 4FF00008 		mov	r8, #0
 268 003c 13E0     		b	.L22
 269              	.LVL18:
 270              	.L23:
 287:Middlewares/Third_Party/LibJPEG/source/jcmainct.c **** 	((j_common_ptr) cinfo, JPOOL_IMAGE,
 271              		.loc 1 287 0
 272 003e 6768     		ldr	r7, [r4, #4]
 289:Middlewares/Third_Party/LibJPEG/source/jcmainct.c **** 	 (JDIMENSION) (compptr->v_samp_factor * compptr->DCT_v_scaled_size));
 273              		.loc 1 289 0
 274 0040 F269     		ldr	r2, [r6, #28]
 275 0042 716A     		ldr	r1, [r6, #36]
 290:Middlewares/Third_Party/LibJPEG/source/jcmainct.c ****     }
 276              		.loc 1 290 0
 277 0044 F368     		ldr	r3, [r6, #12]
 278 0046 B06A     		ldr	r0, [r6, #40]
 287:Middlewares/Third_Party/LibJPEG/source/jcmainct.c **** 	((j_common_ptr) cinfo, JPOOL_IMAGE,
 279              		.loc 1 287 0
 280 0048 BF68     		ldr	r7, [r7, #8]
 281 004a 00FB03F3 		mul	r3, r0, r3
 282 004e 01FB02F2 		mul	r2, r1, r2
 283 0052 0121     		movs	r1, #1
 284 0054 2046     		mov	r0, r4
 285 0056 B847     		blx	r7
 286              	.LVL19:
 287 0058 08F10603 		add	r3, r8, #6
 288 005c 45F82300 		str	r0, [r5, r3, lsl #2]
 286:Middlewares/Third_Party/LibJPEG/source/jcmainct.c ****       main->buffer[ci] = (*cinfo->mem->alloc_sarray)
 289              		.loc 1 286 0
 290 0060 08F10108 		add	r8, r8, #1
 291              	.LVL20:
 292 0064 5836     		adds	r6, r6, #88
 293              	.LVL21:
 294              	.L22:
 285:Middlewares/Third_Party/LibJPEG/source/jcmainct.c **** 	 ci++, compptr++) {
 295              		.loc 1 285 0 discriminator 1
 296 0066 E36C     		ldr	r3, [r4, #76]
 297 0068 4345     		cmp	r3, r8
 298 006a E8DC     		bgt	.L23
 299 006c E1E7     		b	.L19
 300              	.L26:
 301 006e 00BF     		.align	2
 302              	.L25:
 303 0070 00000000 		.word	start_pass_main
 304              		.cfi_endproc
 305              	.LFE5:
 307              		.text
 308              	.Letext0:
 309              		.file 2 "/home/jaxc/opt/gcc-arm-none-eabi-7-2018-q2-update/lib/gcc/arm-none-eabi/7.3.1/include/std
 310              		.file 3 "/home/jaxc/opt/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/lock.h"
 311              		.file 4 "/home/jaxc/opt/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/_types.h"
 312              		.file 5 "/home/jaxc/opt/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/reent.h"
 313              		.file 6 "/home/jaxc/opt/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/stdlib.h"
 314              		.file 7 "Inc/jmorecfg.h"
 315              		.file 8 "Middlewares/Third_Party/LibJPEG/include/jpeglib.h"
 316              		.file 9 "Middlewares/Third_Party/LibJPEG/include/jpegint.h"
 317              		.file 10 "Middlewares/Third_Party/LibJPEG/include/jerror.h"
ARM GAS  /tmp/ccZKX00x.s 			page 12


DEFINED SYMBOLS
                            *ABS*:0000000000000000 jcmainct.c
     /tmp/ccZKX00x.s:18     .text.start_pass_main:0000000000000000 $t
     /tmp/ccZKX00x.s:24     .text.start_pass_main:0000000000000000 start_pass_main
     /tmp/ccZKX00x.s:75     .text.start_pass_main:000000000000002c $d
     /tmp/ccZKX00x.s:86     .text.process_data_simple_main:0000000000000000 process_data_simple_main
     /tmp/ccZKX00x.s:80     .text.process_data_simple_main:0000000000000000 $t
     /tmp/ccZKX00x.s:204    .text.jinit_c_main_controller:0000000000000000 $t
     /tmp/ccZKX00x.s:211    .text.jinit_c_main_controller:0000000000000000 jinit_c_main_controller
     /tmp/ccZKX00x.s:303    .text.jinit_c_main_controller:0000000000000070 $d

NO UNDEFINED SYMBOLS
