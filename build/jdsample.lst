ARM GAS  /tmp/ccArUpBJ.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"jdsample.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.start_pass_upsample,"ax",%progbits
  18              		.align	1
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv5-sp-d16
  24              	start_pass_upsample:
  25              	.LFB3:
  26              		.file 1 "Middlewares/Third_Party/LibJPEG/source/jdsample.c"
   1:Middlewares/Third_Party/LibJPEG/source/jdsample.c **** /*
   2:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****  * jdsample.c
   3:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****  *
   4:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****  * Copyright (C) 1991-1996, Thomas G. Lane.
   5:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****  * Modified 2002-2008 by Guido Vollbeding.
   6:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****  * This file is part of the Independent JPEG Group's software.
   7:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****  * For conditions of distribution and use, see the accompanying README file.
   8:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****  *
   9:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****  * This file contains upsampling routines.
  10:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****  *
  11:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****  * Upsampling input data is counted in "row groups".  A row group
  12:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****  * is defined to be (v_samp_factor * DCT_v_scaled_size / min_DCT_v_scaled_size)
  13:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****  * sample rows of each component.  Upsampling will normally produce
  14:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****  * max_v_samp_factor pixel rows from each row group (but this could vary
  15:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****  * if the upsampler is applying a scale factor of its own).
  16:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****  *
  17:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****  * An excellent reference for image resampling is
  18:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****  *   Digital Image Warping, George Wolberg, 1990.
  19:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****  *   Pub. by IEEE Computer Society Press, Los Alamitos, CA. ISBN 0-8186-8944-7.
  20:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****  */
  21:Middlewares/Third_Party/LibJPEG/source/jdsample.c **** 
  22:Middlewares/Third_Party/LibJPEG/source/jdsample.c **** #define JPEG_INTERNALS
  23:Middlewares/Third_Party/LibJPEG/source/jdsample.c **** #include "jinclude.h"
  24:Middlewares/Third_Party/LibJPEG/source/jdsample.c **** #include "jpeglib.h"
  25:Middlewares/Third_Party/LibJPEG/source/jdsample.c **** 
  26:Middlewares/Third_Party/LibJPEG/source/jdsample.c **** 
  27:Middlewares/Third_Party/LibJPEG/source/jdsample.c **** /* Pointer to routine to upsample a single component */
  28:Middlewares/Third_Party/LibJPEG/source/jdsample.c **** typedef JMETHOD(void, upsample1_ptr,
  29:Middlewares/Third_Party/LibJPEG/source/jdsample.c **** 		(j_decompress_ptr cinfo, jpeg_component_info * compptr,
  30:Middlewares/Third_Party/LibJPEG/source/jdsample.c **** 		 JSAMPARRAY input_data, JSAMPARRAY * output_data_ptr));
  31:Middlewares/Third_Party/LibJPEG/source/jdsample.c **** 
  32:Middlewares/Third_Party/LibJPEG/source/jdsample.c **** /* Private subobject */
ARM GAS  /tmp/ccArUpBJ.s 			page 2


  33:Middlewares/Third_Party/LibJPEG/source/jdsample.c **** 
  34:Middlewares/Third_Party/LibJPEG/source/jdsample.c **** typedef struct {
  35:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****   struct jpeg_upsampler pub;	/* public fields */
  36:Middlewares/Third_Party/LibJPEG/source/jdsample.c **** 
  37:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****   /* Color conversion buffer.  When using separate upsampling and color
  38:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****    * conversion steps, this buffer holds one upsampled row group until it
  39:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****    * has been color converted and output.
  40:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****    * Note: we do not allocate any storage for component(s) which are full-size,
  41:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****    * ie do not need rescaling.  The corresponding entry of color_buf[] is
  42:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****    * simply set to point to the input data array, thereby avoiding copying.
  43:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****    */
  44:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****   JSAMPARRAY color_buf[MAX_COMPONENTS];
  45:Middlewares/Third_Party/LibJPEG/source/jdsample.c **** 
  46:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****   /* Per-component upsampling method pointers */
  47:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****   upsample1_ptr methods[MAX_COMPONENTS];
  48:Middlewares/Third_Party/LibJPEG/source/jdsample.c **** 
  49:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****   int next_row_out;		/* counts rows emitted from color_buf */
  50:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****   JDIMENSION rows_to_go;	/* counts rows remaining in image */
  51:Middlewares/Third_Party/LibJPEG/source/jdsample.c **** 
  52:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****   /* Height of an input row group for each component. */
  53:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****   int rowgroup_height[MAX_COMPONENTS];
  54:Middlewares/Third_Party/LibJPEG/source/jdsample.c **** 
  55:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****   /* These arrays save pixel expansion factors so that int_expand need not
  56:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****    * recompute them each time.  They are unused for other upsampling methods.
  57:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****    */
  58:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****   UINT8 h_expand[MAX_COMPONENTS];
  59:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****   UINT8 v_expand[MAX_COMPONENTS];
  60:Middlewares/Third_Party/LibJPEG/source/jdsample.c **** } my_upsampler;
  61:Middlewares/Third_Party/LibJPEG/source/jdsample.c **** 
  62:Middlewares/Third_Party/LibJPEG/source/jdsample.c **** typedef my_upsampler * my_upsample_ptr;
  63:Middlewares/Third_Party/LibJPEG/source/jdsample.c **** 
  64:Middlewares/Third_Party/LibJPEG/source/jdsample.c **** 
  65:Middlewares/Third_Party/LibJPEG/source/jdsample.c **** /*
  66:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****  * Initialize for an upsampling pass.
  67:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****  */
  68:Middlewares/Third_Party/LibJPEG/source/jdsample.c **** 
  69:Middlewares/Third_Party/LibJPEG/source/jdsample.c **** METHODDEF(void)
  70:Middlewares/Third_Party/LibJPEG/source/jdsample.c **** start_pass_upsample (j_decompress_ptr cinfo)
  71:Middlewares/Third_Party/LibJPEG/source/jdsample.c **** {
  27              		.loc 1 71 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32              	.LVL0:
  72:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****   my_upsample_ptr upsample = (my_upsample_ptr) cinfo->upsample;
  33              		.loc 1 72 0
  34 0000 D0F8D831 		ldr	r3, [r0, #472]
  35              	.LVL1:
  73:Middlewares/Third_Party/LibJPEG/source/jdsample.c **** 
  74:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****   /* Mark the conversion buffer empty */
  75:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****   upsample->next_row_out = cinfo->max_v_samp_factor;
  36              		.loc 1 75 0
  37 0004 D0F83C21 		ldr	r2, [r0, #316]
  38 0008 DA65     		str	r2, [r3, #92]
  76:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****   /* Initialize total-height counter for detecting bottom of image */
  77:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****   upsample->rows_to_go = cinfo->output_height;
ARM GAS  /tmp/ccArUpBJ.s 			page 3


  39              		.loc 1 77 0
  40 000a 426F     		ldr	r2, [r0, #116]
  41 000c 1A66     		str	r2, [r3, #96]
  78:Middlewares/Third_Party/LibJPEG/source/jdsample.c **** }
  42              		.loc 1 78 0
  43 000e 7047     		bx	lr
  44              		.cfi_endproc
  45              	.LFE3:
  47              		.section	.text.sep_upsample,"ax",%progbits
  48              		.align	1
  49              		.syntax unified
  50              		.thumb
  51              		.thumb_func
  52              		.fpu fpv5-sp-d16
  54              	sep_upsample:
  55              	.LFB4:
  79:Middlewares/Third_Party/LibJPEG/source/jdsample.c **** 
  80:Middlewares/Third_Party/LibJPEG/source/jdsample.c **** 
  81:Middlewares/Third_Party/LibJPEG/source/jdsample.c **** /*
  82:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****  * Control routine to do upsampling (and color conversion).
  83:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****  *
  84:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****  * In this version we upsample each component independently.
  85:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****  * We upsample one row group into the conversion buffer, then apply
  86:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****  * color conversion a row at a time.
  87:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****  */
  88:Middlewares/Third_Party/LibJPEG/source/jdsample.c **** 
  89:Middlewares/Third_Party/LibJPEG/source/jdsample.c **** METHODDEF(void)
  90:Middlewares/Third_Party/LibJPEG/source/jdsample.c **** sep_upsample (j_decompress_ptr cinfo,
  91:Middlewares/Third_Party/LibJPEG/source/jdsample.c **** 	      JSAMPIMAGE input_buf, JDIMENSION *in_row_group_ctr,
  92:Middlewares/Third_Party/LibJPEG/source/jdsample.c **** 	      JDIMENSION in_row_groups_avail,
  93:Middlewares/Third_Party/LibJPEG/source/jdsample.c **** 	      JSAMPARRAY output_buf, JDIMENSION *out_row_ctr,
  94:Middlewares/Third_Party/LibJPEG/source/jdsample.c **** 	      JDIMENSION out_rows_avail)
  95:Middlewares/Third_Party/LibJPEG/source/jdsample.c **** {
  56              		.loc 1 95 0
  57              		.cfi_startproc
  58              		@ args = 12, pretend = 0, frame = 0
  59              		@ frame_needed = 0, uses_anonymous_args = 0
  60              	.LVL2:
  61 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
  62              	.LCFI0:
  63              		.cfi_def_cfa_offset 36
  64              		.cfi_offset 4, -36
  65              		.cfi_offset 5, -32
  66              		.cfi_offset 6, -28
  67              		.cfi_offset 7, -24
  68              		.cfi_offset 8, -20
  69              		.cfi_offset 9, -16
  70              		.cfi_offset 10, -12
  71              		.cfi_offset 11, -8
  72              		.cfi_offset 14, -4
  73 0004 83B0     		sub	sp, sp, #12
  74              	.LCFI1:
  75              		.cfi_def_cfa_offset 48
  76 0006 0646     		mov	r6, r0
  77 0008 9146     		mov	r9, r2
  78 000a DDF834A0 		ldr	r10, [sp, #52]
  96:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****   my_upsample_ptr upsample = (my_upsample_ptr) cinfo->upsample;
ARM GAS  /tmp/ccArUpBJ.s 			page 4


  79              		.loc 1 96 0
  80 000e D0F8D851 		ldr	r5, [r0, #472]
  81              	.LVL3:
  97:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****   int ci;
  98:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****   jpeg_component_info * compptr;
  99:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****   JDIMENSION num_rows;
 100:Middlewares/Third_Party/LibJPEG/source/jdsample.c **** 
 101:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****   /* Fill the conversion buffer, if it's empty */
 102:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****   if (upsample->next_row_out >= cinfo->max_v_samp_factor) {
  82              		.loc 1 102 0
  83 0012 EA6D     		ldr	r2, [r5, #92]
  84              	.LVL4:
  85 0014 D0F83C31 		ldr	r3, [r0, #316]
  86              	.LVL5:
  87 0018 9A42     		cmp	r2, r3
  88 001a 25DB     		blt	.L3
  89 001c 8B46     		mov	fp, r1
  90              	.LVL6:
 103:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****     for (ci = 0, compptr = cinfo->comp_info; ci < cinfo->num_components;
  91              		.loc 1 103 0
  92 001e D0F8D870 		ldr	r7, [r0, #216]
  93              	.LVL7:
  94 0022 0024     		movs	r4, #0
  95 0024 1BE0     		b	.L4
  96              	.LVL8:
  97              	.L5:
 104:Middlewares/Third_Party/LibJPEG/source/jdsample.c **** 	 ci++, compptr++) {
 105:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****       /* Invoke per-component upsample method.  Notice we pass a POINTER
 106:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****        * to color_buf[ci], so that fullsize_upsample can change it.
 107:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****        */
 108:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****       (*upsample->methods[ci]) (cinfo, compptr,
 109:Middlewares/Third_Party/LibJPEG/source/jdsample.c **** 	input_buf[ci] + (*in_row_group_ctr * upsample->rowgroup_height[ci]),
  98              		.loc 1 109 0
  99 0026 5BF82410 		ldr	r1, [fp, r4, lsl #2]
 100 002a D9F80020 		ldr	r2, [r9]
 101 002e 04F11803 		add	r3, r4, #24
 102 0032 05EB8303 		add	r3, r5, r3, lsl #2
 103 0036 5B68     		ldr	r3, [r3, #4]
 104 0038 03FB02F2 		mul	r2, r3, r2
 110:Middlewares/Third_Party/LibJPEG/source/jdsample.c **** 	upsample->color_buf + ci);
 105              		.loc 1 110 0
 106 003c 05F10C03 		add	r3, r5, #12
 108:Middlewares/Third_Party/LibJPEG/source/jdsample.c **** 	input_buf[ci] + (*in_row_group_ctr * upsample->rowgroup_height[ci]),
 107              		.loc 1 108 0
 108 0040 04F10C00 		add	r0, r4, #12
 109 0044 05EB8000 		add	r0, r5, r0, lsl #2
 110 0048 D0F80480 		ldr	r8, [r0, #4]
 111 004c 03EB8403 		add	r3, r3, r4, lsl #2
 112 0050 01EB8202 		add	r2, r1, r2, lsl #2
 113 0054 3946     		mov	r1, r7
 114 0056 3046     		mov	r0, r6
 115 0058 C047     		blx	r8
 116              	.LVL9:
 104:Middlewares/Third_Party/LibJPEG/source/jdsample.c **** 	 ci++, compptr++) {
 117              		.loc 1 104 0
 118 005a 0134     		adds	r4, r4, #1
 119              	.LVL10:
ARM GAS  /tmp/ccArUpBJ.s 			page 5


 120 005c 5837     		adds	r7, r7, #88
 121              	.LVL11:
 122              	.L4:
 103:Middlewares/Third_Party/LibJPEG/source/jdsample.c **** 	 ci++, compptr++) {
 123              		.loc 1 103 0 discriminator 1
 124 005e 736A     		ldr	r3, [r6, #36]
 125 0060 A342     		cmp	r3, r4
 126 0062 E0DC     		bgt	.L5
 111:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****     }
 112:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****     upsample->next_row_out = 0;
 127              		.loc 1 112 0
 128 0064 0023     		movs	r3, #0
 129 0066 EB65     		str	r3, [r5, #92]
 130              	.LVL12:
 131              	.L3:
 113:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****   }
 114:Middlewares/Third_Party/LibJPEG/source/jdsample.c **** 
 115:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****   /* Color-convert and emit rows */
 116:Middlewares/Third_Party/LibJPEG/source/jdsample.c **** 
 117:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****   /* How many we have in the buffer: */
 118:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****   num_rows = (JDIMENSION) (cinfo->max_v_samp_factor - upsample->next_row_out);
 132              		.loc 1 118 0
 133 0068 D6F83C31 		ldr	r3, [r6, #316]
 134 006c EA6D     		ldr	r2, [r5, #92]
 135 006e 9B1A     		subs	r3, r3, r2
 136              	.LVL13:
 119:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****   /* Not more than the distance to the end of the image.  Need this test
 120:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****    * in case the image height is not a multiple of max_v_samp_factor:
 121:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****    */
 122:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****   if (num_rows > upsample->rows_to_go) 
 137              		.loc 1 122 0
 138 0070 296E     		ldr	r1, [r5, #96]
 139 0072 9942     		cmp	r1, r3
 140 0074 00D3     		bcc	.L6
 118:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****   /* Not more than the distance to the end of the image.  Need this test
 141              		.loc 1 118 0
 142 0076 1946     		mov	r1, r3
 143              	.L6:
 144              	.LVL14:
 123:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****     num_rows = upsample->rows_to_go;
 124:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****   /* And not more than what the client can accept: */
 125:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****   out_rows_avail -= *out_row_ctr;
 145              		.loc 1 125 0
 146 0078 DAF80030 		ldr	r3, [r10]
 147 007c 0E9C     		ldr	r4, [sp, #56]
 148 007e E41A     		subs	r4, r4, r3
 149              	.LVL15:
 126:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****   if (num_rows > out_rows_avail)
 150              		.loc 1 126 0
 151 0080 A142     		cmp	r1, r4
 152 0082 00D8     		bhi	.L7
 153 0084 0C46     		mov	r4, r1
 154              	.LVL16:
 155              	.L7:
 127:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****     num_rows = out_rows_avail;
 128:Middlewares/Third_Party/LibJPEG/source/jdsample.c **** 
 129:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****   (*cinfo->cconvert->color_convert) (cinfo, upsample->color_buf,
ARM GAS  /tmp/ccArUpBJ.s 			page 6


 156              		.loc 1 129 0
 157 0086 D6F8DC11 		ldr	r1, [r6, #476]
 158 008a 0094     		str	r4, [sp]
 159 008c 4F68     		ldr	r7, [r1, #4]
 160 008e 0C99     		ldr	r1, [sp, #48]
 161 0090 01EB8303 		add	r3, r1, r3, lsl #2
 162              	.LVL17:
 163 0094 05F10C01 		add	r1, r5, #12
 164 0098 3046     		mov	r0, r6
 165 009a B847     		blx	r7
 166              	.LVL18:
 130:Middlewares/Third_Party/LibJPEG/source/jdsample.c **** 				     (JDIMENSION) upsample->next_row_out,
 131:Middlewares/Third_Party/LibJPEG/source/jdsample.c **** 				     output_buf + *out_row_ctr,
 132:Middlewares/Third_Party/LibJPEG/source/jdsample.c **** 				     (int) num_rows);
 133:Middlewares/Third_Party/LibJPEG/source/jdsample.c **** 
 134:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****   /* Adjust counts */
 135:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****   *out_row_ctr += num_rows;
 167              		.loc 1 135 0
 168 009c DAF80030 		ldr	r3, [r10]
 169 00a0 2344     		add	r3, r3, r4
 170 00a2 CAF80030 		str	r3, [r10]
 136:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****   upsample->rows_to_go -= num_rows;
 171              		.loc 1 136 0
 172 00a6 2B6E     		ldr	r3, [r5, #96]
 173 00a8 1B1B     		subs	r3, r3, r4
 174 00aa 2B66     		str	r3, [r5, #96]
 137:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****   upsample->next_row_out += num_rows;
 175              		.loc 1 137 0
 176 00ac EB6D     		ldr	r3, [r5, #92]
 177 00ae 1C44     		add	r4, r4, r3
 178              	.LVL19:
 179 00b0 EC65     		str	r4, [r5, #92]
 138:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****   /* When the buffer is emptied, declare this input row group consumed */
 139:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****   if (upsample->next_row_out >= cinfo->max_v_samp_factor)
 180              		.loc 1 139 0
 181 00b2 D6F83C31 		ldr	r3, [r6, #316]
 182 00b6 9C42     		cmp	r4, r3
 183 00b8 04DB     		blt	.L2
 140:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****     (*in_row_group_ctr)++;
 184              		.loc 1 140 0
 185 00ba D9F80030 		ldr	r3, [r9]
 186 00be 0133     		adds	r3, r3, #1
 187 00c0 C9F80030 		str	r3, [r9]
 188              	.L2:
 141:Middlewares/Third_Party/LibJPEG/source/jdsample.c **** }
 189              		.loc 1 141 0
 190 00c4 03B0     		add	sp, sp, #12
 191              	.LCFI2:
 192              		.cfi_def_cfa_offset 36
 193              		@ sp needed
 194 00c6 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 195              		.cfi_endproc
 196              	.LFE4:
 198              		.section	.text.fullsize_upsample,"ax",%progbits
 199              		.align	1
 200              		.syntax unified
 201              		.thumb
ARM GAS  /tmp/ccArUpBJ.s 			page 7


 202              		.thumb_func
 203              		.fpu fpv5-sp-d16
 205              	fullsize_upsample:
 206              	.LFB5:
 142:Middlewares/Third_Party/LibJPEG/source/jdsample.c **** 
 143:Middlewares/Third_Party/LibJPEG/source/jdsample.c **** 
 144:Middlewares/Third_Party/LibJPEG/source/jdsample.c **** /*
 145:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****  * These are the routines invoked by sep_upsample to upsample pixel values
 146:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****  * of a single component.  One row group is processed per call.
 147:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****  */
 148:Middlewares/Third_Party/LibJPEG/source/jdsample.c **** 
 149:Middlewares/Third_Party/LibJPEG/source/jdsample.c **** 
 150:Middlewares/Third_Party/LibJPEG/source/jdsample.c **** /*
 151:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****  * For full-size components, we just make color_buf[ci] point at the
 152:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****  * input buffer, and thus avoid copying any data.  Note that this is
 153:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****  * safe only because sep_upsample doesn't declare the input row group
 154:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****  * "consumed" until we are done color converting and emitting it.
 155:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****  */
 156:Middlewares/Third_Party/LibJPEG/source/jdsample.c **** 
 157:Middlewares/Third_Party/LibJPEG/source/jdsample.c **** METHODDEF(void)
 158:Middlewares/Third_Party/LibJPEG/source/jdsample.c **** fullsize_upsample (j_decompress_ptr cinfo, jpeg_component_info * compptr,
 159:Middlewares/Third_Party/LibJPEG/source/jdsample.c **** 		   JSAMPARRAY input_data, JSAMPARRAY * output_data_ptr)
 160:Middlewares/Third_Party/LibJPEG/source/jdsample.c **** {
 207              		.loc 1 160 0
 208              		.cfi_startproc
 209              		@ args = 0, pretend = 0, frame = 0
 210              		@ frame_needed = 0, uses_anonymous_args = 0
 211              		@ link register save eliminated.
 212              	.LVL20:
 161:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****   *output_data_ptr = input_data;
 213              		.loc 1 161 0
 214 0000 1A60     		str	r2, [r3]
 162:Middlewares/Third_Party/LibJPEG/source/jdsample.c **** }
 215              		.loc 1 162 0
 216 0002 7047     		bx	lr
 217              		.cfi_endproc
 218              	.LFE5:
 220              		.section	.text.noop_upsample,"ax",%progbits
 221              		.align	1
 222              		.syntax unified
 223              		.thumb
 224              		.thumb_func
 225              		.fpu fpv5-sp-d16
 227              	noop_upsample:
 228              	.LFB6:
 163:Middlewares/Third_Party/LibJPEG/source/jdsample.c **** 
 164:Middlewares/Third_Party/LibJPEG/source/jdsample.c **** 
 165:Middlewares/Third_Party/LibJPEG/source/jdsample.c **** /*
 166:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****  * This is a no-op version used for "uninteresting" components.
 167:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****  * These components will not be referenced by color conversion.
 168:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****  */
 169:Middlewares/Third_Party/LibJPEG/source/jdsample.c **** 
 170:Middlewares/Third_Party/LibJPEG/source/jdsample.c **** METHODDEF(void)
 171:Middlewares/Third_Party/LibJPEG/source/jdsample.c **** noop_upsample (j_decompress_ptr cinfo, jpeg_component_info * compptr,
 172:Middlewares/Third_Party/LibJPEG/source/jdsample.c **** 	       JSAMPARRAY input_data, JSAMPARRAY * output_data_ptr)
 173:Middlewares/Third_Party/LibJPEG/source/jdsample.c **** {
 229              		.loc 1 173 0
ARM GAS  /tmp/ccArUpBJ.s 			page 8


 230              		.cfi_startproc
 231              		@ args = 0, pretend = 0, frame = 0
 232              		@ frame_needed = 0, uses_anonymous_args = 0
 233              		@ link register save eliminated.
 234              	.LVL21:
 174:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****   *output_data_ptr = NULL;	/* safety check */
 235              		.loc 1 174 0
 236 0000 0022     		movs	r2, #0
 237              	.LVL22:
 238 0002 1A60     		str	r2, [r3]
 175:Middlewares/Third_Party/LibJPEG/source/jdsample.c **** }
 239              		.loc 1 175 0
 240 0004 7047     		bx	lr
 241              		.cfi_endproc
 242              	.LFE6:
 244              		.section	.text.h2v1_upsample,"ax",%progbits
 245              		.align	1
 246              		.syntax unified
 247              		.thumb
 248              		.thumb_func
 249              		.fpu fpv5-sp-d16
 251              	h2v1_upsample:
 252              	.LFB8:
 176:Middlewares/Third_Party/LibJPEG/source/jdsample.c **** 
 177:Middlewares/Third_Party/LibJPEG/source/jdsample.c **** 
 178:Middlewares/Third_Party/LibJPEG/source/jdsample.c **** /*
 179:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****  * This version handles any integral sampling ratios.
 180:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****  * This is not used for typical JPEG files, so it need not be fast.
 181:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****  * Nor, for that matter, is it particularly accurate: the algorithm is
 182:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****  * simple replication of the input pixel onto the corresponding output
 183:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****  * pixels.  The hi-falutin sampling literature refers to this as a
 184:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****  * "box filter".  A box filter tends to introduce visible artifacts,
 185:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****  * so if you are actually going to use 3:1 or 4:1 sampling ratios
 186:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****  * you would be well advised to improve this code.
 187:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****  */
 188:Middlewares/Third_Party/LibJPEG/source/jdsample.c **** 
 189:Middlewares/Third_Party/LibJPEG/source/jdsample.c **** METHODDEF(void)
 190:Middlewares/Third_Party/LibJPEG/source/jdsample.c **** int_upsample (j_decompress_ptr cinfo, jpeg_component_info * compptr,
 191:Middlewares/Third_Party/LibJPEG/source/jdsample.c **** 	      JSAMPARRAY input_data, JSAMPARRAY * output_data_ptr)
 192:Middlewares/Third_Party/LibJPEG/source/jdsample.c **** {
 193:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****   my_upsample_ptr upsample = (my_upsample_ptr) cinfo->upsample;
 194:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****   JSAMPARRAY output_data = *output_data_ptr;
 195:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****   register JSAMPROW inptr, outptr;
 196:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****   register JSAMPLE invalue;
 197:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****   register int h;
 198:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****   JSAMPROW outend;
 199:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****   int h_expand, v_expand;
 200:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****   int inrow, outrow;
 201:Middlewares/Third_Party/LibJPEG/source/jdsample.c **** 
 202:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****   h_expand = upsample->h_expand[compptr->component_index];
 203:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****   v_expand = upsample->v_expand[compptr->component_index];
 204:Middlewares/Third_Party/LibJPEG/source/jdsample.c **** 
 205:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****   inrow = outrow = 0;
 206:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****   while (outrow < cinfo->max_v_samp_factor) {
 207:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****     /* Generate one output row with proper horizontal expansion */
 208:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****     inptr = input_data[inrow];
 209:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****     outptr = output_data[outrow];
ARM GAS  /tmp/ccArUpBJ.s 			page 9


 210:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****     outend = outptr + cinfo->output_width;
 211:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****     while (outptr < outend) {
 212:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****       invalue = *inptr++;	/* don't need GETJSAMPLE() here */
 213:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****       for (h = h_expand; h > 0; h--) {
 214:Middlewares/Third_Party/LibJPEG/source/jdsample.c **** 	*outptr++ = invalue;
 215:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****       }
 216:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****     }
 217:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****     /* Generate any additional output rows by duplicating the first one */
 218:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****     if (v_expand > 1) {
 219:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****       jcopy_sample_rows(output_data, outrow, output_data, outrow+1,
 220:Middlewares/Third_Party/LibJPEG/source/jdsample.c **** 			v_expand-1, cinfo->output_width);
 221:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****     }
 222:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****     inrow++;
 223:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****     outrow += v_expand;
 224:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****   }
 225:Middlewares/Third_Party/LibJPEG/source/jdsample.c **** }
 226:Middlewares/Third_Party/LibJPEG/source/jdsample.c **** 
 227:Middlewares/Third_Party/LibJPEG/source/jdsample.c **** 
 228:Middlewares/Third_Party/LibJPEG/source/jdsample.c **** /*
 229:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****  * Fast processing for the common case of 2:1 horizontal and 1:1 vertical.
 230:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****  * It's still a box filter.
 231:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****  */
 232:Middlewares/Third_Party/LibJPEG/source/jdsample.c **** 
 233:Middlewares/Third_Party/LibJPEG/source/jdsample.c **** METHODDEF(void)
 234:Middlewares/Third_Party/LibJPEG/source/jdsample.c **** h2v1_upsample (j_decompress_ptr cinfo, jpeg_component_info * compptr,
 235:Middlewares/Third_Party/LibJPEG/source/jdsample.c **** 	       JSAMPARRAY input_data, JSAMPARRAY * output_data_ptr)
 236:Middlewares/Third_Party/LibJPEG/source/jdsample.c **** {
 253              		.loc 1 236 0
 254              		.cfi_startproc
 255              		@ args = 0, pretend = 0, frame = 0
 256              		@ frame_needed = 0, uses_anonymous_args = 0
 257              		@ link register save eliminated.
 258              	.LVL23:
 259 0000 F0B4     		push	{r4, r5, r6, r7}
 260              	.LCFI3:
 261              		.cfi_def_cfa_offset 16
 262              		.cfi_offset 4, -16
 263              		.cfi_offset 5, -12
 264              		.cfi_offset 6, -8
 265              		.cfi_offset 7, -4
 237:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****   JSAMPARRAY output_data = *output_data_ptr;
 266              		.loc 1 237 0
 267 0002 D3F800C0 		ldr	ip, [r3]
 268              	.LVL24:
 238:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****   register JSAMPROW inptr, outptr;
 239:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****   register JSAMPLE invalue;
 240:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****   JSAMPROW outend;
 241:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****   int outrow;
 242:Middlewares/Third_Party/LibJPEG/source/jdsample.c **** 
 243:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****   for (outrow = 0; outrow < cinfo->max_v_samp_factor; outrow++) {
 269              		.loc 1 243 0
 270 0006 0027     		movs	r7, #0
 271 0008 09E0     		b	.L13
 272              	.LVL25:
 273              	.L15:
 244:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****     inptr = input_data[outrow];
 245:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****     outptr = output_data[outrow];
ARM GAS  /tmp/ccArUpBJ.s 			page 10


 246:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****     outend = outptr + cinfo->output_width;
 247:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****     while (outptr < outend) {
 248:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****       invalue = *inptr++;	/* don't need GETJSAMPLE() here */
 274              		.loc 1 248 0
 275 000a 2578     		ldrb	r5, [r4]	@ zero_extendqisi2
 276              	.LVL26:
 249:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****       *outptr++ = invalue;
 277              		.loc 1 249 0
 278 000c 1946     		mov	r1, r3
 279 000e 01F8025B 		strb	r5, [r1], #2
 280              	.LVL27:
 250:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****       *outptr++ = invalue;
 281              		.loc 1 250 0
 282 0012 5D70     		strb	r5, [r3, #1]
 283 0014 0B46     		mov	r3, r1
 248:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****       *outptr++ = invalue;
 284              		.loc 1 248 0
 285 0016 0134     		adds	r4, r4, #1
 286              	.LVL28:
 287              	.L14:
 247:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****       invalue = *inptr++;	/* don't need GETJSAMPLE() here */
 288              		.loc 1 247 0
 289 0018 B342     		cmp	r3, r6
 290 001a F6D3     		bcc	.L15
 243:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****     inptr = input_data[outrow];
 291              		.loc 1 243 0 discriminator 2
 292 001c 0137     		adds	r7, r7, #1
 293              	.LVL29:
 294              	.L13:
 243:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****     inptr = input_data[outrow];
 295              		.loc 1 243 0 is_stmt 0 discriminator 1
 296 001e D0F83C31 		ldr	r3, [r0, #316]
 297 0022 BB42     		cmp	r3, r7
 298 0024 06DD     		ble	.L18
 244:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****     outptr = output_data[outrow];
 299              		.loc 1 244 0 is_stmt 1
 300 0026 52F82740 		ldr	r4, [r2, r7, lsl #2]
 301              	.LVL30:
 245:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****     outend = outptr + cinfo->output_width;
 302              		.loc 1 245 0
 303 002a 5CF82730 		ldr	r3, [ip, r7, lsl #2]
 304              	.LVL31:
 246:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****     while (outptr < outend) {
 305              		.loc 1 246 0
 306 002e 066F     		ldr	r6, [r0, #112]
 307 0030 1E44     		add	r6, r6, r3
 308              	.LVL32:
 247:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****       invalue = *inptr++;	/* don't need GETJSAMPLE() here */
 309              		.loc 1 247 0
 310 0032 F1E7     		b	.L14
 311              	.LVL33:
 312              	.L18:
 251:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****     }
 252:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****   }
 253:Middlewares/Third_Party/LibJPEG/source/jdsample.c **** }
 313              		.loc 1 253 0
 314 0034 F0BC     		pop	{r4, r5, r6, r7}
ARM GAS  /tmp/ccArUpBJ.s 			page 11


 315              	.LCFI4:
 316              		.cfi_restore 7
 317              		.cfi_restore 6
 318              		.cfi_restore 5
 319              		.cfi_restore 4
 320              		.cfi_def_cfa_offset 0
 321              	.LVL34:
 322 0036 7047     		bx	lr
 323              		.cfi_endproc
 324              	.LFE8:
 326              		.section	.text.int_upsample,"ax",%progbits
 327              		.align	1
 328              		.syntax unified
 329              		.thumb
 330              		.thumb_func
 331              		.fpu fpv5-sp-d16
 333              	int_upsample:
 334              	.LFB7:
 192:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****   my_upsample_ptr upsample = (my_upsample_ptr) cinfo->upsample;
 335              		.loc 1 192 0
 336              		.cfi_startproc
 337              		@ args = 0, pretend = 0, frame = 0
 338              		@ frame_needed = 0, uses_anonymous_args = 0
 339              	.LVL35:
 340 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 341              	.LCFI5:
 342              		.cfi_def_cfa_offset 32
 343              		.cfi_offset 4, -32
 344              		.cfi_offset 5, -28
 345              		.cfi_offset 6, -24
 346              		.cfi_offset 7, -20
 347              		.cfi_offset 8, -16
 348              		.cfi_offset 9, -12
 349              		.cfi_offset 10, -8
 350              		.cfi_offset 14, -4
 351 0004 82B0     		sub	sp, sp, #8
 352              	.LCFI6:
 353              		.cfi_def_cfa_offset 40
 354 0006 0746     		mov	r7, r0
 355 0008 9246     		mov	r10, r2
 193:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****   JSAMPARRAY output_data = *output_data_ptr;
 356              		.loc 1 193 0
 357 000a D0F8D821 		ldr	r2, [r0, #472]
 358              	.LVL36:
 194:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****   register JSAMPROW inptr, outptr;
 359              		.loc 1 194 0
 360 000e D3F80090 		ldr	r9, [r3]
 361              	.LVL37:
 202:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****   v_expand = upsample->v_expand[compptr->component_index];
 362              		.loc 1 202 0
 363 0012 4B68     		ldr	r3, [r1, #4]
 364              	.LVL38:
 365 0014 1344     		add	r3, r3, r2
 366 0016 93F88C40 		ldrb	r4, [r3, #140]	@ zero_extendqisi2
 367              	.LVL39:
 203:Middlewares/Third_Party/LibJPEG/source/jdsample.c **** 
 368              		.loc 1 203 0
ARM GAS  /tmp/ccArUpBJ.s 			page 12


 369 001a 93F89680 		ldrb	r8, [r3, #150]	@ zero_extendqisi2
 370              	.LVL40:
 205:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****   while (outrow < cinfo->max_v_samp_factor) {
 371              		.loc 1 205 0
 372 001e 0025     		movs	r5, #0
 373 0020 2E46     		mov	r6, r5
 206:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****     /* Generate one output row with proper horizontal expansion */
 374              		.loc 1 206 0
 375 0022 10E0     		b	.L20
 376              	.LVL41:
 377              	.L23:
 214:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****       }
 378              		.loc 1 214 0 discriminator 3
 379 0024 1170     		strb	r1, [r2]
 213:Middlewares/Third_Party/LibJPEG/source/jdsample.c **** 	*outptr++ = invalue;
 380              		.loc 1 213 0 discriminator 3
 381 0026 013B     		subs	r3, r3, #1
 382              	.LVL42:
 214:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****       }
 383              		.loc 1 214 0 discriminator 3
 384 0028 0132     		adds	r2, r2, #1
 385              	.LVL43:
 386              	.L22:
 213:Middlewares/Third_Party/LibJPEG/source/jdsample.c **** 	*outptr++ = invalue;
 387              		.loc 1 213 0 discriminator 1
 388 002a 002B     		cmp	r3, #0
 389 002c FADC     		bgt	.L23
 212:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****       for (h = h_expand; h > 0; h--) {
 390              		.loc 1 212 0
 391 002e 0346     		mov	r3, r0
 392              	.LVL44:
 393              	.L21:
 211:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****       invalue = *inptr++;	/* don't need GETJSAMPLE() here */
 394              		.loc 1 211 0
 395 0030 6245     		cmp	r2, ip
 396 0032 03D2     		bcs	.L28
 212:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****       for (h = h_expand; h > 0; h--) {
 397              		.loc 1 212 0
 398 0034 581C     		adds	r0, r3, #1
 399              	.LVL45:
 400 0036 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 401              	.LVL46:
 213:Middlewares/Third_Party/LibJPEG/source/jdsample.c **** 	*outptr++ = invalue;
 402              		.loc 1 213 0
 403 0038 2346     		mov	r3, r4
 404 003a F6E7     		b	.L22
 405              	.LVL47:
 406              	.L28:
 218:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****       jcopy_sample_rows(output_data, outrow, output_data, outrow+1,
 407              		.loc 1 218 0
 408 003c B8F1010F 		cmp	r8, #1
 409 0040 0DDC     		bgt	.L29
 410              	.LVL48:
 411              	.L25:
 222:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****     outrow += v_expand;
 412              		.loc 1 222 0
 413 0042 0136     		adds	r6, r6, #1
ARM GAS  /tmp/ccArUpBJ.s 			page 13


 414              	.LVL49:
 223:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****   }
 415              		.loc 1 223 0
 416 0044 4544     		add	r5, r5, r8
 417              	.LVL50:
 418              	.L20:
 206:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****     /* Generate one output row with proper horizontal expansion */
 419              		.loc 1 206 0
 420 0046 D7F83C31 		ldr	r3, [r7, #316]
 421 004a AB42     		cmp	r3, r5
 422 004c 13DD     		ble	.L30
 208:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****     outptr = output_data[outrow];
 423              		.loc 1 208 0
 424 004e 5AF82630 		ldr	r3, [r10, r6, lsl #2]
 425              	.LVL51:
 209:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****     outend = outptr + cinfo->output_width;
 426              		.loc 1 209 0
 427 0052 59F82520 		ldr	r2, [r9, r5, lsl #2]
 428              	.LVL52:
 210:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****     while (outptr < outend) {
 429              		.loc 1 210 0
 430 0056 396F     		ldr	r1, [r7, #112]
 431 0058 02EB010C 		add	ip, r2, r1
 432              	.LVL53:
 211:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****       invalue = *inptr++;	/* don't need GETJSAMPLE() here */
 433              		.loc 1 211 0
 434 005c E8E7     		b	.L21
 435              	.L29:
 219:Middlewares/Third_Party/LibJPEG/source/jdsample.c **** 			v_expand-1, cinfo->output_width);
 436              		.loc 1 219 0
 437 005e 3B6F     		ldr	r3, [r7, #112]
 438              	.LVL54:
 439 0060 0193     		str	r3, [sp, #4]
 440 0062 08F1FF33 		add	r3, r8, #-1
 441 0066 0093     		str	r3, [sp]
 442 0068 6B1C     		adds	r3, r5, #1
 443 006a 4A46     		mov	r2, r9
 444              	.LVL55:
 445 006c 2946     		mov	r1, r5
 446 006e 4846     		mov	r0, r9
 447 0070 FFF7FEFF 		bl	jcopy_sample_rows
 448              	.LVL56:
 449 0074 E5E7     		b	.L25
 450              	.L30:
 225:Middlewares/Third_Party/LibJPEG/source/jdsample.c **** 
 451              		.loc 1 225 0
 452 0076 02B0     		add	sp, sp, #8
 453              	.LCFI7:
 454              		.cfi_def_cfa_offset 32
 455              		@ sp needed
 456 0078 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 457              		.cfi_endproc
 458              	.LFE7:
 460              		.section	.text.h2v2_upsample,"ax",%progbits
 461              		.align	1
 462              		.syntax unified
 463              		.thumb
ARM GAS  /tmp/ccArUpBJ.s 			page 14


 464              		.thumb_func
 465              		.fpu fpv5-sp-d16
 467              	h2v2_upsample:
 468              	.LFB9:
 254:Middlewares/Third_Party/LibJPEG/source/jdsample.c **** 
 255:Middlewares/Third_Party/LibJPEG/source/jdsample.c **** 
 256:Middlewares/Third_Party/LibJPEG/source/jdsample.c **** /*
 257:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****  * Fast processing for the common case of 2:1 horizontal and 2:1 vertical.
 258:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****  * It's still a box filter.
 259:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****  */
 260:Middlewares/Third_Party/LibJPEG/source/jdsample.c **** 
 261:Middlewares/Third_Party/LibJPEG/source/jdsample.c **** METHODDEF(void)
 262:Middlewares/Third_Party/LibJPEG/source/jdsample.c **** h2v2_upsample (j_decompress_ptr cinfo, jpeg_component_info * compptr,
 263:Middlewares/Third_Party/LibJPEG/source/jdsample.c **** 	       JSAMPARRAY input_data, JSAMPARRAY * output_data_ptr)
 264:Middlewares/Third_Party/LibJPEG/source/jdsample.c **** {
 469              		.loc 1 264 0
 470              		.cfi_startproc
 471              		@ args = 0, pretend = 0, frame = 0
 472              		@ frame_needed = 0, uses_anonymous_args = 0
 473              	.LVL57:
 474 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 475              	.LCFI8:
 476              		.cfi_def_cfa_offset 24
 477              		.cfi_offset 4, -24
 478              		.cfi_offset 5, -20
 479              		.cfi_offset 6, -16
 480              		.cfi_offset 7, -12
 481              		.cfi_offset 8, -8
 482              		.cfi_offset 14, -4
 483 0004 82B0     		sub	sp, sp, #8
 484              	.LCFI9:
 485              		.cfi_def_cfa_offset 32
 486 0006 0546     		mov	r5, r0
 487 0008 9046     		mov	r8, r2
 265:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****   JSAMPARRAY output_data = *output_data_ptr;
 488              		.loc 1 265 0
 489 000a 1F68     		ldr	r7, [r3]
 490              	.LVL58:
 266:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****   register JSAMPROW inptr, outptr;
 267:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****   register JSAMPLE invalue;
 268:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****   JSAMPROW outend;
 269:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****   int inrow, outrow;
 270:Middlewares/Third_Party/LibJPEG/source/jdsample.c **** 
 271:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****   inrow = outrow = 0;
 491              		.loc 1 271 0
 492 000c 0024     		movs	r4, #0
 493 000e 2646     		mov	r6, r4
 272:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****   while (outrow < cinfo->max_v_samp_factor) {
 494              		.loc 1 272 0
 495 0010 14E0     		b	.L32
 496              	.LVL59:
 497              	.L34:
 273:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****     inptr = input_data[inrow];
 274:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****     outptr = output_data[outrow];
 275:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****     outend = outptr + cinfo->output_width;
 276:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****     while (outptr < outend) {
 277:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****       invalue = *inptr++;	/* don't need GETJSAMPLE() here */
ARM GAS  /tmp/ccArUpBJ.s 			page 15


 498              		.loc 1 277 0
 499 0012 0878     		ldrb	r0, [r1]	@ zero_extendqisi2
 500              	.LVL60:
 278:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****       *outptr++ = invalue;
 501              		.loc 1 278 0
 502 0014 1A46     		mov	r2, r3
 503 0016 02F8020B 		strb	r0, [r2], #2
 504              	.LVL61:
 279:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****       *outptr++ = invalue;
 505              		.loc 1 279 0
 506 001a 5870     		strb	r0, [r3, #1]
 507 001c 1346     		mov	r3, r2
 277:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****       *outptr++ = invalue;
 508              		.loc 1 277 0
 509 001e 0131     		adds	r1, r1, #1
 510              	.LVL62:
 511              	.L33:
 276:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****       invalue = *inptr++;	/* don't need GETJSAMPLE() here */
 512              		.loc 1 276 0
 513 0020 6345     		cmp	r3, ip
 514 0022 F6D3     		bcc	.L34
 280:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****     }
 281:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****     jcopy_sample_rows(output_data, outrow, output_data, outrow+1,
 515              		.loc 1 281 0
 516 0024 2B6F     		ldr	r3, [r5, #112]
 517              	.LVL63:
 518 0026 0193     		str	r3, [sp, #4]
 519 0028 0123     		movs	r3, #1
 520 002a 0093     		str	r3, [sp]
 521 002c E318     		adds	r3, r4, r3
 522 002e 3A46     		mov	r2, r7
 523 0030 2146     		mov	r1, r4
 524              	.LVL64:
 525 0032 3846     		mov	r0, r7
 526 0034 FFF7FEFF 		bl	jcopy_sample_rows
 527              	.LVL65:
 282:Middlewares/Third_Party/LibJPEG/source/jdsample.c **** 		      1, cinfo->output_width);
 283:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****     inrow++;
 528              		.loc 1 283 0
 529 0038 0136     		adds	r6, r6, #1
 530              	.LVL66:
 284:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****     outrow += 2;
 531              		.loc 1 284 0
 532 003a 0234     		adds	r4, r4, #2
 533              	.LVL67:
 534              	.L32:
 272:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****     inptr = input_data[inrow];
 535              		.loc 1 272 0
 536 003c D5F83C31 		ldr	r3, [r5, #316]
 537 0040 A342     		cmp	r3, r4
 538 0042 07DD     		ble	.L37
 273:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****     outptr = output_data[outrow];
 539              		.loc 1 273 0
 540 0044 58F82610 		ldr	r1, [r8, r6, lsl #2]
 541              	.LVL68:
 274:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****     outend = outptr + cinfo->output_width;
 542              		.loc 1 274 0
ARM GAS  /tmp/ccArUpBJ.s 			page 16


 543 0048 57F82430 		ldr	r3, [r7, r4, lsl #2]
 544              	.LVL69:
 275:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****     while (outptr < outend) {
 545              		.loc 1 275 0
 546 004c 2A6F     		ldr	r2, [r5, #112]
 547 004e 03EB020C 		add	ip, r3, r2
 548              	.LVL70:
 276:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****       invalue = *inptr++;	/* don't need GETJSAMPLE() here */
 549              		.loc 1 276 0
 550 0052 E5E7     		b	.L33
 551              	.LVL71:
 552              	.L37:
 285:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****   }
 286:Middlewares/Third_Party/LibJPEG/source/jdsample.c **** }
 553              		.loc 1 286 0
 554 0054 02B0     		add	sp, sp, #8
 555              	.LCFI10:
 556              		.cfi_def_cfa_offset 24
 557              		@ sp needed
 558 0056 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 559              		.cfi_endproc
 560              	.LFE9:
 562              		.section	.text.jinit_upsampler,"ax",%progbits
 563              		.align	1
 564              		.global	jinit_upsampler
 565              		.syntax unified
 566              		.thumb
 567              		.thumb_func
 568              		.fpu fpv5-sp-d16
 570              	jinit_upsampler:
 571              	.LFB10:
 287:Middlewares/Third_Party/LibJPEG/source/jdsample.c **** 
 288:Middlewares/Third_Party/LibJPEG/source/jdsample.c **** 
 289:Middlewares/Third_Party/LibJPEG/source/jdsample.c **** /*
 290:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****  * Module initialization routine for upsampling.
 291:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****  */
 292:Middlewares/Third_Party/LibJPEG/source/jdsample.c **** 
 293:Middlewares/Third_Party/LibJPEG/source/jdsample.c **** GLOBAL(void)
 294:Middlewares/Third_Party/LibJPEG/source/jdsample.c **** jinit_upsampler (j_decompress_ptr cinfo)
 295:Middlewares/Third_Party/LibJPEG/source/jdsample.c **** {
 572              		.loc 1 295 0
 573              		.cfi_startproc
 574              		@ args = 0, pretend = 0, frame = 0
 575              		@ frame_needed = 0, uses_anonymous_args = 0
 576              	.LVL72:
 577 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 578              	.LCFI11:
 579              		.cfi_def_cfa_offset 24
 580              		.cfi_offset 4, -24
 581              		.cfi_offset 5, -20
 582              		.cfi_offset 6, -16
 583              		.cfi_offset 7, -12
 584              		.cfi_offset 8, -8
 585              		.cfi_offset 14, -4
 586 0004 0446     		mov	r4, r0
 296:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****   my_upsample_ptr upsample;
 297:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****   int ci;
ARM GAS  /tmp/ccArUpBJ.s 			page 17


 298:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****   jpeg_component_info * compptr;
 299:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****   boolean need_buffer;
 300:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****   int h_in_group, v_in_group, h_out_group, v_out_group;
 301:Middlewares/Third_Party/LibJPEG/source/jdsample.c **** 
 302:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****   upsample = (my_upsample_ptr)
 303:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****     (*cinfo->mem->alloc_small) ((j_common_ptr) cinfo, JPOOL_IMAGE,
 587              		.loc 1 303 0
 588 0006 4368     		ldr	r3, [r0, #4]
 589 0008 1B68     		ldr	r3, [r3]
 302:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****     (*cinfo->mem->alloc_small) ((j_common_ptr) cinfo, JPOOL_IMAGE,
 590              		.loc 1 302 0
 591 000a A022     		movs	r2, #160
 592 000c 0121     		movs	r1, #1
 593 000e 9847     		blx	r3
 594              	.LVL73:
 595 0010 0746     		mov	r7, r0
 596              	.LVL74:
 304:Middlewares/Third_Party/LibJPEG/source/jdsample.c **** 				SIZEOF(my_upsampler));
 305:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****   cinfo->upsample = (struct jpeg_upsampler *) upsample;
 597              		.loc 1 305 0
 598 0012 C4F8D801 		str	r0, [r4, #472]
 306:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****   upsample->pub.start_pass = start_pass_upsample;
 599              		.loc 1 306 0
 600 0016 4B4B     		ldr	r3, .L54
 601 0018 0360     		str	r3, [r0]
 307:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****   upsample->pub.upsample = sep_upsample;
 602              		.loc 1 307 0
 603 001a 4B4B     		ldr	r3, .L54+4
 604 001c 4360     		str	r3, [r0, #4]
 308:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****   upsample->pub.need_context_rows = FALSE; /* until we find out differently */
 605              		.loc 1 308 0
 606 001e 0023     		movs	r3, #0
 607 0020 8360     		str	r3, [r0, #8]
 309:Middlewares/Third_Party/LibJPEG/source/jdsample.c **** 
 310:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****   if (cinfo->CCIR601_sampling)	/* this isn't supported */
 608              		.loc 1 310 0
 609 0022 D4F83031 		ldr	r3, [r4, #304]
 610 0026 33B1     		cbz	r3, .L39
 311:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****     ERREXIT(cinfo, JERR_CCIR601_NOTIMPL);
 611              		.loc 1 311 0
 612 0028 2368     		ldr	r3, [r4]
 613 002a 1A22     		movs	r2, #26
 614 002c 5A61     		str	r2, [r3, #20]
 615 002e 2368     		ldr	r3, [r4]
 616 0030 1B68     		ldr	r3, [r3]
 617 0032 2046     		mov	r0, r4
 618              	.LVL75:
 619 0034 9847     		blx	r3
 620              	.LVL76:
 621              	.L39:
 312:Middlewares/Third_Party/LibJPEG/source/jdsample.c **** 
 313:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****   /* Verify we can handle the sampling factors, select per-component methods,
 314:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****    * and create storage as needed.
 315:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****    */
 316:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****   for (ci = 0, compptr = cinfo->comp_info; ci < cinfo->num_components;
 622              		.loc 1 316 0
 623 0036 D4F8D850 		ldr	r5, [r4, #216]
ARM GAS  /tmp/ccArUpBJ.s 			page 18


 624              	.LVL77:
 625 003a 0026     		movs	r6, #0
 626 003c 0BE0     		b	.L40
 627              	.LVL78:
 628              	.L41:
 317:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****        ci++, compptr++) {
 318:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****     /* Compute size of an "input group" after IDCT scaling.  This many samples
 319:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****      * are to be converted to max_h_samp_factor * max_v_samp_factor pixels.
 320:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****      */
 321:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****     h_in_group = (compptr->h_samp_factor * compptr->DCT_h_scaled_size) /
 322:Middlewares/Third_Party/LibJPEG/source/jdsample.c **** 		 cinfo->min_DCT_h_scaled_size;
 323:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****     v_in_group = (compptr->v_samp_factor * compptr->DCT_v_scaled_size) /
 324:Middlewares/Third_Party/LibJPEG/source/jdsample.c **** 		 cinfo->min_DCT_v_scaled_size;
 325:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****     h_out_group = cinfo->max_h_samp_factor;
 326:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****     v_out_group = cinfo->max_v_samp_factor;
 327:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****     upsample->rowgroup_height[ci] = v_in_group; /* save for use later */
 328:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****     need_buffer = TRUE;
 329:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****     if (! compptr->component_needed) {
 330:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****       /* Don't bother to upsample an uninteresting component. */
 331:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****       upsample->methods[ci] = noop_upsample;
 332:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****       need_buffer = FALSE;
 333:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****     } else if (h_in_group == h_out_group && v_in_group == v_out_group) {
 629              		.loc 1 333 0
 630 003e 8142     		cmp	r1, r0
 631 0040 08BF     		it	eq
 632 0042 6345     		cmpeq	r3, ip
 633 0044 2DD1     		bne	.L43
 334:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****       /* Fullsize components can be processed without any work. */
 335:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****       upsample->methods[ci] = fullsize_upsample;
 634              		.loc 1 335 0
 635 0046 06F10C03 		add	r3, r6, #12
 636              	.LVL79:
 637 004a 07EB8303 		add	r3, r7, r3, lsl #2
 638 004e 3F4A     		ldr	r2, .L54+8
 639 0050 5A60     		str	r2, [r3, #4]
 640              	.LVL80:
 641              	.L42:
 317:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****        ci++, compptr++) {
 642              		.loc 1 317 0
 643 0052 0136     		adds	r6, r6, #1
 644              	.LVL81:
 645 0054 5835     		adds	r5, r5, #88
 646              	.LVL82:
 647              	.L40:
 316:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****        ci++, compptr++) {
 648              		.loc 1 316 0 discriminator 1
 649 0056 636A     		ldr	r3, [r4, #36]
 650 0058 B342     		cmp	r3, r6
 651 005a 71DD     		ble	.L50
 321:Middlewares/Third_Party/LibJPEG/source/jdsample.c **** 		 cinfo->min_DCT_h_scaled_size;
 652              		.loc 1 321 0
 653 005c AB68     		ldr	r3, [r5, #8]
 654 005e 696A     		ldr	r1, [r5, #36]
 655 0060 01FB03F1 		mul	r1, r1, r3
 322:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****     v_in_group = (compptr->v_samp_factor * compptr->DCT_v_scaled_size) /
 656              		.loc 1 322 0
 657 0064 D4F84031 		ldr	r3, [r4, #320]
ARM GAS  /tmp/ccArUpBJ.s 			page 19


 321:Middlewares/Third_Party/LibJPEG/source/jdsample.c **** 		 cinfo->min_DCT_h_scaled_size;
 658              		.loc 1 321 0
 659 0068 91FBF3F1 		sdiv	r1, r1, r3
 660              	.LVL83:
 323:Middlewares/Third_Party/LibJPEG/source/jdsample.c **** 		 cinfo->min_DCT_v_scaled_size;
 661              		.loc 1 323 0
 662 006c EA68     		ldr	r2, [r5, #12]
 663 006e AB6A     		ldr	r3, [r5, #40]
 664 0070 03FB02F3 		mul	r3, r3, r2
 324:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****     h_out_group = cinfo->max_h_samp_factor;
 665              		.loc 1 324 0
 666 0074 D4F84421 		ldr	r2, [r4, #324]
 323:Middlewares/Third_Party/LibJPEG/source/jdsample.c **** 		 cinfo->min_DCT_v_scaled_size;
 667              		.loc 1 323 0
 668 0078 93FBF2F3 		sdiv	r3, r3, r2
 669              	.LVL84:
 325:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****     v_out_group = cinfo->max_v_samp_factor;
 670              		.loc 1 325 0
 671 007c D4F83801 		ldr	r0, [r4, #312]
 672              	.LVL85:
 326:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****     upsample->rowgroup_height[ci] = v_in_group; /* save for use later */
 673              		.loc 1 326 0
 674 0080 D4F83CC1 		ldr	ip, [r4, #316]
 675              	.LVL86:
 327:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****     need_buffer = TRUE;
 676              		.loc 1 327 0
 677 0084 06F11802 		add	r2, r6, #24
 678 0088 07EB8202 		add	r2, r7, r2, lsl #2
 679 008c 5360     		str	r3, [r2, #4]
 680              	.LVL87:
 329:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****       /* Don't bother to upsample an uninteresting component. */
 681              		.loc 1 329 0
 682 008e 6A6B     		ldr	r2, [r5, #52]
 683 0090 002A     		cmp	r2, #0
 684 0092 D4D1     		bne	.L41
 331:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****       need_buffer = FALSE;
 685              		.loc 1 331 0
 686 0094 06F10C03 		add	r3, r6, #12
 687              	.LVL88:
 688 0098 07EB8303 		add	r3, r7, r3, lsl #2
 689 009c 2C4A     		ldr	r2, .L54+12
 690 009e 5A60     		str	r2, [r3, #4]
 691              	.LVL89:
 692 00a0 D7E7     		b	.L42
 693              	.LVL90:
 694              	.L43:
 336:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****       need_buffer = FALSE;
 337:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****     } else if (h_in_group * 2 == h_out_group &&
 695              		.loc 1 337 0
 696 00a2 4A00     		lsls	r2, r1, #1
 697 00a4 8242     		cmp	r2, r0
 698 00a6 20D0     		beq	.L51
 699              	.L44:
 338:Middlewares/Third_Party/LibJPEG/source/jdsample.c **** 	       v_in_group == v_out_group) {
 339:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****       /* Special case for 2h1v upsampling */
 340:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****       upsample->methods[ci] = h2v1_upsample;
 341:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****     } else if (h_in_group * 2 == h_out_group &&
ARM GAS  /tmp/ccArUpBJ.s 			page 20


 700              		.loc 1 341 0
 701 00a8 8242     		cmp	r2, r0
 702 00aa 27D0     		beq	.L52
 703              	.L46:
 342:Middlewares/Third_Party/LibJPEG/source/jdsample.c **** 	       v_in_group * 2 == v_out_group) {
 343:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****       /* Special case for 2h2v upsampling */
 344:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****       upsample->methods[ci] = h2v2_upsample;
 345:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****     } else if ((h_out_group % h_in_group) == 0 &&
 704              		.loc 1 345 0
 705 00ac 90FBF1F2 		sdiv	r2, r0, r1
 706 00b0 01FB1202 		mls	r2, r1, r2, r0
 707 00b4 62B3     		cbz	r2, .L53
 708              	.L47:
 346:Middlewares/Third_Party/LibJPEG/source/jdsample.c **** 	       (v_out_group % v_in_group) == 0) {
 347:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****       /* Generic integral-factors upsampling method */
 348:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****       upsample->methods[ci] = int_upsample;
 349:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****       upsample->h_expand[ci] = (UINT8) (h_out_group / h_in_group);
 350:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****       upsample->v_expand[ci] = (UINT8) (v_out_group / v_in_group);
 351:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****     } else
 352:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****       ERREXIT(cinfo, JERR_FRACT_SAMPLE_NOTIMPL);
 709              		.loc 1 352 0
 710 00b6 2368     		ldr	r3, [r4]
 711              	.LVL91:
 712 00b8 2722     		movs	r2, #39
 713 00ba 5A61     		str	r2, [r3, #20]
 714              	.LVL92:
 715 00bc 2368     		ldr	r3, [r4]
 716 00be 1B68     		ldr	r3, [r3]
 717 00c0 2046     		mov	r0, r4
 718              	.LVL93:
 719 00c2 9847     		blx	r3
 720              	.LVL94:
 721              	.L45:
 353:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****     if (need_buffer) {
 354:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****       upsample->color_buf[ci] = (*cinfo->mem->alloc_sarray)
 722              		.loc 1 354 0
 723 00c4 6368     		ldr	r3, [r4, #4]
 724 00c6 D3F80880 		ldr	r8, [r3, #8]
 355:Middlewares/Third_Party/LibJPEG/source/jdsample.c **** 	((j_common_ptr) cinfo, JPOOL_IMAGE,
 356:Middlewares/Third_Party/LibJPEG/source/jdsample.c **** 	 (JDIMENSION) jround_up((long) cinfo->output_width,
 725              		.loc 1 356 0
 726 00ca D4F83811 		ldr	r1, [r4, #312]
 727 00ce 206F     		ldr	r0, [r4, #112]
 728 00d0 FFF7FEFF 		bl	jround_up
 729              	.LVL95:
 354:Middlewares/Third_Party/LibJPEG/source/jdsample.c **** 	((j_common_ptr) cinfo, JPOOL_IMAGE,
 730              		.loc 1 354 0
 731 00d4 D4F83C31 		ldr	r3, [r4, #316]
 732 00d8 0246     		mov	r2, r0
 733 00da 0121     		movs	r1, #1
 734 00dc 2046     		mov	r0, r4
 735 00de C047     		blx	r8
 736              	.LVL96:
 737 00e0 B31C     		adds	r3, r6, #2
 738 00e2 07EB8303 		add	r3, r7, r3, lsl #2
 739 00e6 5860     		str	r0, [r3, #4]
 740 00e8 B3E7     		b	.L42
ARM GAS  /tmp/ccArUpBJ.s 			page 21


 741              	.LVL97:
 742              	.L51:
 337:Middlewares/Third_Party/LibJPEG/source/jdsample.c **** 	       v_in_group == v_out_group) {
 743              		.loc 1 337 0 discriminator 1
 744 00ea 6345     		cmp	r3, ip
 745 00ec DCD1     		bne	.L44
 340:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****     } else if (h_in_group * 2 == h_out_group &&
 746              		.loc 1 340 0
 747 00ee 06F10C03 		add	r3, r6, #12
 748              	.LVL98:
 749 00f2 07EB8303 		add	r3, r7, r3, lsl #2
 750 00f6 174A     		ldr	r2, .L54+16
 751 00f8 5A60     		str	r2, [r3, #4]
 752              	.LVL99:
 753 00fa E3E7     		b	.L45
 754              	.LVL100:
 755              	.L52:
 341:Middlewares/Third_Party/LibJPEG/source/jdsample.c **** 	       v_in_group * 2 == v_out_group) {
 756              		.loc 1 341 0 discriminator 1
 757 00fc BCEB430F 		cmp	ip, r3, lsl #1
 758 0100 D4D1     		bne	.L46
 344:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****     } else if ((h_out_group % h_in_group) == 0 &&
 759              		.loc 1 344 0
 760 0102 06F10C03 		add	r3, r6, #12
 761              	.LVL101:
 762 0106 07EB8303 		add	r3, r7, r3, lsl #2
 763 010a 134A     		ldr	r2, .L54+20
 764 010c 5A60     		str	r2, [r3, #4]
 765              	.LVL102:
 766 010e D9E7     		b	.L45
 767              	.LVL103:
 768              	.L53:
 346:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****       /* Generic integral-factors upsampling method */
 769              		.loc 1 346 0 discriminator 1
 770 0110 9CFBF3F2 		sdiv	r2, ip, r3
 771 0114 03FB12C2 		mls	r2, r3, r2, ip
 345:Middlewares/Third_Party/LibJPEG/source/jdsample.c **** 	       (v_out_group % v_in_group) == 0) {
 772              		.loc 1 345 0 discriminator 1
 773 0118 002A     		cmp	r2, #0
 774 011a CCD1     		bne	.L47
 348:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****       upsample->h_expand[ci] = (UINT8) (h_out_group / h_in_group);
 775              		.loc 1 348 0
 776 011c 06F10C02 		add	r2, r6, #12
 777 0120 07EB8202 		add	r2, r7, r2, lsl #2
 778 0124 DFF834E0 		ldr	lr, .L54+24
 779 0128 C2F804E0 		str	lr, [r2, #4]
 349:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****       upsample->v_expand[ci] = (UINT8) (v_out_group / v_in_group);
 780              		.loc 1 349 0
 781 012c 90FBF1F1 		sdiv	r1, r0, r1
 782              	.LVL104:
 783 0130 BA19     		adds	r2, r7, r6
 784 0132 82F88C10 		strb	r1, [r2, #140]
 350:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****     } else
 785              		.loc 1 350 0
 786 0136 9CFBF3F3 		sdiv	r3, ip, r3
 787              	.LVL105:
 788 013a 82F89630 		strb	r3, [r2, #150]
ARM GAS  /tmp/ccArUpBJ.s 			page 22


 789 013e C1E7     		b	.L45
 790              	.LVL106:
 791              	.L50:
 357:Middlewares/Third_Party/LibJPEG/source/jdsample.c **** 				(long) cinfo->max_h_samp_factor),
 358:Middlewares/Third_Party/LibJPEG/source/jdsample.c **** 	 (JDIMENSION) cinfo->max_v_samp_factor);
 359:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****     }
 360:Middlewares/Third_Party/LibJPEG/source/jdsample.c ****   }
 361:Middlewares/Third_Party/LibJPEG/source/jdsample.c **** }
 792              		.loc 1 361 0
 793 0140 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 794              	.LVL107:
 795              	.L55:
 796              		.align	2
 797              	.L54:
 798 0144 00000000 		.word	start_pass_upsample
 799 0148 00000000 		.word	sep_upsample
 800 014c 00000000 		.word	fullsize_upsample
 801 0150 00000000 		.word	noop_upsample
 802 0154 00000000 		.word	h2v1_upsample
 803 0158 00000000 		.word	h2v2_upsample
 804 015c 00000000 		.word	int_upsample
 805              		.cfi_endproc
 806              	.LFE10:
 808              		.text
 809              	.Letext0:
 810              		.file 2 "/home/jaxc/opt/gcc-arm-none-eabi-7-2018-q2-update/lib/gcc/arm-none-eabi/7.3.1/include/std
 811              		.file 3 "/home/jaxc/opt/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/lock.h"
 812              		.file 4 "/home/jaxc/opt/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/_types.h"
 813              		.file 5 "/home/jaxc/opt/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/reent.h"
 814              		.file 6 "/home/jaxc/opt/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/stdlib.h"
 815              		.file 7 "Inc/jmorecfg.h"
 816              		.file 8 "Middlewares/Third_Party/LibJPEG/include/jpeglib.h"
 817              		.file 9 "Middlewares/Third_Party/LibJPEG/include/jpegint.h"
 818              		.file 10 "Middlewares/Third_Party/LibJPEG/include/jerror.h"
ARM GAS  /tmp/ccArUpBJ.s 			page 23


DEFINED SYMBOLS
                            *ABS*:0000000000000000 jdsample.c
     /tmp/ccArUpBJ.s:18     .text.start_pass_upsample:0000000000000000 $t
     /tmp/ccArUpBJ.s:24     .text.start_pass_upsample:0000000000000000 start_pass_upsample
     /tmp/ccArUpBJ.s:48     .text.sep_upsample:0000000000000000 $t
     /tmp/ccArUpBJ.s:54     .text.sep_upsample:0000000000000000 sep_upsample
     /tmp/ccArUpBJ.s:199    .text.fullsize_upsample:0000000000000000 $t
     /tmp/ccArUpBJ.s:205    .text.fullsize_upsample:0000000000000000 fullsize_upsample
     /tmp/ccArUpBJ.s:221    .text.noop_upsample:0000000000000000 $t
     /tmp/ccArUpBJ.s:227    .text.noop_upsample:0000000000000000 noop_upsample
     /tmp/ccArUpBJ.s:245    .text.h2v1_upsample:0000000000000000 $t
     /tmp/ccArUpBJ.s:251    .text.h2v1_upsample:0000000000000000 h2v1_upsample
     /tmp/ccArUpBJ.s:327    .text.int_upsample:0000000000000000 $t
     /tmp/ccArUpBJ.s:333    .text.int_upsample:0000000000000000 int_upsample
     /tmp/ccArUpBJ.s:461    .text.h2v2_upsample:0000000000000000 $t
     /tmp/ccArUpBJ.s:467    .text.h2v2_upsample:0000000000000000 h2v2_upsample
     /tmp/ccArUpBJ.s:563    .text.jinit_upsampler:0000000000000000 $t
     /tmp/ccArUpBJ.s:570    .text.jinit_upsampler:0000000000000000 jinit_upsampler
     /tmp/ccArUpBJ.s:798    .text.jinit_upsampler:0000000000000144 $d

UNDEFINED SYMBOLS
jcopy_sample_rows
jround_up
