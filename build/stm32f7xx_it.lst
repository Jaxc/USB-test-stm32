ARM GAS  /tmp/cc2zIdJ5.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f7xx_it.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.NMI_Handler,"ax",%progbits
  18              		.align	1
  19              		.global	NMI_Handler
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv5-sp-d16
  25              	NMI_Handler:
  26              	.LFB138:
  27              		.file 1 "Src/stm32f7xx_it.c"
   1:Src/stm32f7xx_it.c **** /* USER CODE BEGIN Header */
   2:Src/stm32f7xx_it.c **** /**
   3:Src/stm32f7xx_it.c ****   ******************************************************************************
   4:Src/stm32f7xx_it.c ****   * @file    stm32f7xx_it.c
   5:Src/stm32f7xx_it.c ****   * @brief   Interrupt Service Routines.
   6:Src/stm32f7xx_it.c ****   ******************************************************************************
   7:Src/stm32f7xx_it.c ****   *
   8:Src/stm32f7xx_it.c ****   * COPYRIGHT(c) 2019 STMicroelectronics
   9:Src/stm32f7xx_it.c ****   *
  10:Src/stm32f7xx_it.c ****   * Redistribution and use in source and binary forms, with or without modification,
  11:Src/stm32f7xx_it.c ****   * are permitted provided that the following conditions are met:
  12:Src/stm32f7xx_it.c ****   *   1. Redistributions of source code must retain the above copyright notice,
  13:Src/stm32f7xx_it.c ****   *      this list of conditions and the following disclaimer.
  14:Src/stm32f7xx_it.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  15:Src/stm32f7xx_it.c ****   *      this list of conditions and the following disclaimer in the documentation
  16:Src/stm32f7xx_it.c ****   *      and/or other materials provided with the distribution.
  17:Src/stm32f7xx_it.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  18:Src/stm32f7xx_it.c ****   *      may be used to endorse or promote products derived from this software
  19:Src/stm32f7xx_it.c ****   *      without specific prior written permission.
  20:Src/stm32f7xx_it.c ****   *
  21:Src/stm32f7xx_it.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  22:Src/stm32f7xx_it.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:Src/stm32f7xx_it.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  24:Src/stm32f7xx_it.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  25:Src/stm32f7xx_it.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  26:Src/stm32f7xx_it.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  27:Src/stm32f7xx_it.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  28:Src/stm32f7xx_it.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  29:Src/stm32f7xx_it.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  30:Src/stm32f7xx_it.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  31:Src/stm32f7xx_it.c ****   *
ARM GAS  /tmp/cc2zIdJ5.s 			page 2


  32:Src/stm32f7xx_it.c ****   ******************************************************************************
  33:Src/stm32f7xx_it.c ****   */
  34:Src/stm32f7xx_it.c **** /* USER CODE END Header */
  35:Src/stm32f7xx_it.c **** 
  36:Src/stm32f7xx_it.c **** /* Includes ------------------------------------------------------------------*/
  37:Src/stm32f7xx_it.c **** #include "main.h"
  38:Src/stm32f7xx_it.c **** #include "stm32f7xx_it.h"
  39:Src/stm32f7xx_it.c **** /* Private includes ----------------------------------------------------------*/
  40:Src/stm32f7xx_it.c **** /* USER CODE BEGIN Includes */
  41:Src/stm32f7xx_it.c **** /* USER CODE END Includes */
  42:Src/stm32f7xx_it.c **** 
  43:Src/stm32f7xx_it.c **** /* Private typedef -----------------------------------------------------------*/
  44:Src/stm32f7xx_it.c **** /* USER CODE BEGIN TD */
  45:Src/stm32f7xx_it.c **** 
  46:Src/stm32f7xx_it.c **** /* USER CODE END TD */
  47:Src/stm32f7xx_it.c **** 
  48:Src/stm32f7xx_it.c **** /* Private define ------------------------------------------------------------*/
  49:Src/stm32f7xx_it.c **** /* USER CODE BEGIN PD */
  50:Src/stm32f7xx_it.c ****  
  51:Src/stm32f7xx_it.c **** /* USER CODE END PD */
  52:Src/stm32f7xx_it.c **** 
  53:Src/stm32f7xx_it.c **** /* Private macro -------------------------------------------------------------*/
  54:Src/stm32f7xx_it.c **** /* USER CODE BEGIN PM */
  55:Src/stm32f7xx_it.c **** 
  56:Src/stm32f7xx_it.c **** /* USER CODE END PM */
  57:Src/stm32f7xx_it.c **** 
  58:Src/stm32f7xx_it.c **** /* Private variables ---------------------------------------------------------*/
  59:Src/stm32f7xx_it.c **** /* USER CODE BEGIN PV */
  60:Src/stm32f7xx_it.c **** 
  61:Src/stm32f7xx_it.c **** /* USER CODE END PV */
  62:Src/stm32f7xx_it.c **** 
  63:Src/stm32f7xx_it.c **** /* Private function prototypes -----------------------------------------------*/
  64:Src/stm32f7xx_it.c **** /* USER CODE BEGIN PFP */
  65:Src/stm32f7xx_it.c **** 
  66:Src/stm32f7xx_it.c **** /* USER CODE END PFP */
  67:Src/stm32f7xx_it.c **** 
  68:Src/stm32f7xx_it.c **** /* Private user code ---------------------------------------------------------*/
  69:Src/stm32f7xx_it.c **** /* USER CODE BEGIN 0 */
  70:Src/stm32f7xx_it.c **** 
  71:Src/stm32f7xx_it.c **** /* USER CODE END 0 */
  72:Src/stm32f7xx_it.c **** 
  73:Src/stm32f7xx_it.c **** /* External variables --------------------------------------------------------*/
  74:Src/stm32f7xx_it.c **** extern PCD_HandleTypeDef hpcd_USB_OTG_FS;
  75:Src/stm32f7xx_it.c **** /* USER CODE BEGIN EV */
  76:Src/stm32f7xx_it.c **** 
  77:Src/stm32f7xx_it.c **** /* USER CODE END EV */
  78:Src/stm32f7xx_it.c **** 
  79:Src/stm32f7xx_it.c **** /******************************************************************************/
  80:Src/stm32f7xx_it.c **** /*           Cortex-M7 Processor Interruption and Exception Handlers          */ 
  81:Src/stm32f7xx_it.c **** /******************************************************************************/
  82:Src/stm32f7xx_it.c **** /**
  83:Src/stm32f7xx_it.c ****   * @brief This function handles Non maskable interrupt.
  84:Src/stm32f7xx_it.c ****   */
  85:Src/stm32f7xx_it.c **** void NMI_Handler(void)
  86:Src/stm32f7xx_it.c **** {
  28              		.loc 1 86 0
  29              		.cfi_startproc
ARM GAS  /tmp/cc2zIdJ5.s 			page 3


  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  87:Src/stm32f7xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 0 */
  88:Src/stm32f7xx_it.c **** 
  89:Src/stm32f7xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 0 */
  90:Src/stm32f7xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  91:Src/stm32f7xx_it.c **** 
  92:Src/stm32f7xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 1 */
  93:Src/stm32f7xx_it.c **** }
  33              		.loc 1 93 0
  34 0000 7047     		bx	lr
  35              		.cfi_endproc
  36              	.LFE138:
  38              		.section	.text.HardFault_Handler,"ax",%progbits
  39              		.align	1
  40              		.global	HardFault_Handler
  41              		.syntax unified
  42              		.thumb
  43              		.thumb_func
  44              		.fpu fpv5-sp-d16
  46              	HardFault_Handler:
  47              	.LFB139:
  94:Src/stm32f7xx_it.c **** 
  95:Src/stm32f7xx_it.c **** /**
  96:Src/stm32f7xx_it.c ****   * @brief This function handles Hard fault interrupt.
  97:Src/stm32f7xx_it.c ****   */
  98:Src/stm32f7xx_it.c **** void HardFault_Handler(void)
  99:Src/stm32f7xx_it.c **** {
  48              		.loc 1 99 0
  49              		.cfi_startproc
  50              		@ Volatile: function does not return.
  51              		@ args = 0, pretend = 0, frame = 0
  52              		@ frame_needed = 0, uses_anonymous_args = 0
  53              		@ link register save eliminated.
  54              	.L3:
  55 0000 FEE7     		b	.L3
  56              		.cfi_endproc
  57              	.LFE139:
  59              		.section	.text.MemManage_Handler,"ax",%progbits
  60              		.align	1
  61              		.global	MemManage_Handler
  62              		.syntax unified
  63              		.thumb
  64              		.thumb_func
  65              		.fpu fpv5-sp-d16
  67              	MemManage_Handler:
  68              	.LFB140:
 100:Src/stm32f7xx_it.c ****   /* USER CODE BEGIN HardFault_IRQn 0 */
 101:Src/stm32f7xx_it.c **** 
 102:Src/stm32f7xx_it.c ****   /* USER CODE END HardFault_IRQn 0 */
 103:Src/stm32f7xx_it.c ****   while (1)
 104:Src/stm32f7xx_it.c ****   {
 105:Src/stm32f7xx_it.c ****     /* USER CODE BEGIN W1_HardFault_IRQn 0 */
 106:Src/stm32f7xx_it.c ****     /* USER CODE END W1_HardFault_IRQn 0 */
 107:Src/stm32f7xx_it.c ****   }
 108:Src/stm32f7xx_it.c **** }
ARM GAS  /tmp/cc2zIdJ5.s 			page 4


 109:Src/stm32f7xx_it.c **** 
 110:Src/stm32f7xx_it.c **** /**
 111:Src/stm32f7xx_it.c ****   * @brief This function handles Memory management fault.
 112:Src/stm32f7xx_it.c ****   */
 113:Src/stm32f7xx_it.c **** void MemManage_Handler(void)
 114:Src/stm32f7xx_it.c **** {
  69              		.loc 1 114 0
  70              		.cfi_startproc
  71              		@ Volatile: function does not return.
  72              		@ args = 0, pretend = 0, frame = 0
  73              		@ frame_needed = 0, uses_anonymous_args = 0
  74              		@ link register save eliminated.
  75              	.L5:
  76 0000 FEE7     		b	.L5
  77              		.cfi_endproc
  78              	.LFE140:
  80              		.section	.text.BusFault_Handler,"ax",%progbits
  81              		.align	1
  82              		.global	BusFault_Handler
  83              		.syntax unified
  84              		.thumb
  85              		.thumb_func
  86              		.fpu fpv5-sp-d16
  88              	BusFault_Handler:
  89              	.LFB141:
 115:Src/stm32f7xx_it.c ****   /* USER CODE BEGIN MemoryManagement_IRQn 0 */
 116:Src/stm32f7xx_it.c **** 
 117:Src/stm32f7xx_it.c ****   /* USER CODE END MemoryManagement_IRQn 0 */
 118:Src/stm32f7xx_it.c ****   while (1)
 119:Src/stm32f7xx_it.c ****   {
 120:Src/stm32f7xx_it.c ****     /* USER CODE BEGIN W1_MemoryManagement_IRQn 0 */
 121:Src/stm32f7xx_it.c ****     /* USER CODE END W1_MemoryManagement_IRQn 0 */
 122:Src/stm32f7xx_it.c ****   }
 123:Src/stm32f7xx_it.c **** }
 124:Src/stm32f7xx_it.c **** 
 125:Src/stm32f7xx_it.c **** /**
 126:Src/stm32f7xx_it.c ****   * @brief This function handles Pre-fetch fault, memory access fault.
 127:Src/stm32f7xx_it.c ****   */
 128:Src/stm32f7xx_it.c **** void BusFault_Handler(void)
 129:Src/stm32f7xx_it.c **** {
  90              		.loc 1 129 0
  91              		.cfi_startproc
  92              		@ Volatile: function does not return.
  93              		@ args = 0, pretend = 0, frame = 0
  94              		@ frame_needed = 0, uses_anonymous_args = 0
  95              		@ link register save eliminated.
  96              	.L7:
  97 0000 FEE7     		b	.L7
  98              		.cfi_endproc
  99              	.LFE141:
 101              		.section	.text.UsageFault_Handler,"ax",%progbits
 102              		.align	1
 103              		.global	UsageFault_Handler
 104              		.syntax unified
 105              		.thumb
 106              		.thumb_func
 107              		.fpu fpv5-sp-d16
ARM GAS  /tmp/cc2zIdJ5.s 			page 5


 109              	UsageFault_Handler:
 110              	.LFB142:
 130:Src/stm32f7xx_it.c ****   /* USER CODE BEGIN BusFault_IRQn 0 */
 131:Src/stm32f7xx_it.c **** 
 132:Src/stm32f7xx_it.c ****   /* USER CODE END BusFault_IRQn 0 */
 133:Src/stm32f7xx_it.c ****   while (1)
 134:Src/stm32f7xx_it.c ****   {
 135:Src/stm32f7xx_it.c ****     /* USER CODE BEGIN W1_BusFault_IRQn 0 */
 136:Src/stm32f7xx_it.c ****     /* USER CODE END W1_BusFault_IRQn 0 */
 137:Src/stm32f7xx_it.c ****   }
 138:Src/stm32f7xx_it.c **** }
 139:Src/stm32f7xx_it.c **** 
 140:Src/stm32f7xx_it.c **** /**
 141:Src/stm32f7xx_it.c ****   * @brief This function handles Undefined instruction or illegal state.
 142:Src/stm32f7xx_it.c ****   */
 143:Src/stm32f7xx_it.c **** void UsageFault_Handler(void)
 144:Src/stm32f7xx_it.c **** {
 111              		.loc 1 144 0
 112              		.cfi_startproc
 113              		@ Volatile: function does not return.
 114              		@ args = 0, pretend = 0, frame = 0
 115              		@ frame_needed = 0, uses_anonymous_args = 0
 116              		@ link register save eliminated.
 117              	.L9:
 118 0000 FEE7     		b	.L9
 119              		.cfi_endproc
 120              	.LFE142:
 122              		.section	.text.SVC_Handler,"ax",%progbits
 123              		.align	1
 124              		.global	SVC_Handler
 125              		.syntax unified
 126              		.thumb
 127              		.thumb_func
 128              		.fpu fpv5-sp-d16
 130              	SVC_Handler:
 131              	.LFB143:
 145:Src/stm32f7xx_it.c ****   /* USER CODE BEGIN UsageFault_IRQn 0 */
 146:Src/stm32f7xx_it.c **** 
 147:Src/stm32f7xx_it.c ****   /* USER CODE END UsageFault_IRQn 0 */
 148:Src/stm32f7xx_it.c ****   while (1)
 149:Src/stm32f7xx_it.c ****   {
 150:Src/stm32f7xx_it.c ****     /* USER CODE BEGIN W1_UsageFault_IRQn 0 */
 151:Src/stm32f7xx_it.c ****     /* USER CODE END W1_UsageFault_IRQn 0 */
 152:Src/stm32f7xx_it.c ****   }
 153:Src/stm32f7xx_it.c **** }
 154:Src/stm32f7xx_it.c **** 
 155:Src/stm32f7xx_it.c **** /**
 156:Src/stm32f7xx_it.c ****   * @brief This function handles System service call via SWI instruction.
 157:Src/stm32f7xx_it.c ****   */
 158:Src/stm32f7xx_it.c **** void SVC_Handler(void)
 159:Src/stm32f7xx_it.c **** {
 132              		.loc 1 159 0
 133              		.cfi_startproc
 134              		@ args = 0, pretend = 0, frame = 0
 135              		@ frame_needed = 0, uses_anonymous_args = 0
 136              		@ link register save eliminated.
 160:Src/stm32f7xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 0 */
ARM GAS  /tmp/cc2zIdJ5.s 			page 6


 161:Src/stm32f7xx_it.c **** 
 162:Src/stm32f7xx_it.c ****   /* USER CODE END SVCall_IRQn 0 */
 163:Src/stm32f7xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 1 */
 164:Src/stm32f7xx_it.c **** 
 165:Src/stm32f7xx_it.c ****   /* USER CODE END SVCall_IRQn 1 */
 166:Src/stm32f7xx_it.c **** }
 137              		.loc 1 166 0
 138 0000 7047     		bx	lr
 139              		.cfi_endproc
 140              	.LFE143:
 142              		.section	.text.DebugMon_Handler,"ax",%progbits
 143              		.align	1
 144              		.global	DebugMon_Handler
 145              		.syntax unified
 146              		.thumb
 147              		.thumb_func
 148              		.fpu fpv5-sp-d16
 150              	DebugMon_Handler:
 151              	.LFB144:
 167:Src/stm32f7xx_it.c **** 
 168:Src/stm32f7xx_it.c **** /**
 169:Src/stm32f7xx_it.c ****   * @brief This function handles Debug monitor.
 170:Src/stm32f7xx_it.c ****   */
 171:Src/stm32f7xx_it.c **** void DebugMon_Handler(void)
 172:Src/stm32f7xx_it.c **** {
 152              		.loc 1 172 0
 153              		.cfi_startproc
 154              		@ args = 0, pretend = 0, frame = 0
 155              		@ frame_needed = 0, uses_anonymous_args = 0
 156              		@ link register save eliminated.
 173:Src/stm32f7xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 0 */
 174:Src/stm32f7xx_it.c **** 
 175:Src/stm32f7xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 0 */
 176:Src/stm32f7xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 1 */
 177:Src/stm32f7xx_it.c **** 
 178:Src/stm32f7xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 1 */
 179:Src/stm32f7xx_it.c **** }
 157              		.loc 1 179 0
 158 0000 7047     		bx	lr
 159              		.cfi_endproc
 160              	.LFE144:
 162              		.section	.text.PendSV_Handler,"ax",%progbits
 163              		.align	1
 164              		.global	PendSV_Handler
 165              		.syntax unified
 166              		.thumb
 167              		.thumb_func
 168              		.fpu fpv5-sp-d16
 170              	PendSV_Handler:
 171              	.LFB145:
 180:Src/stm32f7xx_it.c **** 
 181:Src/stm32f7xx_it.c **** /**
 182:Src/stm32f7xx_it.c ****   * @brief This function handles Pendable request for system service.
 183:Src/stm32f7xx_it.c ****   */
 184:Src/stm32f7xx_it.c **** void PendSV_Handler(void)
 185:Src/stm32f7xx_it.c **** {
 172              		.loc 1 185 0
ARM GAS  /tmp/cc2zIdJ5.s 			page 7


 173              		.cfi_startproc
 174              		@ args = 0, pretend = 0, frame = 0
 175              		@ frame_needed = 0, uses_anonymous_args = 0
 176              		@ link register save eliminated.
 186:Src/stm32f7xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 0 */
 187:Src/stm32f7xx_it.c **** 
 188:Src/stm32f7xx_it.c ****   /* USER CODE END PendSV_IRQn 0 */
 189:Src/stm32f7xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 1 */
 190:Src/stm32f7xx_it.c **** 
 191:Src/stm32f7xx_it.c ****   /* USER CODE END PendSV_IRQn 1 */
 192:Src/stm32f7xx_it.c **** }
 177              		.loc 1 192 0
 178 0000 7047     		bx	lr
 179              		.cfi_endproc
 180              	.LFE145:
 182              		.section	.text.SysTick_Handler,"ax",%progbits
 183              		.align	1
 184              		.global	SysTick_Handler
 185              		.syntax unified
 186              		.thumb
 187              		.thumb_func
 188              		.fpu fpv5-sp-d16
 190              	SysTick_Handler:
 191              	.LFB146:
 193:Src/stm32f7xx_it.c **** 
 194:Src/stm32f7xx_it.c **** /**
 195:Src/stm32f7xx_it.c ****   * @brief This function handles System tick timer.
 196:Src/stm32f7xx_it.c ****   */
 197:Src/stm32f7xx_it.c **** void SysTick_Handler(void)
 198:Src/stm32f7xx_it.c **** {
 192              		.loc 1 198 0
 193              		.cfi_startproc
 194              		@ args = 0, pretend = 0, frame = 0
 195              		@ frame_needed = 0, uses_anonymous_args = 0
 196 0000 08B5     		push	{r3, lr}
 197              	.LCFI0:
 198              		.cfi_def_cfa_offset 8
 199              		.cfi_offset 3, -8
 200              		.cfi_offset 14, -4
 199:Src/stm32f7xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 0 */
 200:Src/stm32f7xx_it.c **** 
 201:Src/stm32f7xx_it.c ****   /* USER CODE END SysTick_IRQn 0 */
 202:Src/stm32f7xx_it.c ****   HAL_IncTick();
 201              		.loc 1 202 0
 202 0002 FFF7FEFF 		bl	HAL_IncTick
 203              	.LVL0:
 203:Src/stm32f7xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 1 */
 204:Src/stm32f7xx_it.c **** 
 205:Src/stm32f7xx_it.c ****   /* USER CODE END SysTick_IRQn 1 */
 206:Src/stm32f7xx_it.c **** }
 204              		.loc 1 206 0
 205 0006 08BD     		pop	{r3, pc}
 206              		.cfi_endproc
 207              	.LFE146:
 209              		.section	.text.OTG_FS_IRQHandler,"ax",%progbits
 210              		.align	1
 211              		.global	OTG_FS_IRQHandler
ARM GAS  /tmp/cc2zIdJ5.s 			page 8


 212              		.syntax unified
 213              		.thumb
 214              		.thumb_func
 215              		.fpu fpv5-sp-d16
 217              	OTG_FS_IRQHandler:
 218              	.LFB147:
 207:Src/stm32f7xx_it.c **** 
 208:Src/stm32f7xx_it.c **** /******************************************************************************/
 209:Src/stm32f7xx_it.c **** /* STM32F7xx Peripheral Interrupt Handlers                                    */
 210:Src/stm32f7xx_it.c **** /* Add here the Interrupt Handlers for the used peripherals.                  */
 211:Src/stm32f7xx_it.c **** /* For the available peripheral interrupt handler names,                      */
 212:Src/stm32f7xx_it.c **** /* please refer to the startup file (startup_stm32f7xx.s).                    */
 213:Src/stm32f7xx_it.c **** /******************************************************************************/
 214:Src/stm32f7xx_it.c **** 
 215:Src/stm32f7xx_it.c **** /**
 216:Src/stm32f7xx_it.c ****   * @brief This function handles USB On The Go FS global interrupt.
 217:Src/stm32f7xx_it.c ****   */
 218:Src/stm32f7xx_it.c **** void OTG_FS_IRQHandler(void)
 219:Src/stm32f7xx_it.c **** {
 219              		.loc 1 219 0
 220              		.cfi_startproc
 221              		@ args = 0, pretend = 0, frame = 0
 222              		@ frame_needed = 0, uses_anonymous_args = 0
 223 0000 08B5     		push	{r3, lr}
 224              	.LCFI1:
 225              		.cfi_def_cfa_offset 8
 226              		.cfi_offset 3, -8
 227              		.cfi_offset 14, -4
 220:Src/stm32f7xx_it.c ****   /* USER CODE BEGIN OTG_FS_IRQn 0 */
 221:Src/stm32f7xx_it.c **** 
 222:Src/stm32f7xx_it.c ****   /* USER CODE END OTG_FS_IRQn 0 */
 223:Src/stm32f7xx_it.c ****   HAL_PCD_IRQHandler(&hpcd_USB_OTG_FS);
 228              		.loc 1 223 0
 229 0002 0248     		ldr	r0, .L17
 230 0004 FFF7FEFF 		bl	HAL_PCD_IRQHandler
 231              	.LVL1:
 224:Src/stm32f7xx_it.c ****   /* USER CODE BEGIN OTG_FS_IRQn 1 */
 225:Src/stm32f7xx_it.c **** 
 226:Src/stm32f7xx_it.c ****   /* USER CODE END OTG_FS_IRQn 1 */
 227:Src/stm32f7xx_it.c **** }
 232              		.loc 1 227 0
 233 0008 08BD     		pop	{r3, pc}
 234              	.L18:
 235 000a 00BF     		.align	2
 236              	.L17:
 237 000c 00000000 		.word	hpcd_USB_OTG_FS
 238              		.cfi_endproc
 239              	.LFE147:
 241              		.text
 242              	.Letext0:
 243              		.file 2 "/home/jaxc/opt/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/machine/_default_
 244              		.file 3 "/home/jaxc/opt/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/_stdint.h"
 245              		.file 4 "Drivers/CMSIS/Include/core_cm7.h"
 246              		.file 5 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/system_stm32f7xx.h"
 247              		.file 6 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f722xx.h"
 248              		.file 7 "/home/jaxc/opt/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/lock.h"
 249              		.file 8 "/home/jaxc/opt/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/_types.h"
ARM GAS  /tmp/cc2zIdJ5.s 			page 9


 250              		.file 9 "/home/jaxc/opt/gcc-arm-none-eabi-7-2018-q2-update/lib/gcc/arm-none-eabi/7.3.1/include/std
 251              		.file 10 "/home/jaxc/opt/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/reent.h"
 252              		.file 11 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_def.h"
 253              		.file 12 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_usb.h"
 254              		.file 13 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_pcd.h"
 255              		.file 14 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal.h"
ARM GAS  /tmp/cc2zIdJ5.s 			page 10


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f7xx_it.c
     /tmp/cc2zIdJ5.s:18     .text.NMI_Handler:0000000000000000 $t
     /tmp/cc2zIdJ5.s:25     .text.NMI_Handler:0000000000000000 NMI_Handler
     /tmp/cc2zIdJ5.s:39     .text.HardFault_Handler:0000000000000000 $t
     /tmp/cc2zIdJ5.s:46     .text.HardFault_Handler:0000000000000000 HardFault_Handler
     /tmp/cc2zIdJ5.s:60     .text.MemManage_Handler:0000000000000000 $t
     /tmp/cc2zIdJ5.s:67     .text.MemManage_Handler:0000000000000000 MemManage_Handler
     /tmp/cc2zIdJ5.s:81     .text.BusFault_Handler:0000000000000000 $t
     /tmp/cc2zIdJ5.s:88     .text.BusFault_Handler:0000000000000000 BusFault_Handler
     /tmp/cc2zIdJ5.s:102    .text.UsageFault_Handler:0000000000000000 $t
     /tmp/cc2zIdJ5.s:109    .text.UsageFault_Handler:0000000000000000 UsageFault_Handler
     /tmp/cc2zIdJ5.s:123    .text.SVC_Handler:0000000000000000 $t
     /tmp/cc2zIdJ5.s:130    .text.SVC_Handler:0000000000000000 SVC_Handler
     /tmp/cc2zIdJ5.s:143    .text.DebugMon_Handler:0000000000000000 $t
     /tmp/cc2zIdJ5.s:150    .text.DebugMon_Handler:0000000000000000 DebugMon_Handler
     /tmp/cc2zIdJ5.s:163    .text.PendSV_Handler:0000000000000000 $t
     /tmp/cc2zIdJ5.s:170    .text.PendSV_Handler:0000000000000000 PendSV_Handler
     /tmp/cc2zIdJ5.s:183    .text.SysTick_Handler:0000000000000000 $t
     /tmp/cc2zIdJ5.s:190    .text.SysTick_Handler:0000000000000000 SysTick_Handler
     /tmp/cc2zIdJ5.s:210    .text.OTG_FS_IRQHandler:0000000000000000 $t
     /tmp/cc2zIdJ5.s:217    .text.OTG_FS_IRQHandler:0000000000000000 OTG_FS_IRQHandler
     /tmp/cc2zIdJ5.s:237    .text.OTG_FS_IRQHandler:000000000000000c $d

UNDEFINED SYMBOLS
HAL_IncTick
HAL_PCD_IRQHandler
hpcd_USB_OTG_FS
