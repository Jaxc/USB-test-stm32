ARM GAS  /tmp/cccRWS2v.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"jchuff.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.dump_buffer_s,"ax",%progbits
  18              		.align	1
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv5-sp-d16
  24              	dump_buffer_s:
  25              	.LFB4:
  26              		.file 1 "Middlewares/Third_Party/LibJPEG/source/jchuff.c"
   1:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** /*
   2:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****  * jchuff.c
   3:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****  *
   4:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****  * Copyright (C) 1991-1997, Thomas G. Lane.
   5:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****  * Modified 2006-2009 by Guido Vollbeding.
   6:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****  * This file is part of the Independent JPEG Group's software.
   7:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****  * For conditions of distribution and use, see the accompanying README file.
   8:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****  *
   9:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****  * This file contains Huffman entropy encoding routines.
  10:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****  * Both sequential and progressive modes are supported in this single module.
  11:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****  *
  12:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****  * Much of the complexity here has to do with supporting output suspension.
  13:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****  * If the data destination module demands suspension, we want to be able to
  14:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****  * back up to the start of the current MCU.  To do this, we copy state
  15:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****  * variables into local working storage, and update them back to the
  16:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****  * permanent JPEG objects only upon successful completion of an MCU.
  17:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****  *
  18:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****  * We do not support output suspension for the progressive JPEG mode, since
  19:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****  * the library currently does not allow multiple-scan files to be written
  20:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****  * with output suspension.
  21:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****  */
  22:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
  23:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** #define JPEG_INTERNALS
  24:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** #include "jinclude.h"
  25:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** #include "jpeglib.h"
  26:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
  27:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
  28:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** /* The legal range of a DCT coefficient is
  29:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****  *  -1024 .. +1023  for 8-bit data;
  30:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****  * -16384 .. +16383 for 12-bit data.
  31:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****  * Hence the magnitude should always fit in 10 or 14 bits respectively.
  32:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****  */
ARM GAS  /tmp/cccRWS2v.s 			page 2


  33:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
  34:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** #if BITS_IN_JSAMPLE == 8
  35:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** #define MAX_COEF_BITS 10
  36:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** #else
  37:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** #define MAX_COEF_BITS 14
  38:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** #endif
  39:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
  40:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** /* Derived data constructed for each Huffman table */
  41:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
  42:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** typedef struct {
  43:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   unsigned int ehufco[256];	/* code for each symbol */
  44:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   char ehufsi[256];		/* length of code for each symbol */
  45:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   /* If no code has been allocated for a symbol S, ehufsi[S] contains 0 */
  46:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** } c_derived_tbl;
  47:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
  48:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
  49:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** /* Expanded entropy encoder object for Huffman encoding.
  50:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****  *
  51:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****  * The savable_state subrecord contains fields that change within an MCU,
  52:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****  * but must not be updated permanently until we complete the MCU.
  53:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****  */
  54:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
  55:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** typedef struct {
  56:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   INT32 put_buffer;		/* current bit-accumulation buffer */
  57:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   int put_bits;			/* # of bits now in it */
  58:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   int last_dc_val[MAX_COMPS_IN_SCAN]; /* last DC coef for each component */
  59:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** } savable_state;
  60:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
  61:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** /* This macro is to work around compilers with missing or broken
  62:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****  * structure assignment.  You'll need to fix this code if you have
  63:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****  * such a compiler and you change MAX_COMPS_IN_SCAN.
  64:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****  */
  65:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
  66:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** #ifndef NO_STRUCT_ASSIGN
  67:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** #define ASSIGN_STATE(dest,src)  ((dest) = (src))
  68:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** #else
  69:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** #if MAX_COMPS_IN_SCAN == 4
  70:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** #define ASSIGN_STATE(dest,src)  \
  71:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 	((dest).put_buffer = (src).put_buffer, \
  72:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 	 (dest).put_bits = (src).put_bits, \
  73:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 	 (dest).last_dc_val[0] = (src).last_dc_val[0], \
  74:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 	 (dest).last_dc_val[1] = (src).last_dc_val[1], \
  75:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 	 (dest).last_dc_val[2] = (src).last_dc_val[2], \
  76:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 	 (dest).last_dc_val[3] = (src).last_dc_val[3])
  77:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** #endif
  78:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** #endif
  79:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
  80:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
  81:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** typedef struct {
  82:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   struct jpeg_entropy_encoder pub; /* public fields */
  83:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
  84:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   savable_state saved;		/* Bit buffer & DC state at start of MCU */
  85:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
  86:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   /* These fields are NOT loaded into local working state. */
  87:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   unsigned int restarts_to_go;	/* MCUs left in this restart interval */
  88:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   int next_restart_num;		/* next restart number to write (0-7) */
  89:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
ARM GAS  /tmp/cccRWS2v.s 			page 3


  90:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   /* Pointers to derived tables (these workspaces have image lifespan) */
  91:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   c_derived_tbl * dc_derived_tbls[NUM_HUFF_TBLS];
  92:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   c_derived_tbl * ac_derived_tbls[NUM_HUFF_TBLS];
  93:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
  94:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   /* Statistics tables for optimization */
  95:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   long * dc_count_ptrs[NUM_HUFF_TBLS];
  96:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   long * ac_count_ptrs[NUM_HUFF_TBLS];
  97:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
  98:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   /* Following fields used only in progressive mode */
  99:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 100:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   /* Mode flag: TRUE for optimization, FALSE for actual data output */
 101:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   boolean gather_statistics;
 102:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 103:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   /* next_output_byte/free_in_buffer are local copies of cinfo->dest fields.
 104:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****    */
 105:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   JOCTET * next_output_byte;	/* => next byte to write in buffer */
 106:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   size_t free_in_buffer;	/* # of byte spaces remaining in buffer */
 107:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   j_compress_ptr cinfo;		/* link to cinfo (needed for dump_buffer) */
 108:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 109:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   /* Coding status for AC components */
 110:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   int ac_tbl_no;		/* the table number of the single component */
 111:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   unsigned int EOBRUN;		/* run length of EOBs */
 112:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   unsigned int BE;		/* # of buffered correction bits before MCU */
 113:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   char * bit_buffer;		/* buffer for correction bits (1 per char) */
 114:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   /* packing correction bits tightly would save some space but cost time... */
 115:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** } huff_entropy_encoder;
 116:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 117:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** typedef huff_entropy_encoder * huff_entropy_ptr;
 118:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 119:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** /* Working state while writing an MCU (sequential mode).
 120:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****  * This struct contains all the fields that are needed by subroutines.
 121:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****  */
 122:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 123:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** typedef struct {
 124:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   JOCTET * next_output_byte;	/* => next byte to write in buffer */
 125:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   size_t free_in_buffer;	/* # of byte spaces remaining in buffer */
 126:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   savable_state cur;		/* Current bit buffer & DC state */
 127:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   j_compress_ptr cinfo;		/* dump_buffer needs access to this */
 128:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** } working_state;
 129:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 130:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** /* MAX_CORR_BITS is the number of bits the AC refinement correction-bit
 131:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****  * buffer can hold.  Larger sizes may slightly improve compression, but
 132:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****  * 1000 is already well into the realm of overkill.
 133:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****  * The minimum safe size is 64 bits.
 134:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****  */
 135:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 136:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** #define MAX_CORR_BITS  1000	/* Max # of correction bits I can buffer */
 137:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 138:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** /* IRIGHT_SHIFT is like RIGHT_SHIFT, but works on int rather than INT32.
 139:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****  * We assume that int right shift is unsigned if INT32 right shift is,
 140:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****  * which should be safe.
 141:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****  */
 142:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 143:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** #ifdef RIGHT_SHIFT_IS_UNSIGNED
 144:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** #define ISHIFT_TEMPS	int ishift_temp;
 145:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** #define IRIGHT_SHIFT(x,shft)  \
 146:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 	((ishift_temp = (x)) < 0 ? \
ARM GAS  /tmp/cccRWS2v.s 			page 4


 147:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 	 (ishift_temp >> (shft)) | ((~0) << (16-(shft))) : \
 148:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 	 (ishift_temp >> (shft)))
 149:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** #else
 150:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** #define ISHIFT_TEMPS
 151:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** #define IRIGHT_SHIFT(x,shft)	((x) >> (shft))
 152:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** #endif
 153:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 154:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 155:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** /*
 156:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****  * Compute the derived values for a Huffman table.
 157:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****  * This routine also performs some validation checks on the table.
 158:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****  */
 159:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 160:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** LOCAL(void)
 161:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** jpeg_make_c_derived_tbl (j_compress_ptr cinfo, boolean isDC, int tblno,
 162:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 			 c_derived_tbl ** pdtbl)
 163:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** {
 164:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   JHUFF_TBL *htbl;
 165:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   c_derived_tbl *dtbl;
 166:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   int p, i, l, lastp, si, maxsymbol;
 167:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   char huffsize[257];
 168:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   unsigned int huffcode[257];
 169:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   unsigned int code;
 170:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 171:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   /* Note that huffsize[] and huffcode[] are filled in code-length order,
 172:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****    * paralleling the order of the symbols themselves in htbl->huffval[].
 173:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****    */
 174:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 175:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   /* Find the input Huffman table */
 176:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   if (tblno < 0 || tblno >= NUM_HUFF_TBLS)
 177:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     ERREXIT1(cinfo, JERR_NO_HUFF_TABLE, tblno);
 178:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   htbl =
 179:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     isDC ? cinfo->dc_huff_tbl_ptrs[tblno] : cinfo->ac_huff_tbl_ptrs[tblno];
 180:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   if (htbl == NULL)
 181:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     ERREXIT1(cinfo, JERR_NO_HUFF_TABLE, tblno);
 182:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 183:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   /* Allocate a workspace if we haven't already done so. */
 184:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   if (*pdtbl == NULL)
 185:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     *pdtbl = (c_derived_tbl *)
 186:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       (*cinfo->mem->alloc_small) ((j_common_ptr) cinfo, JPOOL_IMAGE,
 187:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 				  SIZEOF(c_derived_tbl));
 188:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   dtbl = *pdtbl;
 189:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   
 190:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   /* Figure C.1: make table of Huffman code length for each symbol */
 191:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 192:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   p = 0;
 193:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   for (l = 1; l <= 16; l++) {
 194:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     i = (int) htbl->bits[l];
 195:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     if (i < 0 || p + i > 256)	/* protect against table overrun */
 196:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       ERREXIT(cinfo, JERR_BAD_HUFF_TABLE);
 197:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     while (i--)
 198:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       huffsize[p++] = (char) l;
 199:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   }
 200:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   huffsize[p] = 0;
 201:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   lastp = p;
 202:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   
 203:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   /* Figure C.2: generate the codes themselves */
ARM GAS  /tmp/cccRWS2v.s 			page 5


 204:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   /* We also validate that the counts represent a legal Huffman code tree. */
 205:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 206:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   code = 0;
 207:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   si = huffsize[0];
 208:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   p = 0;
 209:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   while (huffsize[p]) {
 210:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     while (((int) huffsize[p]) == si) {
 211:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       huffcode[p++] = code;
 212:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       code++;
 213:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     }
 214:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     /* code is now 1 more than the last code used for codelength si; but
 215:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****      * it must still fit in si bits, since no code is allowed to be all ones.
 216:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****      */
 217:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     if (((INT32) code) >= (((INT32) 1) << si))
 218:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       ERREXIT(cinfo, JERR_BAD_HUFF_TABLE);
 219:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     code <<= 1;
 220:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     si++;
 221:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   }
 222:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   
 223:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   /* Figure C.3: generate encoding tables */
 224:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   /* These are code and size indexed by symbol value */
 225:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 226:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   /* Set all codeless symbols to have code length 0;
 227:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****    * this lets us detect duplicate VAL entries here, and later
 228:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****    * allows emit_bits to detect any attempt to emit such symbols.
 229:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****    */
 230:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   MEMZERO(dtbl->ehufsi, SIZEOF(dtbl->ehufsi));
 231:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 232:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   /* This is also a convenient place to check for out-of-range
 233:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****    * and duplicated VAL entries.  We allow 0..255 for AC symbols
 234:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****    * but only 0..15 for DC.  (We could constrain them further
 235:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****    * based on data depth and mode, but this seems enough.)
 236:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****    */
 237:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   maxsymbol = isDC ? 15 : 255;
 238:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 239:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   for (p = 0; p < lastp; p++) {
 240:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     i = htbl->huffval[p];
 241:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     if (i < 0 || i > maxsymbol || dtbl->ehufsi[i])
 242:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       ERREXIT(cinfo, JERR_BAD_HUFF_TABLE);
 243:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     dtbl->ehufco[i] = huffcode[p];
 244:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     dtbl->ehufsi[i] = huffsize[p];
 245:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   }
 246:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** }
 247:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 248:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 249:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** /* Outputting bytes to the file.
 250:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****  * NB: these must be called only when actually outputting,
 251:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****  * that is, entropy->gather_statistics == FALSE.
 252:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****  */
 253:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 254:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** /* Emit a byte, taking 'action' if must suspend. */
 255:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** #define emit_byte_s(state,val,action)  \
 256:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 	{ *(state)->next_output_byte++ = (JOCTET) (val);  \
 257:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 	  if (--(state)->free_in_buffer == 0)  \
 258:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 	    if (! dump_buffer_s(state))  \
 259:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 	      { action; } }
 260:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
ARM GAS  /tmp/cccRWS2v.s 			page 6


 261:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** /* Emit a byte */
 262:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** #define emit_byte_e(entropy,val)  \
 263:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 	{ *(entropy)->next_output_byte++ = (JOCTET) (val);  \
 264:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 	  if (--(entropy)->free_in_buffer == 0)  \
 265:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 	    dump_buffer_e(entropy); }
 266:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 267:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 268:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** LOCAL(boolean)
 269:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** dump_buffer_s (working_state * state)
 270:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** /* Empty the output buffer; return TRUE if successful, FALSE if must suspend */
 271:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** {
  27              		.loc 1 271 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              	.LVL0:
  32 0000 38B5     		push	{r3, r4, r5, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 16
  35              		.cfi_offset 3, -16
  36              		.cfi_offset 4, -12
  37              		.cfi_offset 5, -8
  38              		.cfi_offset 14, -4
  39 0002 0446     		mov	r4, r0
 272:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   struct jpeg_destination_mgr * dest = state->cinfo->dest;
  40              		.loc 1 272 0
  41 0004 006A     		ldr	r0, [r0, #32]
  42              	.LVL1:
  43 0006 8569     		ldr	r5, [r0, #24]
  44              	.LVL2:
 273:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 274:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   if (! (*dest->empty_output_buffer) (state->cinfo))
  45              		.loc 1 274 0
  46 0008 EB68     		ldr	r3, [r5, #12]
  47 000a 9847     		blx	r3
  48              	.LVL3:
  49 000c 0346     		mov	r3, r0
  50 000e 20B1     		cbz	r0, .L1
 275:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     return FALSE;
 276:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   /* After a successful buffer dump, must reset buffer pointers */
 277:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   state->next_output_byte = dest->next_output_byte;
  51              		.loc 1 277 0
  52 0010 2B68     		ldr	r3, [r5]
  53 0012 2360     		str	r3, [r4]
 278:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   state->free_in_buffer = dest->free_in_buffer;
  54              		.loc 1 278 0
  55 0014 6B68     		ldr	r3, [r5, #4]
  56 0016 6360     		str	r3, [r4, #4]
 279:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   return TRUE;
  57              		.loc 1 279 0
  58 0018 0123     		movs	r3, #1
  59              	.L1:
 280:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** }
  60              		.loc 1 280 0
  61 001a 1846     		mov	r0, r3
  62 001c 38BD     		pop	{r3, r4, r5, pc}
  63              		.cfi_endproc
ARM GAS  /tmp/cccRWS2v.s 			page 7


  64              	.LFE4:
  66              		.section	.text.dump_buffer_e,"ax",%progbits
  67              		.align	1
  68              		.syntax unified
  69              		.thumb
  70              		.thumb_func
  71              		.fpu fpv5-sp-d16
  73              	dump_buffer_e:
  74              	.LFB5:
 281:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 282:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 283:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** LOCAL(void)
 284:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** dump_buffer_e (huff_entropy_ptr entropy)
 285:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** /* Empty the output buffer; we do not support suspension in this case. */
 286:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** {
  75              		.loc 1 286 0
  76              		.cfi_startproc
  77              		@ args = 0, pretend = 0, frame = 0
  78              		@ frame_needed = 0, uses_anonymous_args = 0
  79              	.LVL4:
  80 0000 38B5     		push	{r3, r4, r5, lr}
  81              	.LCFI1:
  82              		.cfi_def_cfa_offset 16
  83              		.cfi_offset 3, -16
  84              		.cfi_offset 4, -12
  85              		.cfi_offset 5, -8
  86              		.cfi_offset 14, -4
  87 0002 0446     		mov	r4, r0
 287:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   struct jpeg_destination_mgr * dest = entropy->cinfo->dest;
  88              		.loc 1 287 0
  89 0004 806F     		ldr	r0, [r0, #120]
  90              	.LVL5:
  91 0006 8569     		ldr	r5, [r0, #24]
  92              	.LVL6:
 288:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 289:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   if (! (*dest->empty_output_buffer) (entropy->cinfo))
  93              		.loc 1 289 0
  94 0008 EB68     		ldr	r3, [r5, #12]
  95 000a 9847     		blx	r3
  96              	.LVL7:
  97 000c 38B9     		cbnz	r0, .L5
 290:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     ERREXIT(entropy->cinfo, JERR_CANT_SUSPEND);
  98              		.loc 1 290 0
  99 000e A36F     		ldr	r3, [r4, #120]
 100 0010 1B68     		ldr	r3, [r3]
 101 0012 1922     		movs	r2, #25
 102 0014 5A61     		str	r2, [r3, #20]
 103 0016 A06F     		ldr	r0, [r4, #120]
 104 0018 0368     		ldr	r3, [r0]
 105 001a 1B68     		ldr	r3, [r3]
 106 001c 9847     		blx	r3
 107              	.LVL8:
 108              	.L5:
 291:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   /* After a successful buffer dump, must reset buffer pointers */
 292:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   entropy->next_output_byte = dest->next_output_byte;
 109              		.loc 1 292 0
 110 001e 2B68     		ldr	r3, [r5]
ARM GAS  /tmp/cccRWS2v.s 			page 8


 111 0020 2367     		str	r3, [r4, #112]
 293:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   entropy->free_in_buffer = dest->free_in_buffer;
 112              		.loc 1 293 0
 113 0022 6B68     		ldr	r3, [r5, #4]
 114 0024 6367     		str	r3, [r4, #116]
 294:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** }
 115              		.loc 1 294 0
 116 0026 38BD     		pop	{r3, r4, r5, pc}
 117              		.cfi_endproc
 118              	.LFE5:
 120              		.section	.text.htest_one_block,"ax",%progbits
 121              		.align	1
 122              		.syntax unified
 123              		.thumb
 124              		.thumb_func
 125              		.fpu fpv5-sp-d16
 127              	htest_one_block:
 128              	.LFB23:
 295:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 296:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 297:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** /* Outputting bits to the file */
 298:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 299:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** /* Only the right 24 bits of put_buffer are used; the valid bits are
 300:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****  * left-justified in this part.  At most 16 bits can be passed to emit_bits
 301:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****  * in one call, and we never retain more than 7 bits in put_buffer
 302:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****  * between calls, so 24 bits are sufficient.
 303:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****  */
 304:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 305:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** INLINE
 306:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** LOCAL(boolean)
 307:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** emit_bits_s (working_state * state, unsigned int code, int size)
 308:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** /* Emit some bits; return TRUE if successful, FALSE if must suspend */
 309:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** {
 310:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   /* This routine is heavily used, so it's worth coding tightly. */
 311:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   register INT32 put_buffer = (INT32) code;
 312:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   register int put_bits = state->cur.put_bits;
 313:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 314:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   /* if size is 0, caller used an invalid Huffman table entry */
 315:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   if (size == 0)
 316:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     ERREXIT(state->cinfo, JERR_HUFF_MISSING_CODE);
 317:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 318:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   put_buffer &= (((INT32) 1)<<size) - 1; /* mask off any extra bits in code */
 319:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   
 320:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   put_bits += size;		/* new number of bits in buffer */
 321:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   
 322:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   put_buffer <<= 24 - put_bits; /* align incoming bits */
 323:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 324:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   put_buffer |= state->cur.put_buffer; /* and merge with old buffer contents */
 325:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   
 326:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   while (put_bits >= 8) {
 327:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     int c = (int) ((put_buffer >> 16) & 0xFF);
 328:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     
 329:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     emit_byte_s(state, c, return FALSE);
 330:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     if (c == 0xFF) {		/* need to stuff a zero byte? */
 331:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       emit_byte_s(state, 0, return FALSE);
 332:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     }
 333:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     put_buffer <<= 8;
ARM GAS  /tmp/cccRWS2v.s 			page 9


 334:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     put_bits -= 8;
 335:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   }
 336:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 337:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   state->cur.put_buffer = put_buffer; /* update state variables */
 338:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   state->cur.put_bits = put_bits;
 339:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 340:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   return TRUE;
 341:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** }
 342:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 343:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 344:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** INLINE
 345:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** LOCAL(void)
 346:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** emit_bits_e (huff_entropy_ptr entropy, unsigned int code, int size)
 347:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** /* Emit some bits, unless we are in gather mode */
 348:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** {
 349:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   /* This routine is heavily used, so it's worth coding tightly. */
 350:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   register INT32 put_buffer = (INT32) code;
 351:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   register int put_bits = entropy->saved.put_bits;
 352:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 353:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   /* if size is 0, caller used an invalid Huffman table entry */
 354:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   if (size == 0)
 355:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     ERREXIT(entropy->cinfo, JERR_HUFF_MISSING_CODE);
 356:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 357:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   if (entropy->gather_statistics)
 358:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     return;			/* do nothing if we're only getting stats */
 359:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 360:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   put_buffer &= (((INT32) 1)<<size) - 1; /* mask off any extra bits in code */
 361:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   
 362:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   put_bits += size;		/* new number of bits in buffer */
 363:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 364:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   put_buffer <<= 24 - put_bits; /* align incoming bits */
 365:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 366:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   /* and merge with old buffer contents */
 367:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   put_buffer |= entropy->saved.put_buffer;
 368:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 369:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   while (put_bits >= 8) {
 370:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     int c = (int) ((put_buffer >> 16) & 0xFF);
 371:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 372:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     emit_byte_e(entropy, c);
 373:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     if (c == 0xFF) {		/* need to stuff a zero byte? */
 374:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       emit_byte_e(entropy, 0);
 375:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     }
 376:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     put_buffer <<= 8;
 377:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     put_bits -= 8;
 378:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   }
 379:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 380:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   entropy->saved.put_buffer = put_buffer; /* update variables */
 381:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   entropy->saved.put_bits = put_bits;
 382:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** }
 383:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 384:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 385:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** LOCAL(boolean)
 386:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** flush_bits_s (working_state * state)
 387:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** {
 388:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   if (! emit_bits_s(state, 0x7F, 7)) /* fill any partial byte with ones */
 389:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     return FALSE;
 390:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   state->cur.put_buffer = 0;	     /* and reset bit-buffer to empty */
ARM GAS  /tmp/cccRWS2v.s 			page 10


 391:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   state->cur.put_bits = 0;
 392:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   return TRUE;
 393:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** }
 394:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 395:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 396:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** LOCAL(void)
 397:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** flush_bits_e (huff_entropy_ptr entropy)
 398:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** {
 399:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   emit_bits_e(entropy, 0x7F, 7); /* fill any partial byte with ones */
 400:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   entropy->saved.put_buffer = 0; /* and reset bit-buffer to empty */
 401:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   entropy->saved.put_bits = 0;
 402:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** }
 403:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 404:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 405:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** /*
 406:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****  * Emit (or just count) a Huffman symbol.
 407:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****  */
 408:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 409:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** INLINE
 410:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** LOCAL(void)
 411:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** emit_dc_symbol (huff_entropy_ptr entropy, int tbl_no, int symbol)
 412:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** {
 413:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   if (entropy->gather_statistics)
 414:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     entropy->dc_count_ptrs[tbl_no][symbol]++;
 415:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   else {
 416:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     c_derived_tbl * tbl = entropy->dc_derived_tbls[tbl_no];
 417:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     emit_bits_e(entropy, tbl->ehufco[symbol], tbl->ehufsi[symbol]);
 418:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   }
 419:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** }
 420:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 421:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 422:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** INLINE
 423:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** LOCAL(void)
 424:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** emit_ac_symbol (huff_entropy_ptr entropy, int tbl_no, int symbol)
 425:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** {
 426:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   if (entropy->gather_statistics)
 427:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     entropy->ac_count_ptrs[tbl_no][symbol]++;
 428:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   else {
 429:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     c_derived_tbl * tbl = entropy->ac_derived_tbls[tbl_no];
 430:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     emit_bits_e(entropy, tbl->ehufco[symbol], tbl->ehufsi[symbol]);
 431:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   }
 432:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** }
 433:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 434:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 435:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** /*
 436:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****  * Emit bits from a correction bit buffer.
 437:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****  */
 438:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 439:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** LOCAL(void)
 440:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** emit_buffered_bits (huff_entropy_ptr entropy, char * bufstart,
 441:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 		    unsigned int nbits)
 442:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** {
 443:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   if (entropy->gather_statistics)
 444:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     return;			/* no real work */
 445:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 446:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   while (nbits > 0) {
 447:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     emit_bits_e(entropy, (unsigned int) (*bufstart), 1);
ARM GAS  /tmp/cccRWS2v.s 			page 11


 448:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     bufstart++;
 449:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     nbits--;
 450:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   }
 451:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** }
 452:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 453:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 454:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** /*
 455:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****  * Emit any pending EOBRUN symbol.
 456:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****  */
 457:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 458:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** LOCAL(void)
 459:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** emit_eobrun (huff_entropy_ptr entropy)
 460:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** {
 461:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   register int temp, nbits;
 462:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 463:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   if (entropy->EOBRUN > 0) {	/* if there is any pending EOBRUN */
 464:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     temp = entropy->EOBRUN;
 465:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     nbits = 0;
 466:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     while ((temp >>= 1))
 467:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       nbits++;
 468:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     /* safety check: shouldn't happen given limited correction-bit buffer */
 469:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     if (nbits > 14)
 470:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       ERREXIT(entropy->cinfo, JERR_HUFF_MISSING_CODE);
 471:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 472:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     emit_ac_symbol(entropy, entropy->ac_tbl_no, nbits << 4);
 473:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     if (nbits)
 474:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       emit_bits_e(entropy, entropy->EOBRUN, nbits);
 475:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 476:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     entropy->EOBRUN = 0;
 477:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 478:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     /* Emit any buffered correction bits */
 479:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     emit_buffered_bits(entropy, entropy->bit_buffer, entropy->BE);
 480:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     entropy->BE = 0;
 481:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   }
 482:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** }
 483:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 484:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 485:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** /*
 486:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****  * Emit a restart marker & resynchronize predictions.
 487:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****  */
 488:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 489:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** LOCAL(boolean)
 490:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** emit_restart_s (working_state * state, int restart_num)
 491:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** {
 492:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   int ci;
 493:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 494:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   if (! flush_bits_s(state))
 495:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     return FALSE;
 496:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 497:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   emit_byte_s(state, 0xFF, return FALSE);
 498:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   emit_byte_s(state, JPEG_RST0 + restart_num, return FALSE);
 499:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 500:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   /* Re-initialize DC predictions to 0 */
 501:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   for (ci = 0; ci < state->cinfo->comps_in_scan; ci++)
 502:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     state->cur.last_dc_val[ci] = 0;
 503:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 504:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   /* The restart counter is not updated until we successfully write the MCU. */
ARM GAS  /tmp/cccRWS2v.s 			page 12


 505:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 506:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   return TRUE;
 507:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** }
 508:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 509:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 510:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** LOCAL(void)
 511:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** emit_restart_e (huff_entropy_ptr entropy, int restart_num)
 512:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** {
 513:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   int ci;
 514:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 515:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   emit_eobrun(entropy);
 516:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 517:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   if (! entropy->gather_statistics) {
 518:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     flush_bits_e(entropy);
 519:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     emit_byte_e(entropy, 0xFF);
 520:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     emit_byte_e(entropy, JPEG_RST0 + restart_num);
 521:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   }
 522:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 523:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   if (entropy->cinfo->Ss == 0) {
 524:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     /* Re-initialize DC predictions to 0 */
 525:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     for (ci = 0; ci < entropy->cinfo->comps_in_scan; ci++)
 526:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       entropy->saved.last_dc_val[ci] = 0;
 527:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   } else {
 528:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     /* Re-initialize all AC-related fields to 0 */
 529:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     entropy->EOBRUN = 0;
 530:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     entropy->BE = 0;
 531:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   }
 532:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** }
 533:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 534:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 535:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** /*
 536:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****  * MCU encoding for DC initial scan (either spectral selection,
 537:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****  * or first pass of successive approximation).
 538:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****  */
 539:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 540:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** METHODDEF(boolean)
 541:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** encode_mcu_DC_first (j_compress_ptr cinfo, JBLOCKROW *MCU_data)
 542:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** {
 543:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   huff_entropy_ptr entropy = (huff_entropy_ptr) cinfo->entropy;
 544:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   register int temp, temp2;
 545:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   register int nbits;
 546:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   int blkn, ci;
 547:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   int Al = cinfo->Al;
 548:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   JBLOCKROW block;
 549:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   jpeg_component_info * compptr;
 550:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   ISHIFT_TEMPS
 551:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 552:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   entropy->next_output_byte = cinfo->dest->next_output_byte;
 553:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   entropy->free_in_buffer = cinfo->dest->free_in_buffer;
 554:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 555:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   /* Emit restart marker if needed */
 556:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   if (cinfo->restart_interval)
 557:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     if (entropy->restarts_to_go == 0)
 558:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       emit_restart_e(entropy, entropy->next_restart_num);
 559:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 560:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   /* Encode the MCU data blocks */
 561:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   for (blkn = 0; blkn < cinfo->blocks_in_MCU; blkn++) {
ARM GAS  /tmp/cccRWS2v.s 			page 13


 562:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     block = MCU_data[blkn];
 563:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     ci = cinfo->MCU_membership[blkn];
 564:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     compptr = cinfo->cur_comp_info[ci];
 565:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 566:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     /* Compute the DC value after the required point transform by Al.
 567:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****      * This is simply an arithmetic right shift.
 568:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****      */
 569:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     temp2 = IRIGHT_SHIFT((int) ((*block)[0]), Al);
 570:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 571:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     /* DC differences are figured on the point-transformed values. */
 572:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     temp = temp2 - entropy->saved.last_dc_val[ci];
 573:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     entropy->saved.last_dc_val[ci] = temp2;
 574:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 575:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     /* Encode the DC coefficient difference per section G.1.2.1 */
 576:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     temp2 = temp;
 577:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     if (temp < 0) {
 578:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       temp = -temp;		/* temp is abs value of input */
 579:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       /* For a negative input, want temp2 = bitwise complement of abs(input) */
 580:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       /* This code assumes we are on a two's complement machine */
 581:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       temp2--;
 582:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     }
 583:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     
 584:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     /* Find the number of bits needed for the magnitude of the coefficient */
 585:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     nbits = 0;
 586:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     while (temp) {
 587:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       nbits++;
 588:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       temp >>= 1;
 589:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     }
 590:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     /* Check for out-of-range coefficient values.
 591:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****      * Since we're encoding a difference, the range limit is twice as much.
 592:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****      */
 593:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     if (nbits > MAX_COEF_BITS+1)
 594:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       ERREXIT(cinfo, JERR_BAD_DCT_COEF);
 595:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     
 596:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     /* Count/emit the Huffman-coded symbol for the number of bits */
 597:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     emit_dc_symbol(entropy, compptr->dc_tbl_no, nbits);
 598:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     
 599:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     /* Emit that number of bits of the value, if positive, */
 600:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     /* or the complement of its magnitude, if negative. */
 601:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     if (nbits)			/* emit_bits rejects calls with size 0 */
 602:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       emit_bits_e(entropy, (unsigned int) temp2, nbits);
 603:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   }
 604:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 605:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   cinfo->dest->next_output_byte = entropy->next_output_byte;
 606:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   cinfo->dest->free_in_buffer = entropy->free_in_buffer;
 607:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 608:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   /* Update restart-interval state too */
 609:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   if (cinfo->restart_interval) {
 610:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     if (entropy->restarts_to_go == 0) {
 611:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       entropy->restarts_to_go = cinfo->restart_interval;
 612:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       entropy->next_restart_num++;
 613:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       entropy->next_restart_num &= 7;
 614:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     }
 615:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     entropy->restarts_to_go--;
 616:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   }
 617:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 618:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   return TRUE;
ARM GAS  /tmp/cccRWS2v.s 			page 14


 619:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** }
 620:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 621:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 622:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** /*
 623:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****  * MCU encoding for AC initial scan (either spectral selection,
 624:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****  * or first pass of successive approximation).
 625:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****  */
 626:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 627:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** METHODDEF(boolean)
 628:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** encode_mcu_AC_first (j_compress_ptr cinfo, JBLOCKROW *MCU_data)
 629:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** {
 630:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   huff_entropy_ptr entropy = (huff_entropy_ptr) cinfo->entropy;
 631:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   register int temp, temp2;
 632:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   register int nbits;
 633:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   register int r, k;
 634:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   int Se, Al;
 635:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   const int * natural_order;
 636:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   JBLOCKROW block;
 637:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 638:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   entropy->next_output_byte = cinfo->dest->next_output_byte;
 639:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   entropy->free_in_buffer = cinfo->dest->free_in_buffer;
 640:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 641:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   /* Emit restart marker if needed */
 642:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   if (cinfo->restart_interval)
 643:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     if (entropy->restarts_to_go == 0)
 644:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       emit_restart_e(entropy, entropy->next_restart_num);
 645:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 646:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   Se = cinfo->Se;
 647:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   Al = cinfo->Al;
 648:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   natural_order = cinfo->natural_order;
 649:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 650:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   /* Encode the MCU data block */
 651:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   block = MCU_data[0];
 652:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 653:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   /* Encode the AC coefficients per section G.1.2.2, fig. G.3 */
 654:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   
 655:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   r = 0;			/* r = run length of zeros */
 656:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****    
 657:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   for (k = cinfo->Ss; k <= Se; k++) {
 658:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     if ((temp = (*block)[natural_order[k]]) == 0) {
 659:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       r++;
 660:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       continue;
 661:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     }
 662:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     /* We must apply the point transform by Al.  For AC coefficients this
 663:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****      * is an integer division with rounding towards 0.  To do this portably
 664:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****      * in C, we shift after obtaining the absolute value; so the code is
 665:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****      * interwoven with finding the abs value (temp) and output bits (temp2).
 666:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****      */
 667:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     if (temp < 0) {
 668:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       temp = -temp;		/* temp is abs value of input */
 669:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       temp >>= Al;		/* apply the point transform */
 670:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       /* For a negative coef, want temp2 = bitwise complement of abs(coef) */
 671:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       temp2 = ~temp;
 672:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     } else {
 673:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       temp >>= Al;		/* apply the point transform */
 674:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       temp2 = temp;
 675:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     }
ARM GAS  /tmp/cccRWS2v.s 			page 15


 676:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     /* Watch out for case that nonzero coef is zero after point transform */
 677:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     if (temp == 0) {
 678:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       r++;
 679:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       continue;
 680:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     }
 681:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 682:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     /* Emit any pending EOBRUN */
 683:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     if (entropy->EOBRUN > 0)
 684:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       emit_eobrun(entropy);
 685:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     /* if run length > 15, must emit special run-length-16 codes (0xF0) */
 686:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     while (r > 15) {
 687:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       emit_ac_symbol(entropy, entropy->ac_tbl_no, 0xF0);
 688:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       r -= 16;
 689:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     }
 690:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 691:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     /* Find the number of bits needed for the magnitude of the coefficient */
 692:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     nbits = 1;			/* there must be at least one 1 bit */
 693:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     while ((temp >>= 1))
 694:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       nbits++;
 695:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     /* Check for out-of-range coefficient values */
 696:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     if (nbits > MAX_COEF_BITS)
 697:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       ERREXIT(cinfo, JERR_BAD_DCT_COEF);
 698:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 699:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     /* Count/emit Huffman symbol for run length / number of bits */
 700:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     emit_ac_symbol(entropy, entropy->ac_tbl_no, (r << 4) + nbits);
 701:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 702:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     /* Emit that number of bits of the value, if positive, */
 703:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     /* or the complement of its magnitude, if negative. */
 704:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     emit_bits_e(entropy, (unsigned int) temp2, nbits);
 705:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 706:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     r = 0;			/* reset zero run length */
 707:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   }
 708:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 709:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   if (r > 0) {			/* If there are trailing zeroes, */
 710:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     entropy->EOBRUN++;		/* count an EOB */
 711:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     if (entropy->EOBRUN == 0x7FFF)
 712:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       emit_eobrun(entropy);	/* force it out to avoid overflow */
 713:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   }
 714:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 715:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   cinfo->dest->next_output_byte = entropy->next_output_byte;
 716:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   cinfo->dest->free_in_buffer = entropy->free_in_buffer;
 717:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 718:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   /* Update restart-interval state too */
 719:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   if (cinfo->restart_interval) {
 720:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     if (entropy->restarts_to_go == 0) {
 721:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       entropy->restarts_to_go = cinfo->restart_interval;
 722:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       entropy->next_restart_num++;
 723:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       entropy->next_restart_num &= 7;
 724:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     }
 725:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     entropy->restarts_to_go--;
 726:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   }
 727:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 728:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   return TRUE;
 729:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** }
 730:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 731:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 732:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** /*
ARM GAS  /tmp/cccRWS2v.s 			page 16


 733:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****  * MCU encoding for DC successive approximation refinement scan.
 734:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****  * Note: we assume such scans can be multi-component, although the spec
 735:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****  * is not very clear on the point.
 736:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****  */
 737:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 738:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** METHODDEF(boolean)
 739:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** encode_mcu_DC_refine (j_compress_ptr cinfo, JBLOCKROW *MCU_data)
 740:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** {
 741:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   huff_entropy_ptr entropy = (huff_entropy_ptr) cinfo->entropy;
 742:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   register int temp;
 743:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   int blkn;
 744:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   int Al = cinfo->Al;
 745:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   JBLOCKROW block;
 746:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 747:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   entropy->next_output_byte = cinfo->dest->next_output_byte;
 748:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   entropy->free_in_buffer = cinfo->dest->free_in_buffer;
 749:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 750:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   /* Emit restart marker if needed */
 751:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   if (cinfo->restart_interval)
 752:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     if (entropy->restarts_to_go == 0)
 753:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       emit_restart_e(entropy, entropy->next_restart_num);
 754:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 755:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   /* Encode the MCU data blocks */
 756:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   for (blkn = 0; blkn < cinfo->blocks_in_MCU; blkn++) {
 757:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     block = MCU_data[blkn];
 758:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 759:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     /* We simply emit the Al'th bit of the DC coefficient value. */
 760:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     temp = (*block)[0];
 761:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     emit_bits_e(entropy, (unsigned int) (temp >> Al), 1);
 762:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   }
 763:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 764:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   cinfo->dest->next_output_byte = entropy->next_output_byte;
 765:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   cinfo->dest->free_in_buffer = entropy->free_in_buffer;
 766:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 767:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   /* Update restart-interval state too */
 768:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   if (cinfo->restart_interval) {
 769:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     if (entropy->restarts_to_go == 0) {
 770:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       entropy->restarts_to_go = cinfo->restart_interval;
 771:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       entropy->next_restart_num++;
 772:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       entropy->next_restart_num &= 7;
 773:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     }
 774:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     entropy->restarts_to_go--;
 775:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   }
 776:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 777:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   return TRUE;
 778:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** }
 779:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 780:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 781:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** /*
 782:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****  * MCU encoding for AC successive approximation refinement scan.
 783:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****  */
 784:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 785:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** METHODDEF(boolean)
 786:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** encode_mcu_AC_refine (j_compress_ptr cinfo, JBLOCKROW *MCU_data)
 787:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** {
 788:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   huff_entropy_ptr entropy = (huff_entropy_ptr) cinfo->entropy;
 789:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   register int temp;
ARM GAS  /tmp/cccRWS2v.s 			page 17


 790:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   register int r, k;
 791:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   int EOB;
 792:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   char *BR_buffer;
 793:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   unsigned int BR;
 794:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   int Se, Al;
 795:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   const int * natural_order;
 796:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   JBLOCKROW block;
 797:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   int absvalues[DCTSIZE2];
 798:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 799:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   entropy->next_output_byte = cinfo->dest->next_output_byte;
 800:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   entropy->free_in_buffer = cinfo->dest->free_in_buffer;
 801:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 802:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   /* Emit restart marker if needed */
 803:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   if (cinfo->restart_interval)
 804:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     if (entropy->restarts_to_go == 0)
 805:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       emit_restart_e(entropy, entropy->next_restart_num);
 806:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 807:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   Se = cinfo->Se;
 808:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   Al = cinfo->Al;
 809:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   natural_order = cinfo->natural_order;
 810:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 811:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   /* Encode the MCU data block */
 812:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   block = MCU_data[0];
 813:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 814:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   /* It is convenient to make a pre-pass to determine the transformed
 815:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****    * coefficients' absolute values and the EOB position.
 816:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****    */
 817:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   EOB = 0;
 818:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   for (k = cinfo->Ss; k <= Se; k++) {
 819:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     temp = (*block)[natural_order[k]];
 820:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     /* We must apply the point transform by Al.  For AC coefficients this
 821:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****      * is an integer division with rounding towards 0.  To do this portably
 822:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****      * in C, we shift after obtaining the absolute value.
 823:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****      */
 824:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     if (temp < 0)
 825:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       temp = -temp;		/* temp is abs value of input */
 826:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     temp >>= Al;		/* apply the point transform */
 827:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     absvalues[k] = temp;	/* save abs value for main pass */
 828:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     if (temp == 1)
 829:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       EOB = k;			/* EOB = index of last newly-nonzero coef */
 830:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   }
 831:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 832:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   /* Encode the AC coefficients per section G.1.2.3, fig. G.7 */
 833:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   
 834:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   r = 0;			/* r = run length of zeros */
 835:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   BR = 0;			/* BR = count of buffered bits added now */
 836:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   BR_buffer = entropy->bit_buffer + entropy->BE; /* Append bits to buffer */
 837:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 838:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   for (k = cinfo->Ss; k <= Se; k++) {
 839:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     if ((temp = absvalues[k]) == 0) {
 840:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       r++;
 841:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       continue;
 842:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     }
 843:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 844:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     /* Emit any required ZRLs, but not if they can be folded into EOB */
 845:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     while (r > 15 && k <= EOB) {
 846:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       /* emit any pending EOBRUN and the BE correction bits */
ARM GAS  /tmp/cccRWS2v.s 			page 18


 847:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       emit_eobrun(entropy);
 848:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       /* Emit ZRL */
 849:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       emit_ac_symbol(entropy, entropy->ac_tbl_no, 0xF0);
 850:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       r -= 16;
 851:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       /* Emit buffered correction bits that must be associated with ZRL */
 852:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       emit_buffered_bits(entropy, BR_buffer, BR);
 853:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       BR_buffer = entropy->bit_buffer; /* BE bits are gone now */
 854:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       BR = 0;
 855:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     }
 856:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 857:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     /* If the coef was previously nonzero, it only needs a correction bit.
 858:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****      * NOTE: a straight translation of the spec's figure G.7 would suggest
 859:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****      * that we also need to test r > 15.  But if r > 15, we can only get here
 860:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****      * if k > EOB, which implies that this coefficient is not 1.
 861:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****      */
 862:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     if (temp > 1) {
 863:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       /* The correction bit is the next bit of the absolute value. */
 864:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       BR_buffer[BR++] = (char) (temp & 1);
 865:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       continue;
 866:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     }
 867:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 868:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     /* Emit any pending EOBRUN and the BE correction bits */
 869:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     emit_eobrun(entropy);
 870:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 871:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     /* Count/emit Huffman symbol for run length / number of bits */
 872:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     emit_ac_symbol(entropy, entropy->ac_tbl_no, (r << 4) + 1);
 873:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 874:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     /* Emit output bit for newly-nonzero coef */
 875:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     temp = ((*block)[natural_order[k]] < 0) ? 0 : 1;
 876:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     emit_bits_e(entropy, (unsigned int) temp, 1);
 877:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 878:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     /* Emit buffered correction bits that must be associated with this code */
 879:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     emit_buffered_bits(entropy, BR_buffer, BR);
 880:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     BR_buffer = entropy->bit_buffer; /* BE bits are gone now */
 881:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     BR = 0;
 882:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     r = 0;			/* reset zero run length */
 883:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   }
 884:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 885:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   if (r > 0 || BR > 0) {	/* If there are trailing zeroes, */
 886:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     entropy->EOBRUN++;		/* count an EOB */
 887:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     entropy->BE += BR;		/* concat my correction bits to older ones */
 888:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     /* We force out the EOB if we risk either:
 889:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****      * 1. overflow of the EOB counter;
 890:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****      * 2. overflow of the correction bit buffer during the next MCU.
 891:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****      */
 892:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     if (entropy->EOBRUN == 0x7FFF || entropy->BE > (MAX_CORR_BITS-DCTSIZE2+1))
 893:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       emit_eobrun(entropy);
 894:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   }
 895:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 896:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   cinfo->dest->next_output_byte = entropy->next_output_byte;
 897:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   cinfo->dest->free_in_buffer = entropy->free_in_buffer;
 898:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 899:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   /* Update restart-interval state too */
 900:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   if (cinfo->restart_interval) {
 901:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     if (entropy->restarts_to_go == 0) {
 902:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       entropy->restarts_to_go = cinfo->restart_interval;
 903:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       entropy->next_restart_num++;
ARM GAS  /tmp/cccRWS2v.s 			page 19


 904:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       entropy->next_restart_num &= 7;
 905:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     }
 906:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     entropy->restarts_to_go--;
 907:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   }
 908:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 909:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   return TRUE;
 910:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** }
 911:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 912:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 913:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** /* Encode a single block's worth of coefficients */
 914:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 915:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** LOCAL(boolean)
 916:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** encode_one_block (working_state * state, JCOEFPTR block, int last_dc_val,
 917:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 		  c_derived_tbl *dctbl, c_derived_tbl *actbl)
 918:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** {
 919:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   register int temp, temp2;
 920:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   register int nbits;
 921:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   register int k, r, i;
 922:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   int Se = state->cinfo->lim_Se;
 923:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   const int * natural_order = state->cinfo->natural_order;
 924:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 925:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   /* Encode the DC coefficient difference per section F.1.2.1 */
 926:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 927:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   temp = temp2 = block[0] - last_dc_val;
 928:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 929:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   if (temp < 0) {
 930:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     temp = -temp;		/* temp is abs value of input */
 931:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     /* For a negative input, want temp2 = bitwise complement of abs(input) */
 932:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     /* This code assumes we are on a two's complement machine */
 933:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     temp2--;
 934:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   }
 935:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 936:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   /* Find the number of bits needed for the magnitude of the coefficient */
 937:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   nbits = 0;
 938:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   while (temp) {
 939:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     nbits++;
 940:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     temp >>= 1;
 941:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   }
 942:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   /* Check for out-of-range coefficient values.
 943:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****    * Since we're encoding a difference, the range limit is twice as much.
 944:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****    */
 945:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   if (nbits > MAX_COEF_BITS+1)
 946:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     ERREXIT(state->cinfo, JERR_BAD_DCT_COEF);
 947:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 948:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   /* Emit the Huffman-coded symbol for the number of bits */
 949:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   if (! emit_bits_s(state, dctbl->ehufco[nbits], dctbl->ehufsi[nbits]))
 950:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     return FALSE;
 951:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 952:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   /* Emit that number of bits of the value, if positive, */
 953:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   /* or the complement of its magnitude, if negative. */
 954:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   if (nbits)			/* emit_bits rejects calls with size 0 */
 955:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     if (! emit_bits_s(state, (unsigned int) temp2, nbits))
 956:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       return FALSE;
 957:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 958:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   /* Encode the AC coefficients per section F.1.2.2 */
 959:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 960:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   r = 0;			/* r = run length of zeros */
ARM GAS  /tmp/cccRWS2v.s 			page 20


 961:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 962:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   for (k = 1; k <= Se; k++) {
 963:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     if ((temp = block[natural_order[k]]) == 0) {
 964:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       r++;
 965:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     } else {
 966:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       /* if run length > 15, must emit special run-length-16 codes (0xF0) */
 967:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       while (r > 15) {
 968:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 	if (! emit_bits_s(state, actbl->ehufco[0xF0], actbl->ehufsi[0xF0]))
 969:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 	  return FALSE;
 970:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 	r -= 16;
 971:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       }
 972:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 973:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       temp2 = temp;
 974:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       if (temp < 0) {
 975:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 	temp = -temp;		/* temp is abs value of input */
 976:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 	/* This code assumes we are on a two's complement machine */
 977:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 	temp2--;
 978:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       }
 979:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 980:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       /* Find the number of bits needed for the magnitude of the coefficient */
 981:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       nbits = 1;		/* there must be at least one 1 bit */
 982:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       while ((temp >>= 1))
 983:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 	nbits++;
 984:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       /* Check for out-of-range coefficient values */
 985:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       if (nbits > MAX_COEF_BITS)
 986:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 	ERREXIT(state->cinfo, JERR_BAD_DCT_COEF);
 987:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 988:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       /* Emit Huffman symbol for run length / number of bits */
 989:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       i = (r << 4) + nbits;
 990:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       if (! emit_bits_s(state, actbl->ehufco[i], actbl->ehufsi[i]))
 991:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 	return FALSE;
 992:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 993:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       /* Emit that number of bits of the value, if positive, */
 994:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       /* or the complement of its magnitude, if negative. */
 995:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       if (! emit_bits_s(state, (unsigned int) temp2, nbits))
 996:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 	return FALSE;
 997:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 998:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       r = 0;
 999:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     }
1000:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   }
1001:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
1002:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   /* If the last coef(s) were zero, emit an end-of-block code */
1003:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   if (r > 0)
1004:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     if (! emit_bits_s(state, actbl->ehufco[0], actbl->ehufsi[0]))
1005:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       return FALSE;
1006:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
1007:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   return TRUE;
1008:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** }
1009:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
1010:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
1011:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** /*
1012:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****  * Encode and output one MCU's worth of Huffman-compressed coefficients.
1013:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****  */
1014:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
1015:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** METHODDEF(boolean)
1016:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** encode_mcu_huff (j_compress_ptr cinfo, JBLOCKROW *MCU_data)
1017:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** {
ARM GAS  /tmp/cccRWS2v.s 			page 21


1018:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   huff_entropy_ptr entropy = (huff_entropy_ptr) cinfo->entropy;
1019:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   working_state state;
1020:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   int blkn, ci;
1021:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   jpeg_component_info * compptr;
1022:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
1023:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   /* Load up working state */
1024:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   state.next_output_byte = cinfo->dest->next_output_byte;
1025:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   state.free_in_buffer = cinfo->dest->free_in_buffer;
1026:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   ASSIGN_STATE(state.cur, entropy->saved);
1027:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   state.cinfo = cinfo;
1028:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
1029:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   /* Emit restart marker if needed */
1030:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   if (cinfo->restart_interval) {
1031:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     if (entropy->restarts_to_go == 0)
1032:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       if (! emit_restart_s(&state, entropy->next_restart_num))
1033:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 	return FALSE;
1034:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   }
1035:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
1036:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   /* Encode the MCU data blocks */
1037:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   for (blkn = 0; blkn < cinfo->blocks_in_MCU; blkn++) {
1038:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     ci = cinfo->MCU_membership[blkn];
1039:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     compptr = cinfo->cur_comp_info[ci];
1040:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     if (! encode_one_block(&state,
1041:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 			   MCU_data[blkn][0], state.cur.last_dc_val[ci],
1042:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 			   entropy->dc_derived_tbls[compptr->dc_tbl_no],
1043:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 			   entropy->ac_derived_tbls[compptr->ac_tbl_no]))
1044:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       return FALSE;
1045:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     /* Update last_dc_val */
1046:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     state.cur.last_dc_val[ci] = MCU_data[blkn][0][0];
1047:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   }
1048:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
1049:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   /* Completed MCU, so update state */
1050:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   cinfo->dest->next_output_byte = state.next_output_byte;
1051:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   cinfo->dest->free_in_buffer = state.free_in_buffer;
1052:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   ASSIGN_STATE(entropy->saved, state.cur);
1053:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
1054:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   /* Update restart-interval state too */
1055:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   if (cinfo->restart_interval) {
1056:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     if (entropy->restarts_to_go == 0) {
1057:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       entropy->restarts_to_go = cinfo->restart_interval;
1058:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       entropy->next_restart_num++;
1059:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       entropy->next_restart_num &= 7;
1060:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     }
1061:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     entropy->restarts_to_go--;
1062:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   }
1063:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
1064:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   return TRUE;
1065:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** }
1066:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
1067:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
1068:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** /*
1069:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****  * Finish up at the end of a Huffman-compressed scan.
1070:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****  */
1071:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
1072:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** METHODDEF(void)
1073:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** finish_pass_huff (j_compress_ptr cinfo)
1074:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** {
ARM GAS  /tmp/cccRWS2v.s 			page 22


1075:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   huff_entropy_ptr entropy = (huff_entropy_ptr) cinfo->entropy;
1076:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   working_state state;
1077:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
1078:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   if (cinfo->progressive_mode) {
1079:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     entropy->next_output_byte = cinfo->dest->next_output_byte;
1080:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     entropy->free_in_buffer = cinfo->dest->free_in_buffer;
1081:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
1082:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     /* Flush out any buffered data */
1083:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     emit_eobrun(entropy);
1084:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     flush_bits_e(entropy);
1085:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
1086:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     cinfo->dest->next_output_byte = entropy->next_output_byte;
1087:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     cinfo->dest->free_in_buffer = entropy->free_in_buffer;
1088:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   } else {
1089:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     /* Load up working state ... flush_bits needs it */
1090:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     state.next_output_byte = cinfo->dest->next_output_byte;
1091:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     state.free_in_buffer = cinfo->dest->free_in_buffer;
1092:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     ASSIGN_STATE(state.cur, entropy->saved);
1093:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     state.cinfo = cinfo;
1094:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
1095:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     /* Flush out the last data */
1096:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     if (! flush_bits_s(&state))
1097:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       ERREXIT(cinfo, JERR_CANT_SUSPEND);
1098:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
1099:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     /* Update state */
1100:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     cinfo->dest->next_output_byte = state.next_output_byte;
1101:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     cinfo->dest->free_in_buffer = state.free_in_buffer;
1102:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     ASSIGN_STATE(entropy->saved, state.cur);
1103:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   }
1104:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** }
1105:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
1106:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
1107:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** /*
1108:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****  * Huffman coding optimization.
1109:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****  *
1110:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****  * We first scan the supplied data and count the number of uses of each symbol
1111:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****  * that is to be Huffman-coded. (This process MUST agree with the code above.)
1112:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****  * Then we build a Huffman coding tree for the observed counts.
1113:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****  * Symbols which are not needed at all for the particular image are not
1114:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****  * assigned any code, which saves space in the DHT marker as well as in
1115:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****  * the compressed data.
1116:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****  */
1117:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
1118:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
1119:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** /* Process a single block's worth of coefficients */
1120:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
1121:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** LOCAL(void)
1122:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** htest_one_block (j_compress_ptr cinfo, JCOEFPTR block, int last_dc_val,
1123:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 		 long dc_counts[], long ac_counts[])
1124:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** {
 129              		.loc 1 1124 0
 130              		.cfi_startproc
 131              		@ args = 4, pretend = 0, frame = 8
 132              		@ frame_needed = 0, uses_anonymous_args = 0
 133              	.LVL9:
 134 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 135              	.LCFI2:
ARM GAS  /tmp/cccRWS2v.s 			page 23


 136              		.cfi_def_cfa_offset 36
 137              		.cfi_offset 4, -36
 138              		.cfi_offset 5, -32
 139              		.cfi_offset 6, -28
 140              		.cfi_offset 7, -24
 141              		.cfi_offset 8, -20
 142              		.cfi_offset 9, -16
 143              		.cfi_offset 10, -12
 144              		.cfi_offset 11, -8
 145              		.cfi_offset 14, -4
 146 0004 83B0     		sub	sp, sp, #12
 147              	.LCFI3:
 148              		.cfi_def_cfa_offset 48
 149 0006 8146     		mov	r9, r0
 150 0008 0191     		str	r1, [sp, #4]
 151 000a 1E46     		mov	r6, r3
 152 000c 0C9F     		ldr	r7, [sp, #48]
1125:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   register int temp;
1126:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   register int nbits;
1127:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   register int k, r;
1128:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   int Se = cinfo->lim_Se;
 153              		.loc 1 1128 0
 154 000e D0F880A1 		ldr	r10, [r0, #384]
 155              	.LVL10:
1129:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   const int * natural_order = cinfo->natural_order;
 156              		.loc 1 1129 0
 157 0012 D0F87CB1 		ldr	fp, [r0, #380]
 158              	.LVL11:
1130:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   
1131:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   /* Encode the DC coefficient difference per section F.1.2.1 */
1132:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   
1133:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   temp = block[0] - last_dc_val;
 159              		.loc 1 1133 0
 160 0016 B1F90040 		ldrsh	r4, [r1]
 161              	.LVL12:
1134:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   if (temp < 0)
 162              		.loc 1 1134 0
 163 001a A41A     		subs	r4, r4, r2
 164              	.LVL13:
 165 001c 01D4     		bmi	.L23
 166              	.LVL14:
 167              	.L8:
1124:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   register int temp;
 168              		.loc 1 1124 0
 169 001e 0025     		movs	r5, #0
 170 0020 03E0     		b	.L9
 171              	.LVL15:
 172              	.L23:
1135:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     temp = -temp;
 173              		.loc 1 1135 0
 174 0022 6442     		negs	r4, r4
 175              	.LVL16:
 176 0024 FBE7     		b	.L8
 177              	.LVL17:
 178              	.L10:
1136:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   
1137:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   /* Find the number of bits needed for the magnitude of the coefficient */
ARM GAS  /tmp/cccRWS2v.s 			page 24


1138:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   nbits = 0;
1139:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   while (temp) {
1140:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     nbits++;
 179              		.loc 1 1140 0
 180 0026 0135     		adds	r5, r5, #1
 181              	.LVL18:
1141:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     temp >>= 1;
 182              		.loc 1 1141 0
 183 0028 6410     		asrs	r4, r4, #1
 184              	.LVL19:
 185              	.L9:
1139:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     nbits++;
 186              		.loc 1 1139 0
 187 002a 002C     		cmp	r4, #0
 188 002c FBD1     		bne	.L10
1142:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   }
1143:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   /* Check for out-of-range coefficient values.
1144:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****    * Since we're encoding a difference, the range limit is twice as much.
1145:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****    */
1146:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   if (nbits > MAX_COEF_BITS+1)
 189              		.loc 1 1146 0
 190 002e 0B2D     		cmp	r5, #11
 191 0030 08DD     		ble	.L11
1147:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     ERREXIT(cinfo, JERR_BAD_DCT_COEF);
 192              		.loc 1 1147 0
 193 0032 D9F80030 		ldr	r3, [r9]
 194              	.LVL20:
 195 0036 0622     		movs	r2, #6
 196              	.LVL21:
 197 0038 5A61     		str	r2, [r3, #20]
 198 003a D9F80030 		ldr	r3, [r9]
 199 003e 1B68     		ldr	r3, [r3]
 200 0040 4846     		mov	r0, r9
 201              	.LVL22:
 202 0042 9847     		blx	r3
 203              	.LVL23:
 204              	.L11:
1148:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
1149:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   /* Count the Huffman symbol for the number of bits */
1150:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   dc_counts[nbits]++;
 205              		.loc 1 1150 0
 206 0044 56F82530 		ldr	r3, [r6, r5, lsl #2]
 207 0048 0133     		adds	r3, r3, #1
 208 004a 46F82530 		str	r3, [r6, r5, lsl #2]
 209              	.LVL24:
1151:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   
1152:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   /* Encode the AC coefficients per section F.1.2.2 */
1153:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   
1154:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   r = 0;			/* r = run length of zeros */
1155:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   
1156:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   for (k = 1; k <= Se; k++) {
 210              		.loc 1 1156 0
 211 004e 4FF00108 		mov	r8, #1
 212 0052 25E0     		b	.L12
 213              	.LVL25:
 214              	.L15:
1157:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     if ((temp = block[natural_order[k]]) == 0) {
ARM GAS  /tmp/cccRWS2v.s 			page 25


1158:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       r++;
1159:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     } else {
1160:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       /* if run length > 15, must emit special run-length-16 codes (0xF0) */
1161:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       while (r > 15) {
1162:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 	ac_counts[0xF0]++;
 215              		.loc 1 1162 0
 216 0054 D7F8C033 		ldr	r3, [r7, #960]
 217 0058 0133     		adds	r3, r3, #1
 218 005a C7F8C033 		str	r3, [r7, #960]
1163:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 	r -= 16;
 219              		.loc 1 1163 0
 220 005e 103C     		subs	r4, r4, #16
 221              	.LVL26:
 222              	.L13:
1161:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 	ac_counts[0xF0]++;
 223              		.loc 1 1161 0
 224 0060 0F2C     		cmp	r4, #15
 225 0062 F7DC     		bgt	.L15
1164:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       }
1165:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       
1166:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       /* Find the number of bits needed for the magnitude of the coefficient */
1167:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       if (temp < 0)
 226              		.loc 1 1167 0
 227 0064 002D     		cmp	r5, #0
 228 0066 01DB     		blt	.L24
 229              	.L16:
1124:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   register int temp;
 230              		.loc 1 1124 0
 231 0068 0126     		movs	r6, #1
 232 006a 02E0     		b	.L17
 233              	.L24:
1168:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 	temp = -temp;
 234              		.loc 1 1168 0
 235 006c 6D42     		negs	r5, r5
 236              	.LVL27:
 237 006e FBE7     		b	.L16
 238              	.LVL28:
 239              	.L18:
1169:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       
1170:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       /* Find the number of bits needed for the magnitude of the coefficient */
1171:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       nbits = 1;		/* there must be at least one 1 bit */
1172:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       while ((temp >>= 1))
1173:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 	nbits++;
 240              		.loc 1 1173 0
 241 0070 0136     		adds	r6, r6, #1
 242              	.LVL29:
 243              	.L17:
1172:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 	nbits++;
 244              		.loc 1 1172 0
 245 0072 6D10     		asrs	r5, r5, #1
 246              	.LVL30:
 247 0074 FCD1     		bne	.L18
1174:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       /* Check for out-of-range coefficient values */
1175:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       if (nbits > MAX_COEF_BITS)
 248              		.loc 1 1175 0
 249 0076 0A2E     		cmp	r6, #10
 250 0078 08DD     		ble	.L19
ARM GAS  /tmp/cccRWS2v.s 			page 26


1176:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 	ERREXIT(cinfo, JERR_BAD_DCT_COEF);
 251              		.loc 1 1176 0
 252 007a D9F80030 		ldr	r3, [r9]
 253 007e 0622     		movs	r2, #6
 254 0080 5A61     		str	r2, [r3, #20]
 255 0082 D9F80030 		ldr	r3, [r9]
 256 0086 1B68     		ldr	r3, [r3]
 257 0088 4846     		mov	r0, r9
 258 008a 9847     		blx	r3
 259              	.LVL31:
 260              	.L19:
1177:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       
1178:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       /* Count Huffman symbol for run length / number of bits */
1179:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       ac_counts[(r << 4) + nbits]++;
 261              		.loc 1 1179 0
 262 008c 06EB0414 		add	r4, r6, r4, lsl #4
 263              	.LVL32:
 264 0090 57F82430 		ldr	r3, [r7, r4, lsl #2]
 265 0094 0133     		adds	r3, r3, #1
 266 0096 47F82430 		str	r3, [r7, r4, lsl #2]
 267              	.LVL33:
1180:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       
1181:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       r = 0;
 268              		.loc 1 1181 0
 269 009a 2C46     		mov	r4, r5
 270              	.LVL34:
 271              	.L14:
1156:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     if ((temp = block[natural_order[k]]) == 0) {
 272              		.loc 1 1156 0 discriminator 2
 273 009c 08F10108 		add	r8, r8, #1
 274              	.LVL35:
 275              	.L12:
1156:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     if ((temp = block[natural_order[k]]) == 0) {
 276              		.loc 1 1156 0 is_stmt 0 discriminator 1
 277 00a0 D045     		cmp	r8, r10
 278 00a2 08DC     		bgt	.L25
1157:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       r++;
 279              		.loc 1 1157 0 is_stmt 1
 280 00a4 5BF82830 		ldr	r3, [fp, r8, lsl #2]
 281 00a8 019A     		ldr	r2, [sp, #4]
 282 00aa 32F91350 		ldrsh	r5, [r2, r3, lsl #1]
 283              	.LVL36:
 284 00ae 002D     		cmp	r5, #0
 285 00b0 D6D1     		bne	.L13
1158:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     } else {
 286              		.loc 1 1158 0
 287 00b2 0134     		adds	r4, r4, #1
 288              	.LVL37:
 289 00b4 F2E7     		b	.L14
 290              	.LVL38:
 291              	.L25:
1182:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     }
1183:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   }
1184:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
1185:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   /* If the last coef(s) were zero, emit an end-of-block code */
1186:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   if (r > 0)
 292              		.loc 1 1186 0
ARM GAS  /tmp/cccRWS2v.s 			page 27


 293 00b6 002C     		cmp	r4, #0
 294 00b8 02DD     		ble	.L7
1187:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     ac_counts[0]++;
 295              		.loc 1 1187 0
 296 00ba 3B68     		ldr	r3, [r7]
 297 00bc 0133     		adds	r3, r3, #1
 298 00be 3B60     		str	r3, [r7]
 299              	.L7:
1188:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** }
 300              		.loc 1 1188 0
 301 00c0 03B0     		add	sp, sp, #12
 302              	.LCFI4:
 303              		.cfi_def_cfa_offset 36
 304              		@ sp needed
 305 00c2 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 306              		.cfi_endproc
 307              	.LFE23:
 309              		.section	.text.encode_mcu_gather,"ax",%progbits
 310              		.align	1
 311              		.syntax unified
 312              		.thumb
 313              		.thumb_func
 314              		.fpu fpv5-sp-d16
 316              	encode_mcu_gather:
 317              	.LFB24:
1189:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
1190:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
1191:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** /*
1192:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****  * Trial-encode one MCU's worth of Huffman-compressed coefficients.
1193:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****  * No data is actually output, so no suspension return is possible.
1194:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****  */
1195:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
1196:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** METHODDEF(boolean)
1197:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** encode_mcu_gather (j_compress_ptr cinfo, JBLOCKROW *MCU_data)
1198:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** {
 318              		.loc 1 1198 0
 319              		.cfi_startproc
 320              		@ args = 0, pretend = 0, frame = 0
 321              		@ frame_needed = 0, uses_anonymous_args = 0
 322              	.LVL39:
 323 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 324              	.LCFI5:
 325              		.cfi_def_cfa_offset 24
 326              		.cfi_offset 4, -24
 327              		.cfi_offset 5, -20
 328              		.cfi_offset 6, -16
 329              		.cfi_offset 7, -12
 330              		.cfi_offset 8, -8
 331              		.cfi_offset 14, -4
 332 0004 82B0     		sub	sp, sp, #8
 333              	.LCFI6:
 334              		.cfi_def_cfa_offset 32
 335 0006 0646     		mov	r6, r0
 336 0008 8846     		mov	r8, r1
1199:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   huff_entropy_ptr entropy = (huff_entropy_ptr) cinfo->entropy;
 337              		.loc 1 1199 0
 338 000a D0F8A471 		ldr	r7, [r0, #420]
ARM GAS  /tmp/cccRWS2v.s 			page 28


 339              	.LVL40:
1200:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   int blkn, ci;
1201:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   jpeg_component_info * compptr;
1202:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
1203:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   /* Take care of restart intervals if needed */
1204:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   if (cinfo->restart_interval) {
 340              		.loc 1 1204 0
 341 000e D0F8EC30 		ldr	r3, [r0, #236]
 342 0012 23B1     		cbz	r3, .L27
1205:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     if (entropy->restarts_to_go == 0) {
 343              		.loc 1 1205 0
 344 0014 7B6A     		ldr	r3, [r7, #36]
 345 0016 93B1     		cbz	r3, .L33
 346              	.LVL41:
 347              	.L29:
1206:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       /* Re-initialize DC predictions to 0 */
1207:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       for (ci = 0; ci < cinfo->comps_in_scan; ci++)
1208:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 	entropy->saved.last_dc_val[ci] = 0;
1209:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       /* Update restart state */
1210:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       entropy->restarts_to_go = cinfo->restart_interval;
1211:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     }
1212:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     entropy->restarts_to_go--;
 348              		.loc 1 1212 0
 349 0018 7B6A     		ldr	r3, [r7, #36]
 350 001a 013B     		subs	r3, r3, #1
 351 001c 7B62     		str	r3, [r7, #36]
 352              	.L27:
1207:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 	entropy->saved.last_dc_val[ci] = 0;
 353              		.loc 1 1207 0 discriminator 1
 354 001e 0025     		movs	r5, #0
 355 0020 32E0     		b	.L31
 356              	.LVL42:
 357              	.L30:
1208:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       /* Update restart state */
 358              		.loc 1 1208 0 discriminator 3
 359 0022 1A1D     		adds	r2, r3, #4
 360 0024 07EB8202 		add	r2, r7, r2, lsl #2
 361 0028 0021     		movs	r1, #0
 362 002a 5160     		str	r1, [r2, #4]
1207:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 	entropy->saved.last_dc_val[ci] = 0;
 363              		.loc 1 1207 0 discriminator 3
 364 002c 0133     		adds	r3, r3, #1
 365              	.LVL43:
 366              	.L28:
1207:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 	entropy->saved.last_dc_val[ci] = 0;
 367              		.loc 1 1207 0 is_stmt 0 discriminator 1
 368 002e D6F82021 		ldr	r2, [r6, #288]
 369 0032 9A42     		cmp	r2, r3
 370 0034 F5DC     		bgt	.L30
1210:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     }
 371              		.loc 1 1210 0 is_stmt 1
 372 0036 D6F8EC30 		ldr	r3, [r6, #236]
 373              	.LVL44:
 374 003a 7B62     		str	r3, [r7, #36]
 375 003c ECE7     		b	.L29
 376              	.LVL45:
 377              	.L33:
ARM GAS  /tmp/cccRWS2v.s 			page 29


1207:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 	entropy->saved.last_dc_val[ci] = 0;
 378              		.loc 1 1207 0
 379 003e 0023     		movs	r3, #0
 380 0040 F5E7     		b	.L28
 381              	.LVL46:
 382              	.L32:
1213:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   }
1214:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
1215:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   for (blkn = 0; blkn < cinfo->blocks_in_MCU; blkn++) {
1216:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     ci = cinfo->MCU_membership[blkn];
 383              		.loc 1 1216 0 discriminator 3
 384 0042 05F15003 		add	r3, r5, #80
 385 0046 56F82340 		ldr	r4, [r6, r3, lsl #2]
 386              	.LVL47:
1217:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     compptr = cinfo->cur_comp_info[ci];
 387              		.loc 1 1217 0 discriminator 3
 388 004a 04F14803 		add	r3, r4, #72
 389 004e 06EB8303 		add	r3, r6, r3, lsl #2
 390 0052 5A68     		ldr	r2, [r3, #4]
 391              	.LVL48:
1218:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     htest_one_block(cinfo, MCU_data[blkn][0], entropy->saved.last_dc_val[ci],
1219:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 		    entropy->dc_count_ptrs[compptr->dc_tbl_no],
 392              		.loc 1 1219 0 discriminator 3
 393 0054 5369     		ldr	r3, [r2, #20]
1220:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 		    entropy->ac_count_ptrs[compptr->ac_tbl_no]);
 394              		.loc 1 1220 0 discriminator 3
 395 0056 9169     		ldr	r1, [r2, #24]
1218:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     htest_one_block(cinfo, MCU_data[blkn][0], entropy->saved.last_dc_val[ci],
 396              		.loc 1 1218 0 discriminator 3
 397 0058 1233     		adds	r3, r3, #18
 398 005a 07EB8303 		add	r3, r7, r3, lsl #2
 399 005e 5B68     		ldr	r3, [r3, #4]
 400 0060 0434     		adds	r4, r4, #4
 401              	.LVL49:
 402 0062 07EB8404 		add	r4, r7, r4, lsl #2
 403 0066 6268     		ldr	r2, [r4, #4]
 404              	.LVL50:
 405 0068 1631     		adds	r1, r1, #22
 406 006a 07EB8101 		add	r1, r7, r1, lsl #2
 407 006e 4968     		ldr	r1, [r1, #4]
 408 0070 0091     		str	r1, [sp]
 409              	.LVL51:
 410 0072 58F82510 		ldr	r1, [r8, r5, lsl #2]
 411 0076 3046     		mov	r0, r6
 412 0078 FFF7FEFF 		bl	htest_one_block
 413              	.LVL52:
1221:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     entropy->saved.last_dc_val[ci] = MCU_data[blkn][0][0];
 414              		.loc 1 1221 0 discriminator 3
 415 007c 58F82530 		ldr	r3, [r8, r5, lsl #2]
 416 0080 B3F90030 		ldrsh	r3, [r3]
 417 0084 6360     		str	r3, [r4, #4]
1215:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     ci = cinfo->MCU_membership[blkn];
 418              		.loc 1 1215 0 discriminator 3
 419 0086 0135     		adds	r5, r5, #1
 420              	.LVL53:
 421              	.L31:
1215:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     ci = cinfo->MCU_membership[blkn];
ARM GAS  /tmp/cccRWS2v.s 			page 30


 422              		.loc 1 1215 0 is_stmt 0 discriminator 1
 423 0088 D6F83C31 		ldr	r3, [r6, #316]
 424 008c AB42     		cmp	r3, r5
 425 008e D8DC     		bgt	.L32
1222:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   }
1223:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
1224:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   return TRUE;
1225:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** }
 426              		.loc 1 1225 0 is_stmt 1
 427 0090 0120     		movs	r0, #1
 428 0092 02B0     		add	sp, sp, #8
 429              	.LCFI7:
 430              		.cfi_def_cfa_offset 24
 431              		@ sp needed
 432 0094 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 433              		.cfi_endproc
 434              	.LFE24:
 436              		.section	.text.jpeg_make_c_derived_tbl,"ax",%progbits
 437              		.align	1
 438              		.syntax unified
 439              		.thumb
 440              		.thumb_func
 441              		.fpu fpv5-sp-d16
 443              	jpeg_make_c_derived_tbl:
 444              	.LFB3:
 163:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   JHUFF_TBL *htbl;
 445              		.loc 1 163 0
 446              		.cfi_startproc
 447              		@ args = 0, pretend = 0, frame = 1288
 448              		@ frame_needed = 0, uses_anonymous_args = 0
 449              	.LVL54:
 450 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 451              	.LCFI8:
 452              		.cfi_def_cfa_offset 36
 453              		.cfi_offset 4, -36
 454              		.cfi_offset 5, -32
 455              		.cfi_offset 6, -28
 456              		.cfi_offset 7, -24
 457              		.cfi_offset 8, -20
 458              		.cfi_offset 9, -16
 459              		.cfi_offset 10, -12
 460              		.cfi_offset 11, -8
 461              		.cfi_offset 14, -4
 462 0004 ADF20C5D 		subw	sp, sp, #1292
 463              	.LCFI9:
 464              		.cfi_def_cfa_offset 1328
 465 0008 0746     		mov	r7, r0
 466 000a 8A46     		mov	r10, r1
 467 000c 1446     		mov	r4, r2
 468 000e 1D46     		mov	r5, r3
 176:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     ERREXIT1(cinfo, JERR_NO_HUFF_TABLE, tblno);
 469              		.loc 1 176 0
 470 0010 032A     		cmp	r2, #3
 471 0012 07D9     		bls	.L36
 177:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   htbl =
 472              		.loc 1 177 0
 473 0014 0368     		ldr	r3, [r0]
ARM GAS  /tmp/cccRWS2v.s 			page 31


 474              	.LVL55:
 475 0016 3422     		movs	r2, #52
 476              	.LVL56:
 477 0018 5A61     		str	r2, [r3, #20]
 478 001a 0368     		ldr	r3, [r0]
 479 001c 9C61     		str	r4, [r3, #24]
 480 001e 0368     		ldr	r3, [r0]
 481 0020 1B68     		ldr	r3, [r3]
 482 0022 9847     		blx	r3
 483              	.LVL57:
 484              	.L36:
 179:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   if (htbl == NULL)
 485              		.loc 1 179 0
 486 0024 BAF1000F 		cmp	r10, #0
 487 0028 1ED0     		beq	.L37
 179:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   if (htbl == NULL)
 488              		.loc 1 179 0 is_stmt 0 discriminator 1
 489 002a 04F11E03 		add	r3, r4, #30
 490 002e 57F82380 		ldr	r8, [r7, r3, lsl #2]
 491              	.L38:
 492              	.LVL58:
 180:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     ERREXIT1(cinfo, JERR_NO_HUFF_TABLE, tblno);
 493              		.loc 1 180 0 is_stmt 1
 494 0032 B8F1000F 		cmp	r8, #0
 495 0036 08D1     		bne	.L39
 181:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 496              		.loc 1 181 0
 497 0038 3B68     		ldr	r3, [r7]
 498 003a 3422     		movs	r2, #52
 499 003c 5A61     		str	r2, [r3, #20]
 500 003e 3B68     		ldr	r3, [r7]
 501 0040 9C61     		str	r4, [r3, #24]
 502 0042 3B68     		ldr	r3, [r7]
 503 0044 1B68     		ldr	r3, [r3]
 504 0046 3846     		mov	r0, r7
 505 0048 9847     		blx	r3
 506              	.LVL59:
 507              	.L39:
 184:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     *pdtbl = (c_derived_tbl *)
 508              		.loc 1 184 0
 509 004a 2B68     		ldr	r3, [r5]
 510 004c 3BB9     		cbnz	r3, .L40
 186:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 				  SIZEOF(c_derived_tbl));
 511              		.loc 1 186 0
 512 004e 7B68     		ldr	r3, [r7, #4]
 513 0050 1B68     		ldr	r3, [r3]
 514 0052 4FF4A062 		mov	r2, #1280
 515 0056 0121     		movs	r1, #1
 516 0058 3846     		mov	r0, r7
 517 005a 9847     		blx	r3
 518              	.LVL60:
 185:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       (*cinfo->mem->alloc_small) ((j_common_ptr) cinfo, JPOOL_IMAGE,
 519              		.loc 1 185 0
 520 005c 2860     		str	r0, [r5]
 521              	.L40:
 188:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   
 522              		.loc 1 188 0
ARM GAS  /tmp/cccRWS2v.s 			page 32


 523 005e D5F80090 		ldr	r9, [r5]
 524              	.LVL61:
 193:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     i = (int) htbl->bits[l];
 525              		.loc 1 193 0
 526 0062 0126     		movs	r6, #1
 192:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   for (l = 1; l <= 16; l++) {
 527              		.loc 1 192 0
 528 0064 0025     		movs	r5, #0
 529              	.LVL62:
 193:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     i = (int) htbl->bits[l];
 530              		.loc 1 193 0
 531 0066 0DE0     		b	.L41
 532              	.LVL63:
 533              	.L37:
 179:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   if (htbl == NULL)
 534              		.loc 1 179 0 discriminator 2
 535 0068 04F12203 		add	r3, r4, #34
 536 006c 57F82380 		ldr	r8, [r7, r3, lsl #2]
 537 0070 DFE7     		b	.L38
 538              	.LVL64:
 539              	.L44:
 198:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   }
 540              		.loc 1 198 0
 541 0072 0DF20442 		addw	r2, sp, #1028
 542 0076 5655     		strb	r6, [r2, r5]
 197:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       huffsize[p++] = (char) l;
 543              		.loc 1 197 0
 544 0078 1C46     		mov	r4, r3
 198:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   }
 545              		.loc 1 198 0
 546 007a 0135     		adds	r5, r5, #1
 547              	.LVL65:
 548              	.L43:
 197:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       huffsize[p++] = (char) l;
 549              		.loc 1 197 0
 550 007c 631E     		subs	r3, r4, #1
 551              	.LVL66:
 552 007e 002C     		cmp	r4, #0
 553 0080 F7D1     		bne	.L44
 193:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     i = (int) htbl->bits[l];
 554              		.loc 1 193 0 discriminator 2
 555 0082 0136     		adds	r6, r6, #1
 556              	.LVL67:
 557              	.L41:
 193:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     i = (int) htbl->bits[l];
 558              		.loc 1 193 0 is_stmt 0 discriminator 1
 559 0084 102E     		cmp	r6, #16
 560 0086 0DDC     		bgt	.L57
 194:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     if (i < 0 || p + i > 256)	/* protect against table overrun */
 561              		.loc 1 194 0 is_stmt 1
 562 0088 18F80640 		ldrb	r4, [r8, r6]	@ zero_extendqisi2
 563              	.LVL68:
 195:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       ERREXIT(cinfo, JERR_BAD_HUFF_TABLE);
 564              		.loc 1 195 0
 565 008c 2B19     		adds	r3, r5, r4
 566 008e B3F5807F 		cmp	r3, #256
 567 0092 F3DD     		ble	.L43
ARM GAS  /tmp/cccRWS2v.s 			page 33


 196:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     while (i--)
 568              		.loc 1 196 0
 569 0094 3B68     		ldr	r3, [r7]
 570 0096 0922     		movs	r2, #9
 571 0098 5A61     		str	r2, [r3, #20]
 572 009a 3B68     		ldr	r3, [r7]
 573 009c 1B68     		ldr	r3, [r3]
 574 009e 3846     		mov	r0, r7
 575 00a0 9847     		blx	r3
 576              	.LVL69:
 577 00a2 EBE7     		b	.L43
 578              	.LVL70:
 579              	.L57:
 200:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   lastp = p;
 580              		.loc 1 200 0
 581 00a4 0DF20443 		addw	r3, sp, #1028
 582 00a8 0024     		movs	r4, #0
 583 00aa 5C55     		strb	r4, [r3, r5]
 584              	.LVL71:
 207:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   p = 0;
 585              		.loc 1 207 0
 586 00ac 9DF804B4 		ldrb	fp, [sp, #1028]	@ zero_extendqisi2
 587              	.LVL72:
 206:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   si = huffsize[0];
 588              		.loc 1 206 0
 589 00b0 2646     		mov	r6, r4
 590              	.LVL73:
 209:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     while (((int) huffsize[p]) == si) {
 591              		.loc 1 209 0
 592 00b2 17E0     		b	.L46
 593              	.LVL74:
 594              	.L47:
 211:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       code++;
 595              		.loc 1 211 0
 596 00b4 4DF82460 		str	r6, [sp, r4, lsl #2]
 212:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     }
 597              		.loc 1 212 0
 598 00b8 0136     		adds	r6, r6, #1
 599              	.LVL75:
 211:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       code++;
 600              		.loc 1 211 0
 601 00ba 0134     		adds	r4, r4, #1
 602              	.LVL76:
 603              	.L49:
 210:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       huffcode[p++] = code;
 604              		.loc 1 210 0
 605 00bc 0DF20443 		addw	r3, sp, #1028
 606 00c0 1B5D     		ldrb	r3, [r3, r4]	@ zero_extendqisi2
 607 00c2 5B45     		cmp	r3, fp
 608 00c4 F6D0     		beq	.L47
 217:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       ERREXIT(cinfo, JERR_BAD_HUFF_TABLE);
 609              		.loc 1 217 0
 610 00c6 0123     		movs	r3, #1
 611 00c8 03FA0BF3 		lsl	r3, r3, fp
 612 00cc B342     		cmp	r3, r6
 613 00ce 06DC     		bgt	.L48
 218:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     code <<= 1;
ARM GAS  /tmp/cccRWS2v.s 			page 34


 614              		.loc 1 218 0
 615 00d0 3B68     		ldr	r3, [r7]
 616 00d2 0922     		movs	r2, #9
 617 00d4 5A61     		str	r2, [r3, #20]
 618 00d6 3B68     		ldr	r3, [r7]
 619 00d8 1B68     		ldr	r3, [r3]
 620 00da 3846     		mov	r0, r7
 621 00dc 9847     		blx	r3
 622              	.LVL77:
 623              	.L48:
 219:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     si++;
 624              		.loc 1 219 0
 625 00de 7600     		lsls	r6, r6, #1
 626              	.LVL78:
 220:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   }
 627              		.loc 1 220 0
 628 00e0 0BF1010B 		add	fp, fp, #1
 629              	.LVL79:
 630              	.L46:
 209:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     while (((int) huffsize[p]) == si) {
 631              		.loc 1 209 0
 632 00e4 0DF20443 		addw	r3, sp, #1028
 633 00e8 1B5D     		ldrb	r3, [r3, r4]	@ zero_extendqisi2
 634 00ea 002B     		cmp	r3, #0
 635 00ec E6D1     		bne	.L49
 230:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 636              		.loc 1 230 0
 637 00ee 4FF48072 		mov	r2, #256
 638 00f2 0021     		movs	r1, #0
 639 00f4 09F58060 		add	r0, r9, #1024
 640 00f8 FFF7FEFF 		bl	memset
 641              	.LVL80:
 237:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 642              		.loc 1 237 0
 643 00fc BAF1000F 		cmp	r10, #0
 644 0100 03D0     		beq	.L55
 645 0102 4FF00F0A 		mov	r10, #15
 646              	.LVL81:
 647              	.L50:
 239:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     i = htbl->huffval[p];
 648              		.loc 1 239 0 discriminator 4
 649 0106 0024     		movs	r4, #0
 650 0108 14E0     		b	.L51
 651              	.LVL82:
 652              	.L55:
 237:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 653              		.loc 1 237 0
 654 010a 4FF0FF0A 		mov	r10, #255
 655              	.LVL83:
 656 010e FAE7     		b	.L50
 657              	.LVL84:
 658              	.L52:
 242:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     dtbl->ehufco[i] = huffcode[p];
 659              		.loc 1 242 0
 660 0110 3B68     		ldr	r3, [r7]
 661 0112 0922     		movs	r2, #9
 662 0114 5A61     		str	r2, [r3, #20]
ARM GAS  /tmp/cccRWS2v.s 			page 35


 663 0116 3B68     		ldr	r3, [r7]
 664 0118 1B68     		ldr	r3, [r3]
 665 011a 3846     		mov	r0, r7
 666 011c 9847     		blx	r3
 667              	.LVL85:
 668              	.L53:
 243:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     dtbl->ehufsi[i] = huffsize[p];
 669              		.loc 1 243 0 discriminator 2
 670 011e 5DF82430 		ldr	r3, [sp, r4, lsl #2]
 671 0122 49F82630 		str	r3, [r9, r6, lsl #2]
 244:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   }
 672              		.loc 1 244 0 discriminator 2
 673 0126 0DF20443 		addw	r3, sp, #1028
 674 012a 1B5D     		ldrb	r3, [r3, r4]	@ zero_extendqisi2
 675 012c 4E44     		add	r6, r6, r9
 676              	.LVL86:
 677 012e 86F80034 		strb	r3, [r6, #1024]
 239:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     i = htbl->huffval[p];
 678              		.loc 1 239 0 discriminator 2
 679 0132 0134     		adds	r4, r4, #1
 680              	.LVL87:
 681              	.L51:
 239:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     i = htbl->huffval[p];
 682              		.loc 1 239 0 is_stmt 0 discriminator 1
 683 0134 A542     		cmp	r5, r4
 684 0136 0BDD     		ble	.L58
 240:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     if (i < 0 || i > maxsymbol || dtbl->ehufsi[i])
 685              		.loc 1 240 0 is_stmt 1
 686 0138 08EB0403 		add	r3, r8, r4
 687 013c 5E7C     		ldrb	r6, [r3, #17]	@ zero_extendqisi2
 688              	.LVL88:
 241:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       ERREXIT(cinfo, JERR_BAD_HUFF_TABLE);
 689              		.loc 1 241 0
 690 013e B245     		cmp	r10, r6
 691 0140 E6DB     		blt	.L52
 241:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       ERREXIT(cinfo, JERR_BAD_HUFF_TABLE);
 692              		.loc 1 241 0 is_stmt 0 discriminator 1
 693 0142 09EB0603 		add	r3, r9, r6
 694 0146 93F80034 		ldrb	r3, [r3, #1024]	@ zero_extendqisi2
 695 014a 002B     		cmp	r3, #0
 696 014c E7D0     		beq	.L53
 697 014e DFE7     		b	.L52
 698              	.LVL89:
 699              	.L58:
 246:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 700              		.loc 1 246 0 is_stmt 1
 701 0150 0DF20C5D 		addw	sp, sp, #1292
 702              	.LCFI10:
 703              		.cfi_def_cfa_offset 36
 704              		@ sp needed
 705 0154 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 706              		.cfi_endproc
 707              	.LFE3:
 709              		.section	.text.start_pass_huff,"ax",%progbits
 710              		.align	1
 711              		.syntax unified
 712              		.thumb
ARM GAS  /tmp/cccRWS2v.s 			page 36


 713              		.thumb_func
 714              		.fpu fpv5-sp-d16
 716              	start_pass_huff:
 717              	.LFB27:
1226:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
1227:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
1228:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** /*
1229:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****  * Generate the best Huffman code table for the given counts, fill htbl.
1230:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****  *
1231:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****  * The JPEG standard requires that no symbol be assigned a codeword of all
1232:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****  * one bits (so that padding bits added at the end of a compressed segment
1233:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****  * can't look like a valid code).  Because of the canonical ordering of
1234:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****  * codewords, this just means that there must be an unused slot in the
1235:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****  * longest codeword length category.  Section K.2 of the JPEG spec suggests
1236:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****  * reserving such a slot by pretending that symbol 256 is a valid symbol
1237:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****  * with count 1.  In theory that's not optimal; giving it count zero but
1238:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****  * including it in the symbol set anyway should give a better Huffman code.
1239:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****  * But the theoretically better code actually seems to come out worse in
1240:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****  * practice, because it produces more all-ones bytes (which incur stuffed
1241:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****  * zero bytes in the final file).  In any case the difference is tiny.
1242:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****  *
1243:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****  * The JPEG standard requires Huffman codes to be no more than 16 bits long.
1244:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****  * If some symbols have a very small but nonzero probability, the Huffman tree
1245:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****  * must be adjusted to meet the code length restriction.  We currently use
1246:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****  * the adjustment method suggested in JPEG section K.2.  This method is *not*
1247:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****  * optimal; it may not choose the best possible limited-length code.  But
1248:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****  * typically only very-low-frequency symbols will be given less-than-optimal
1249:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****  * lengths, so the code is almost optimal.  Experimental comparisons against
1250:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****  * an optimal limited-length-code algorithm indicate that the difference is
1251:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****  * microscopic --- usually less than a hundredth of a percent of total size.
1252:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****  * So the extra complexity of an optimal algorithm doesn't seem worthwhile.
1253:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****  */
1254:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
1255:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** LOCAL(void)
1256:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** jpeg_gen_optimal_table (j_compress_ptr cinfo, JHUFF_TBL * htbl, long freq[])
1257:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** {
1258:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** #define MAX_CLEN 32		/* assumed maximum initial code length */
1259:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   UINT8 bits[MAX_CLEN+1];	/* bits[k] = # of symbols with code length k */
1260:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   int codesize[257];		/* codesize[k] = code length of symbol k */
1261:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   int others[257];		/* next symbol in current branch of tree */
1262:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   int c1, c2;
1263:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   int p, i, j;
1264:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   long v;
1265:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
1266:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   /* This algorithm is explained in section K.2 of the JPEG standard */
1267:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
1268:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   MEMZERO(bits, SIZEOF(bits));
1269:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   MEMZERO(codesize, SIZEOF(codesize));
1270:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   for (i = 0; i < 257; i++)
1271:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     others[i] = -1;		/* init links to empty */
1272:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   
1273:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   freq[256] = 1;		/* make sure 256 has a nonzero count */
1274:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   /* Including the pseudo-symbol 256 in the Huffman procedure guarantees
1275:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****    * that no real symbol is given code-value of all ones, because 256
1276:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****    * will be placed last in the largest codeword category.
1277:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****    */
1278:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
ARM GAS  /tmp/cccRWS2v.s 			page 37


1279:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   /* Huffman's basic algorithm to assign optimal code lengths to symbols */
1280:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
1281:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   for (;;) {
1282:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     /* Find the smallest nonzero frequency, set c1 = its symbol */
1283:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     /* In case of ties, take the larger symbol number */
1284:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     c1 = -1;
1285:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     v = 1000000000L;
1286:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     for (i = 0; i <= 256; i++) {
1287:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       if (freq[i] && freq[i] <= v) {
1288:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 	v = freq[i];
1289:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 	c1 = i;
1290:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       }
1291:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     }
1292:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
1293:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     /* Find the next smallest nonzero frequency, set c2 = its symbol */
1294:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     /* In case of ties, take the larger symbol number */
1295:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     c2 = -1;
1296:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     v = 1000000000L;
1297:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     for (i = 0; i <= 256; i++) {
1298:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       if (freq[i] && freq[i] <= v && i != c1) {
1299:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 	v = freq[i];
1300:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 	c2 = i;
1301:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       }
1302:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     }
1303:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
1304:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     /* Done if we've merged everything into one frequency */
1305:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     if (c2 < 0)
1306:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       break;
1307:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     
1308:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     /* Else merge the two counts/trees */
1309:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     freq[c1] += freq[c2];
1310:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     freq[c2] = 0;
1311:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
1312:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     /* Increment the codesize of everything in c1's tree branch */
1313:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     codesize[c1]++;
1314:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     while (others[c1] >= 0) {
1315:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       c1 = others[c1];
1316:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       codesize[c1]++;
1317:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     }
1318:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     
1319:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     others[c1] = c2;		/* chain c2 onto c1's tree branch */
1320:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     
1321:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     /* Increment the codesize of everything in c2's tree branch */
1322:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     codesize[c2]++;
1323:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     while (others[c2] >= 0) {
1324:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       c2 = others[c2];
1325:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       codesize[c2]++;
1326:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     }
1327:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   }
1328:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
1329:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   /* Now count the number of symbols of each code length */
1330:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   for (i = 0; i <= 256; i++) {
1331:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     if (codesize[i]) {
1332:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       /* The JPEG standard seems to think that this can't happen, */
1333:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       /* but I'm paranoid... */
1334:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       if (codesize[i] > MAX_CLEN)
1335:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 	ERREXIT(cinfo, JERR_HUFF_CLEN_OVERFLOW);
ARM GAS  /tmp/cccRWS2v.s 			page 38


1336:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
1337:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       bits[codesize[i]]++;
1338:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     }
1339:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   }
1340:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
1341:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   /* JPEG doesn't allow symbols with code lengths over 16 bits, so if the pure
1342:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****    * Huffman procedure assigned any such lengths, we must adjust the coding.
1343:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****    * Here is what the JPEG spec says about how this next bit works:
1344:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****    * Since symbols are paired for the longest Huffman code, the symbols are
1345:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****    * removed from this length category two at a time.  The prefix for the pair
1346:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****    * (which is one bit shorter) is allocated to one of the pair; then,
1347:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****    * skipping the BITS entry for that prefix length, a code word from the next
1348:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****    * shortest nonzero BITS entry is converted into a prefix for two code words
1349:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****    * one bit longer.
1350:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****    */
1351:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   
1352:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   for (i = MAX_CLEN; i > 16; i--) {
1353:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     while (bits[i] > 0) {
1354:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       j = i - 2;		/* find length of new prefix to be used */
1355:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       while (bits[j] == 0)
1356:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 	j--;
1357:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       
1358:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       bits[i] -= 2;		/* remove two symbols */
1359:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       bits[i-1]++;		/* one goes in this length */
1360:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       bits[j+1] += 2;		/* two new symbols in this length */
1361:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       bits[j]--;		/* symbol of this length is now a prefix */
1362:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     }
1363:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   }
1364:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
1365:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   /* Remove the count for the pseudo-symbol 256 from the largest codelength */
1366:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   while (bits[i] == 0)		/* find largest codelength still in use */
1367:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     i--;
1368:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   bits[i]--;
1369:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   
1370:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   /* Return final symbol counts (only for lengths 0..16) */
1371:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   MEMCOPY(htbl->bits, bits, SIZEOF(htbl->bits));
1372:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   
1373:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   /* Return a list of the symbols sorted by code length */
1374:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   /* It's not real clear to me why we don't need to consider the codelength
1375:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****    * changes made above, but the JPEG spec seems to think this works.
1376:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****    */
1377:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   p = 0;
1378:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   for (i = 1; i <= MAX_CLEN; i++) {
1379:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     for (j = 0; j <= 255; j++) {
1380:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       if (codesize[j] == i) {
1381:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 	htbl->huffval[p] = (UINT8) j;
1382:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 	p++;
1383:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       }
1384:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     }
1385:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   }
1386:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
1387:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   /* Set sent_table FALSE so updated table will be written to JPEG file. */
1388:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   htbl->sent_table = FALSE;
1389:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** }
1390:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
1391:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
1392:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** /*
ARM GAS  /tmp/cccRWS2v.s 			page 39


1393:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****  * Finish up a statistics-gathering pass and create the new Huffman tables.
1394:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****  */
1395:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
1396:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** METHODDEF(void)
1397:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** finish_pass_gather (j_compress_ptr cinfo)
1398:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** {
1399:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   huff_entropy_ptr entropy = (huff_entropy_ptr) cinfo->entropy;
1400:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   int ci, tbl;
1401:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   jpeg_component_info * compptr;
1402:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   JHUFF_TBL **htblptr;
1403:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   boolean did_dc[NUM_HUFF_TBLS];
1404:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   boolean did_ac[NUM_HUFF_TBLS];
1405:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
1406:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   /* It's important not to apply jpeg_gen_optimal_table more than once
1407:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****    * per table, because it clobbers the input frequency counts!
1408:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****    */
1409:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   if (cinfo->progressive_mode)
1410:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     /* Flush out buffered data (all we care about is counting the EOB symbol) */
1411:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     emit_eobrun(entropy);
1412:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
1413:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   MEMZERO(did_dc, SIZEOF(did_dc));
1414:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   MEMZERO(did_ac, SIZEOF(did_ac));
1415:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
1416:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   for (ci = 0; ci < cinfo->comps_in_scan; ci++) {
1417:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     compptr = cinfo->cur_comp_info[ci];
1418:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     /* DC needs no table for refinement scan */
1419:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     if (cinfo->Ss == 0 && cinfo->Ah == 0) {
1420:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       tbl = compptr->dc_tbl_no;
1421:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       if (! did_dc[tbl]) {
1422:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 	htblptr = & cinfo->dc_huff_tbl_ptrs[tbl];
1423:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 	if (*htblptr == NULL)
1424:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 	  *htblptr = jpeg_alloc_huff_table((j_common_ptr) cinfo);
1425:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 	jpeg_gen_optimal_table(cinfo, *htblptr, entropy->dc_count_ptrs[tbl]);
1426:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 	did_dc[tbl] = TRUE;
1427:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       }
1428:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     }
1429:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     /* AC needs no table when not present */
1430:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     if (cinfo->Se) {
1431:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       tbl = compptr->ac_tbl_no;
1432:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       if (! did_ac[tbl]) {
1433:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 	htblptr = & cinfo->ac_huff_tbl_ptrs[tbl];
1434:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 	if (*htblptr == NULL)
1435:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 	  *htblptr = jpeg_alloc_huff_table((j_common_ptr) cinfo);
1436:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 	jpeg_gen_optimal_table(cinfo, *htblptr, entropy->ac_count_ptrs[tbl]);
1437:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 	did_ac[tbl] = TRUE;
1438:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       }
1439:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     }
1440:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   }
1441:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** }
1442:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
1443:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
1444:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** /*
1445:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****  * Initialize for a Huffman-compressed scan.
1446:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****  * If gather_statistics is TRUE, we do not output anything during the scan,
1447:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****  * just count the Huffman symbols used and generate Huffman code tables.
1448:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****  */
1449:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
ARM GAS  /tmp/cccRWS2v.s 			page 40


1450:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** METHODDEF(void)
1451:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** start_pass_huff (j_compress_ptr cinfo, boolean gather_statistics)
1452:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** {
 718              		.loc 1 1452 0
 719              		.cfi_startproc
 720              		@ args = 0, pretend = 0, frame = 0
 721              		@ frame_needed = 0, uses_anonymous_args = 0
 722              	.LVL90:
 723 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 724              	.LCFI11:
 725              		.cfi_def_cfa_offset 32
 726              		.cfi_offset 3, -32
 727              		.cfi_offset 4, -28
 728              		.cfi_offset 5, -24
 729              		.cfi_offset 6, -20
 730              		.cfi_offset 7, -16
 731              		.cfi_offset 8, -12
 732              		.cfi_offset 9, -8
 733              		.cfi_offset 14, -4
 734 0004 0446     		mov	r4, r0
1453:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   huff_entropy_ptr entropy = (huff_entropy_ptr) cinfo->entropy;
 735              		.loc 1 1453 0
 736 0006 D0F8A461 		ldr	r6, [r0, #420]
 737              	.LVL91:
1454:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   int ci, tbl;
1455:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   jpeg_component_info * compptr;
1456:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
1457:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   if (gather_statistics)
 738              		.loc 1 1457 0
 739 000a 8846     		mov	r8, r1
 740 000c D9B1     		cbz	r1, .L60
1458:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     entropy->pub.finish_pass = finish_pass_gather;
 741              		.loc 1 1458 0
 742 000e 694B     		ldr	r3, .L82
 743 0010 B360     		str	r3, [r6, #8]
 744              	.L61:
1459:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   else
1460:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     entropy->pub.finish_pass = finish_pass_huff;
1461:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
1462:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   if (cinfo->progressive_mode) {
 745              		.loc 1 1462 0
 746 0012 D4F80831 		ldr	r3, [r4, #264]
 747 0016 002B     		cmp	r3, #0
 748 0018 31D0     		beq	.L62
1463:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     entropy->cinfo = cinfo;
 749              		.loc 1 1463 0
 750 001a B467     		str	r4, [r6, #120]
1464:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     entropy->gather_statistics = gather_statistics;
 751              		.loc 1 1464 0
 752 001c C6F86C80 		str	r8, [r6, #108]
1465:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
1466:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     /* We assume jcmaster.c already validated the scan parameters. */
1467:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
1468:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     /* Select execution routine */
1469:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     if (cinfo->Ah == 0) {
 753              		.loc 1 1469 0
 754 0020 D4F87031 		ldr	r3, [r4, #368]
ARM GAS  /tmp/cccRWS2v.s 			page 41


 755 0024 ABB9     		cbnz	r3, .L63
1470:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       if (cinfo->Ss == 0)
 756              		.loc 1 1470 0
 757 0026 D4F86831 		ldr	r3, [r4, #360]
 758 002a 7BB9     		cbnz	r3, .L64
1471:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 	entropy->pub.encode_mcu = encode_mcu_DC_first;
 759              		.loc 1 1471 0
 760 002c 624B     		ldr	r3, .L82+4
 761 002e 7360     		str	r3, [r6, #4]
 762              	.LVL92:
 763              	.L65:
1472:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       else
1473:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 	entropy->pub.encode_mcu = encode_mcu_AC_first;
1474:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     } else {
1475:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       if (cinfo->Ss == 0)
1476:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 	entropy->pub.encode_mcu = encode_mcu_DC_refine;
1477:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       else {
1478:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 	entropy->pub.encode_mcu = encode_mcu_AC_refine;
1479:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 	/* AC refinement needs a correction bit buffer */
1480:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 	if (entropy->bit_buffer == NULL)
1481:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 	  entropy->bit_buffer = (char *)
1482:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 	    (*cinfo->mem->alloc_small) ((j_common_ptr) cinfo, JPOOL_IMAGE,
1483:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 					MAX_CORR_BITS * SIZEOF(char));
1484:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       }
1485:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     }
1486:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
1487:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     /* Initialize AC stuff */
1488:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     entropy->ac_tbl_no = cinfo->cur_comp_info[0]->ac_tbl_no;
 764              		.loc 1 1488 0
 765 0030 D4F82431 		ldr	r3, [r4, #292]
 766 0034 9B69     		ldr	r3, [r3, #24]
 767 0036 F367     		str	r3, [r6, #124]
1489:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     entropy->EOBRUN = 0;
 768              		.loc 1 1489 0
 769 0038 0023     		movs	r3, #0
 770 003a C6F88030 		str	r3, [r6, #128]
1490:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     entropy->BE = 0;
 771              		.loc 1 1490 0
 772 003e C6F88430 		str	r3, [r6, #132]
 773              	.L67:
1452:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   huff_entropy_ptr entropy = (huff_entropy_ptr) cinfo->entropy;
 774              		.loc 1 1452 0 discriminator 1
 775 0042 0025     		movs	r5, #0
 776 0044 61E0     		b	.L69
 777              	.LVL93:
 778              	.L60:
1460:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 779              		.loc 1 1460 0
 780 0046 5D4B     		ldr	r3, .L82+8
 781 0048 B360     		str	r3, [r6, #8]
 782 004a E2E7     		b	.L61
 783              	.L64:
1473:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     } else {
 784              		.loc 1 1473 0
 785 004c 5C4B     		ldr	r3, .L82+12
 786 004e 7360     		str	r3, [r6, #4]
 787 0050 EEE7     		b	.L65
ARM GAS  /tmp/cccRWS2v.s 			page 42


 788              	.L63:
1475:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 	entropy->pub.encode_mcu = encode_mcu_DC_refine;
 789              		.loc 1 1475 0
 790 0052 D4F86831 		ldr	r3, [r4, #360]
 791 0056 13B9     		cbnz	r3, .L66
1476:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       else {
 792              		.loc 1 1476 0
 793 0058 5A4B     		ldr	r3, .L82+16
 794 005a 7360     		str	r3, [r6, #4]
 795 005c E8E7     		b	.L65
 796              	.L66:
1478:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 	/* AC refinement needs a correction bit buffer */
 797              		.loc 1 1478 0
 798 005e 5A4B     		ldr	r3, .L82+20
 799 0060 7360     		str	r3, [r6, #4]
1480:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 	  entropy->bit_buffer = (char *)
 800              		.loc 1 1480 0
 801 0062 D6F88830 		ldr	r3, [r6, #136]
 802 0066 002B     		cmp	r3, #0
 803 0068 E2D1     		bne	.L65
1482:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 					MAX_CORR_BITS * SIZEOF(char));
 804              		.loc 1 1482 0
 805 006a 6368     		ldr	r3, [r4, #4]
 806 006c 1B68     		ldr	r3, [r3]
 807 006e 4FF47A72 		mov	r2, #1000
 808 0072 0121     		movs	r1, #1
 809              	.LVL94:
 810 0074 2046     		mov	r0, r4
 811              	.LVL95:
 812 0076 9847     		blx	r3
 813              	.LVL96:
1481:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 	    (*cinfo->mem->alloc_small) ((j_common_ptr) cinfo, JPOOL_IMAGE,
 814              		.loc 1 1481 0
 815 0078 C6F88800 		str	r0, [r6, #136]
 816 007c D8E7     		b	.L65
 817              	.LVL97:
 818              	.L62:
1491:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   } else {
1492:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     if (gather_statistics)
 819              		.loc 1 1492 0
 820 007e B8F1000F 		cmp	r8, #0
 821 0082 02D0     		beq	.L68
1493:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       entropy->pub.encode_mcu = encode_mcu_gather;
 822              		.loc 1 1493 0
 823 0084 514B     		ldr	r3, .L82+24
 824 0086 7360     		str	r3, [r6, #4]
 825 0088 DBE7     		b	.L67
 826              	.L68:
1494:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     else
1495:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       entropy->pub.encode_mcu = encode_mcu_huff;
 827              		.loc 1 1495 0
 828 008a 514B     		ldr	r3, .L82+28
 829 008c 7360     		str	r3, [r6, #4]
 830 008e D8E7     		b	.L67
 831              	.LVL98:
 832              	.L73:
1496:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   }
ARM GAS  /tmp/cccRWS2v.s 			page 43


1497:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
1498:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   for (ci = 0; ci < cinfo->comps_in_scan; ci++) {
1499:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     compptr = cinfo->cur_comp_info[ci];
1500:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     /* DC needs no table for refinement scan */
1501:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     if (cinfo->Ss == 0 && cinfo->Ah == 0) {
1502:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       tbl = compptr->dc_tbl_no;
1503:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       if (gather_statistics) {
1504:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 	/* Check for invalid table index */
1505:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 	/* (make_c_derived_tbl does this in the other path) */
1506:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 	if (tbl < 0 || tbl >= NUM_HUFF_TBLS)
1507:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 	  ERREXIT1(cinfo, JERR_NO_HUFF_TABLE, tbl);
1508:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 	/* Allocate and zero the statistics tables */
1509:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 	/* Note that jpeg_gen_optimal_table expects 257 entries in each table! */
1510:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 	if (entropy->dc_count_ptrs[tbl] == NULL)
1511:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 	  entropy->dc_count_ptrs[tbl] = (long *)
1512:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 	    (*cinfo->mem->alloc_small) ((j_common_ptr) cinfo, JPOOL_IMAGE,
1513:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 					257 * SIZEOF(long));
1514:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 	MEMZERO(entropy->dc_count_ptrs[tbl], 257 * SIZEOF(long));
 833              		.loc 1 1514 0
 834 0090 1237     		adds	r7, r7, #18
 835              	.LVL99:
 836 0092 06EB8707 		add	r7, r6, r7, lsl #2
 837              	.LVL100:
 838 0096 40F20442 		movw	r2, #1028
 839 009a 0021     		movs	r1, #0
 840 009c 7868     		ldr	r0, [r7, #4]
 841 009e FFF7FEFF 		bl	memset
 842              	.LVL101:
 843              	.L74:
1515:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       } else {
1516:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 	/* Compute derived values for Huffman tables */
1517:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 	/* We may do this more than once for a table, but it's not expensive */
1518:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 	jpeg_make_c_derived_tbl(cinfo, TRUE, tbl,
1519:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 				& entropy->dc_derived_tbls[tbl]);
1520:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       }
1521:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       /* Initialize DC predictions to 0 */
1522:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       entropy->saved.last_dc_val[ci] = 0;
 844              		.loc 1 1522 0
 845 00a2 2B1D     		adds	r3, r5, #4
 846 00a4 06EB8303 		add	r3, r6, r3, lsl #2
 847 00a8 0022     		movs	r2, #0
 848 00aa 5A60     		str	r2, [r3, #4]
 849              	.L70:
1523:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     }
1524:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     /* AC needs no table when not present */
1525:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     if (cinfo->Se) {
 850              		.loc 1 1525 0
 851 00ac D4F86C31 		ldr	r3, [r4, #364]
 852 00b0 53B3     		cbz	r3, .L75
1526:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       tbl = compptr->ac_tbl_no;
 853              		.loc 1 1526 0
 854 00b2 D9F81870 		ldr	r7, [r9, #24]
 855              	.LVL102:
1527:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       if (gather_statistics) {
 856              		.loc 1 1527 0
 857 00b6 B8F1000F 		cmp	r8, #0
 858 00ba 67D0     		beq	.L76
ARM GAS  /tmp/cccRWS2v.s 			page 44


1528:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 	if (tbl < 0 || tbl >= NUM_HUFF_TBLS)
 859              		.loc 1 1528 0
 860 00bc 032F     		cmp	r7, #3
 861 00be 08D9     		bls	.L77
1529:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 	  ERREXIT1(cinfo, JERR_NO_HUFF_TABLE, tbl);
 862              		.loc 1 1529 0
 863 00c0 2368     		ldr	r3, [r4]
 864 00c2 3422     		movs	r2, #52
 865 00c4 5A61     		str	r2, [r3, #20]
 866 00c6 2368     		ldr	r3, [r4]
 867 00c8 9F61     		str	r7, [r3, #24]
 868 00ca 2368     		ldr	r3, [r4]
 869 00cc 1B68     		ldr	r3, [r3]
 870 00ce 2046     		mov	r0, r4
 871 00d0 9847     		blx	r3
 872              	.LVL103:
 873              	.L77:
1530:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 	if (entropy->ac_count_ptrs[tbl] == NULL)
 874              		.loc 1 1530 0
 875 00d2 07F11603 		add	r3, r7, #22
 876 00d6 06EB8303 		add	r3, r6, r3, lsl #2
 877 00da 5B68     		ldr	r3, [r3, #4]
 878 00dc 5BB9     		cbnz	r3, .L78
1531:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 	  entropy->ac_count_ptrs[tbl] = (long *)
1532:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 	    (*cinfo->mem->alloc_small) ((j_common_ptr) cinfo, JPOOL_IMAGE,
 879              		.loc 1 1532 0
 880 00de 6368     		ldr	r3, [r4, #4]
 881 00e0 1B68     		ldr	r3, [r3]
 882 00e2 40F20442 		movw	r2, #1028
 883 00e6 0121     		movs	r1, #1
 884 00e8 2046     		mov	r0, r4
 885 00ea 9847     		blx	r3
 886              	.LVL104:
1531:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 	  entropy->ac_count_ptrs[tbl] = (long *)
 887              		.loc 1 1531 0
 888 00ec 07F11603 		add	r3, r7, #22
 889 00f0 06EB8303 		add	r3, r6, r3, lsl #2
 890 00f4 5860     		str	r0, [r3, #4]
 891              	.L78:
1533:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 					257 * SIZEOF(long));
1534:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 	MEMZERO(entropy->ac_count_ptrs[tbl], 257 * SIZEOF(long));
 892              		.loc 1 1534 0
 893 00f6 1637     		adds	r7, r7, #22
 894              	.LVL105:
 895 00f8 06EB8707 		add	r7, r6, r7, lsl #2
 896              	.LVL106:
 897 00fc 40F20442 		movw	r2, #1028
 898 0100 0021     		movs	r1, #0
 899 0102 7868     		ldr	r0, [r7, #4]
 900 0104 FFF7FEFF 		bl	memset
 901              	.LVL107:
 902              	.L75:
1498:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     compptr = cinfo->cur_comp_info[ci];
 903              		.loc 1 1498 0 discriminator 2
 904 0108 0135     		adds	r5, r5, #1
 905              	.LVL108:
 906              	.L69:
ARM GAS  /tmp/cccRWS2v.s 			page 45


1498:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     compptr = cinfo->cur_comp_info[ci];
 907              		.loc 1 1498 0 is_stmt 0 discriminator 1
 908 010a D4F82031 		ldr	r3, [r4, #288]
 909 010e AB42     		cmp	r3, r5
 910 0110 47DD     		ble	.L81
1499:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     /* DC needs no table for refinement scan */
 911              		.loc 1 1499 0 is_stmt 1
 912 0112 05F14803 		add	r3, r5, #72
 913 0116 04EB8303 		add	r3, r4, r3, lsl #2
 914 011a D3F80490 		ldr	r9, [r3, #4]
 915              	.LVL109:
1501:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       tbl = compptr->dc_tbl_no;
 916              		.loc 1 1501 0
 917 011e D4F86831 		ldr	r3, [r4, #360]
 918 0122 002B     		cmp	r3, #0
 919 0124 C2D1     		bne	.L70
1501:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       tbl = compptr->dc_tbl_no;
 920              		.loc 1 1501 0 is_stmt 0 discriminator 1
 921 0126 D4F87031 		ldr	r3, [r4, #368]
 922 012a 002B     		cmp	r3, #0
 923 012c BED1     		bne	.L70
1502:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       if (gather_statistics) {
 924              		.loc 1 1502 0 is_stmt 1
 925 012e D9F81470 		ldr	r7, [r9, #20]
 926              	.LVL110:
1503:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 	/* Check for invalid table index */
 927              		.loc 1 1503 0
 928 0132 B8F1000F 		cmp	r8, #0
 929 0136 1ED0     		beq	.L71
1506:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 	  ERREXIT1(cinfo, JERR_NO_HUFF_TABLE, tbl);
 930              		.loc 1 1506 0
 931 0138 032F     		cmp	r7, #3
 932 013a 08D9     		bls	.L72
1507:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 	/* Allocate and zero the statistics tables */
 933              		.loc 1 1507 0
 934 013c 2368     		ldr	r3, [r4]
 935 013e 3422     		movs	r2, #52
 936 0140 5A61     		str	r2, [r3, #20]
 937 0142 2368     		ldr	r3, [r4]
 938 0144 9F61     		str	r7, [r3, #24]
 939 0146 2368     		ldr	r3, [r4]
 940 0148 1B68     		ldr	r3, [r3]
 941 014a 2046     		mov	r0, r4
 942 014c 9847     		blx	r3
 943              	.LVL111:
 944              	.L72:
1510:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 	  entropy->dc_count_ptrs[tbl] = (long *)
 945              		.loc 1 1510 0
 946 014e 07F11203 		add	r3, r7, #18
 947 0152 06EB8303 		add	r3, r6, r3, lsl #2
 948 0156 5B68     		ldr	r3, [r3, #4]
 949 0158 002B     		cmp	r3, #0
 950 015a 99D1     		bne	.L73
1512:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 					257 * SIZEOF(long));
 951              		.loc 1 1512 0
 952 015c 6368     		ldr	r3, [r4, #4]
 953 015e 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/cccRWS2v.s 			page 46


 954 0160 40F20442 		movw	r2, #1028
 955 0164 0121     		movs	r1, #1
 956 0166 2046     		mov	r0, r4
 957 0168 9847     		blx	r3
 958              	.LVL112:
1511:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 	    (*cinfo->mem->alloc_small) ((j_common_ptr) cinfo, JPOOL_IMAGE,
 959              		.loc 1 1511 0
 960 016a 07F11203 		add	r3, r7, #18
 961 016e 06EB8303 		add	r3, r6, r3, lsl #2
 962 0172 5860     		str	r0, [r3, #4]
 963 0174 8CE7     		b	.L73
 964              	.L71:
1518:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 				& entropy->dc_derived_tbls[tbl]);
 965              		.loc 1 1518 0
 966 0176 07F10A03 		add	r3, r7, #10
 967 017a 06EB8303 		add	r3, r6, r3, lsl #2
 968 017e 0433     		adds	r3, r3, #4
 969 0180 3A46     		mov	r2, r7
 970 0182 0121     		movs	r1, #1
 971 0184 2046     		mov	r0, r4
 972 0186 FFF7FEFF 		bl	jpeg_make_c_derived_tbl
 973              	.LVL113:
 974 018a 8AE7     		b	.L74
 975              	.L76:
1535:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       } else {
1536:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 	jpeg_make_c_derived_tbl(cinfo, FALSE, tbl,
 976              		.loc 1 1536 0
 977 018c 07F10E03 		add	r3, r7, #14
 978 0190 06EB8303 		add	r3, r6, r3, lsl #2
 979 0194 0433     		adds	r3, r3, #4
 980 0196 3A46     		mov	r2, r7
 981 0198 0021     		movs	r1, #0
 982 019a 2046     		mov	r0, r4
 983 019c FFF7FEFF 		bl	jpeg_make_c_derived_tbl
 984              	.LVL114:
 985 01a0 B2E7     		b	.L75
 986              	.LVL115:
 987              	.L81:
1537:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 				& entropy->ac_derived_tbls[tbl]);
1538:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       }
1539:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     }
1540:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   }
1541:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
1542:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   /* Initialize bit buffer to empty */
1543:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   entropy->saved.put_buffer = 0;
 988              		.loc 1 1543 0
 989 01a2 0023     		movs	r3, #0
 990 01a4 F360     		str	r3, [r6, #12]
1544:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   entropy->saved.put_bits = 0;
 991              		.loc 1 1544 0
 992 01a6 3361     		str	r3, [r6, #16]
1545:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
1546:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   /* Initialize restart stuff */
1547:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   entropy->restarts_to_go = cinfo->restart_interval;
 993              		.loc 1 1547 0
 994 01a8 D4F8EC20 		ldr	r2, [r4, #236]
 995 01ac 7262     		str	r2, [r6, #36]
ARM GAS  /tmp/cccRWS2v.s 			page 47


1548:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   entropy->next_restart_num = 0;
 996              		.loc 1 1548 0
 997 01ae B362     		str	r3, [r6, #40]
1549:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** }
 998              		.loc 1 1549 0
 999 01b0 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 1000              	.LVL116:
 1001              	.L83:
 1002              		.align	2
 1003              	.L82:
 1004 01b4 00000000 		.word	finish_pass_gather
 1005 01b8 00000000 		.word	encode_mcu_DC_first
 1006 01bc 00000000 		.word	finish_pass_huff
 1007 01c0 00000000 		.word	encode_mcu_AC_first
 1008 01c4 00000000 		.word	encode_mcu_DC_refine
 1009 01c8 00000000 		.word	encode_mcu_AC_refine
 1010 01cc 00000000 		.word	encode_mcu_gather
 1011 01d0 00000000 		.word	encode_mcu_huff
 1012              		.cfi_endproc
 1013              	.LFE27:
 1015              		.section	.text.jpeg_gen_optimal_table,"ax",%progbits
 1016              		.align	1
 1017              		.syntax unified
 1018              		.thumb
 1019              		.thumb_func
 1020              		.fpu fpv5-sp-d16
 1022              	jpeg_gen_optimal_table:
 1023              	.LFB25:
1257:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** #define MAX_CLEN 32		/* assumed maximum initial code length */
 1024              		.loc 1 1257 0
 1025              		.cfi_startproc
 1026              		@ args = 0, pretend = 0, frame = 2096
 1027              		@ frame_needed = 0, uses_anonymous_args = 0
 1028              	.LVL117:
 1029 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1030              	.LCFI12:
 1031              		.cfi_def_cfa_offset 20
 1032              		.cfi_offset 4, -20
 1033              		.cfi_offset 5, -16
 1034              		.cfi_offset 6, -12
 1035              		.cfi_offset 7, -8
 1036              		.cfi_offset 14, -4
 1037 0002 ADF6340D 		subw	sp, sp, #2100
 1038              	.LCFI13:
 1039              		.cfi_def_cfa_offset 2120
 1040 0006 0646     		mov	r6, r0
 1041 0008 0C46     		mov	r4, r1
 1042 000a 1546     		mov	r5, r2
1268:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   MEMZERO(codesize, SIZEOF(codesize));
 1043              		.loc 1 1268 0
 1044 000c 2122     		movs	r2, #33
 1045              	.LVL118:
 1046 000e 0021     		movs	r1, #0
 1047              	.LVL119:
 1048 0010 0DF60C00 		addw	r0, sp, #2060
 1049              	.LVL120:
 1050 0014 FFF7FEFF 		bl	memset
ARM GAS  /tmp/cccRWS2v.s 			page 48


 1051              	.LVL121:
1269:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   for (i = 0; i < 257; i++)
 1052              		.loc 1 1269 0
 1053 0018 40F20442 		movw	r2, #1028
 1054 001c 0021     		movs	r1, #0
 1055 001e 0DF58160 		add	r0, sp, #1032
 1056 0022 FFF7FEFF 		bl	memset
 1057              	.LVL122:
1270:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     others[i] = -1;		/* init links to empty */
 1058              		.loc 1 1270 0
 1059 0026 0023     		movs	r3, #0
 1060 0028 05E0     		b	.L85
 1061              	.LVL123:
 1062              	.L86:
1271:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   
 1063              		.loc 1 1271 0 discriminator 3
 1064 002a 01AA     		add	r2, sp, #4
 1065 002c 4FF0FF31 		mov	r1, #-1
 1066 0030 42F82310 		str	r1, [r2, r3, lsl #2]
1270:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     others[i] = -1;		/* init links to empty */
 1067              		.loc 1 1270 0 discriminator 3
 1068 0034 0133     		adds	r3, r3, #1
 1069              	.LVL124:
 1070              	.L85:
1270:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     others[i] = -1;		/* init links to empty */
 1071              		.loc 1 1270 0 is_stmt 0 discriminator 1
 1072 0036 B3F5807F 		cmp	r3, #256
 1073 003a F6DD     		ble	.L86
1273:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   /* Including the pseudo-symbol 256 in the Huffman procedure guarantees
 1074              		.loc 1 1273 0 is_stmt 1
 1075 003c 0123     		movs	r3, #1
 1076              	.LVL125:
 1077 003e C5F80034 		str	r3, [r5, #1024]
 1078 0042 58E0     		b	.L98
 1079              	.LVL126:
 1080              	.L88:
1286:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       if (freq[i] && freq[i] <= v) {
 1081              		.loc 1 1286 0 discriminator 2
 1082 0044 0133     		adds	r3, r3, #1
 1083              	.LVL127:
 1084              	.L87:
1286:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       if (freq[i] && freq[i] <= v) {
 1085              		.loc 1 1286 0 is_stmt 0 discriminator 1
 1086 0046 B3F5807F 		cmp	r3, #256
 1087 004a 08DC     		bgt	.L118
1287:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 	v = freq[i];
 1088              		.loc 1 1287 0 is_stmt 1
 1089 004c 55F82320 		ldr	r2, [r5, r3, lsl #2]
 1090 0050 002A     		cmp	r2, #0
 1091 0052 F7D0     		beq	.L88
1287:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 	v = freq[i];
 1092              		.loc 1 1287 0 is_stmt 0 discriminator 1
 1093 0054 8A42     		cmp	r2, r1
 1094 0056 F5DC     		bgt	.L88
1288:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 	c1 = i;
 1095              		.loc 1 1288 0 is_stmt 1
 1096 0058 1146     		mov	r1, r2
ARM GAS  /tmp/cccRWS2v.s 			page 49


 1097              	.LVL128:
1289:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       }
 1098              		.loc 1 1289 0
 1099 005a 1846     		mov	r0, r3
 1100              	.LVL129:
 1101 005c F2E7     		b	.L88
 1102              	.LVL130:
 1103              	.L118:
1296:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     for (i = 0; i <= 256; i++) {
 1104              		.loc 1 1296 0
 1105 005e 6D49     		ldr	r1, .L124
 1106              	.LVL131:
1297:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       if (freq[i] && freq[i] <= v && i != c1) {
 1107              		.loc 1 1297 0
 1108 0060 0023     		movs	r3, #0
 1109              	.LVL132:
1295:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     v = 1000000000L;
 1110              		.loc 1 1295 0
 1111 0062 4FF0FF37 		mov	r7, #-1
 1112 0066 00E0     		b	.L90
 1113              	.LVL133:
 1114              	.L91:
1297:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       if (freq[i] && freq[i] <= v && i != c1) {
 1115              		.loc 1 1297 0 discriminator 2
 1116 0068 0133     		adds	r3, r3, #1
 1117              	.LVL134:
 1118              	.L90:
1297:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       if (freq[i] && freq[i] <= v && i != c1) {
 1119              		.loc 1 1297 0 is_stmt 0 discriminator 1
 1120 006a B3F5807F 		cmp	r3, #256
 1121 006e 0ADC     		bgt	.L119
1298:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 	v = freq[i];
 1122              		.loc 1 1298 0 is_stmt 1
 1123 0070 55F82320 		ldr	r2, [r5, r3, lsl #2]
 1124 0074 002A     		cmp	r2, #0
 1125 0076 F7D0     		beq	.L91
1298:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 	v = freq[i];
 1126              		.loc 1 1298 0 is_stmt 0 discriminator 1
 1127 0078 8A42     		cmp	r2, r1
 1128 007a F5DC     		bgt	.L91
1298:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 	v = freq[i];
 1129              		.loc 1 1298 0 discriminator 2
 1130 007c 9842     		cmp	r0, r3
 1131 007e F3D0     		beq	.L91
1299:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 	c2 = i;
 1132              		.loc 1 1299 0 is_stmt 1
 1133 0080 1146     		mov	r1, r2
 1134              	.LVL135:
1300:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       }
 1135              		.loc 1 1300 0
 1136 0082 1F46     		mov	r7, r3
 1137              	.LVL136:
 1138 0084 F0E7     		b	.L91
 1139              	.LVL137:
 1140              	.L119:
1305:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       break;
 1141              		.loc 1 1305 0
ARM GAS  /tmp/cccRWS2v.s 			page 50


 1142 0086 002F     		cmp	r7, #0
 1143 0088 5ADB     		blt	.L115
1309:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     freq[c2] = 0;
 1144              		.loc 1 1309 0
 1145 008a 55F82720 		ldr	r2, [r5, r7, lsl #2]
 1146 008e 55F82030 		ldr	r3, [r5, r0, lsl #2]
 1147              	.LVL138:
 1148 0092 1344     		add	r3, r3, r2
 1149 0094 45F82030 		str	r3, [r5, r0, lsl #2]
1310:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 1150              		.loc 1 1310 0
 1151 0098 0023     		movs	r3, #0
 1152 009a 45F82730 		str	r3, [r5, r7, lsl #2]
1313:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     while (others[c1] >= 0) {
 1153              		.loc 1 1313 0
 1154 009e 0DF58162 		add	r2, sp, #1032
 1155 00a2 52F82030 		ldr	r3, [r2, r0, lsl #2]
 1156 00a6 0133     		adds	r3, r3, #1
 1157 00a8 42F82030 		str	r3, [r2, r0, lsl #2]
1314:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       c1 = others[c1];
 1158              		.loc 1 1314 0
 1159 00ac 07E0     		b	.L94
 1160              	.LVL139:
 1161              	.L95:
1316:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     }
 1162              		.loc 1 1316 0
 1163 00ae 0DF58161 		add	r1, sp, #1032
 1164 00b2 51F82320 		ldr	r2, [r1, r3, lsl #2]
 1165 00b6 0132     		adds	r2, r2, #1
 1166 00b8 41F82320 		str	r2, [r1, r3, lsl #2]
1315:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       codesize[c1]++;
 1167              		.loc 1 1315 0
 1168 00bc 1846     		mov	r0, r3
 1169              	.LVL140:
 1170              	.L94:
1314:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       c1 = others[c1];
 1171              		.loc 1 1314 0
 1172 00be 01AB     		add	r3, sp, #4
 1173 00c0 53F82030 		ldr	r3, [r3, r0, lsl #2]
 1174 00c4 002B     		cmp	r3, #0
 1175 00c6 F2DA     		bge	.L95
1319:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     
 1176              		.loc 1 1319 0
 1177 00c8 01AB     		add	r3, sp, #4
 1178 00ca 43F82070 		str	r7, [r3, r0, lsl #2]
1322:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     while (others[c2] >= 0) {
 1179              		.loc 1 1322 0
 1180 00ce 0DF58162 		add	r2, sp, #1032
 1181 00d2 52F82730 		ldr	r3, [r2, r7, lsl #2]
 1182 00d6 0133     		adds	r3, r3, #1
 1183 00d8 42F82730 		str	r3, [r2, r7, lsl #2]
1323:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       c2 = others[c2];
 1184              		.loc 1 1323 0
 1185 00dc 06E0     		b	.L96
 1186              	.LVL141:
 1187              	.L97:
1325:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     }
ARM GAS  /tmp/cccRWS2v.s 			page 51


 1188              		.loc 1 1325 0
 1189 00de 0DF58162 		add	r2, sp, #1032
 1190 00e2 52F82730 		ldr	r3, [r2, r7, lsl #2]
 1191 00e6 0133     		adds	r3, r3, #1
 1192 00e8 42F82730 		str	r3, [r2, r7, lsl #2]
 1193              	.L96:
1323:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       c2 = others[c2];
 1194              		.loc 1 1323 0
 1195 00ec 01AB     		add	r3, sp, #4
 1196 00ee 53F82770 		ldr	r7, [r3, r7, lsl #2]
 1197              	.LVL142:
 1198 00f2 002F     		cmp	r7, #0
 1199 00f4 F3DA     		bge	.L97
 1200              	.LVL143:
 1201              	.L98:
1285:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     for (i = 0; i <= 256; i++) {
 1202              		.loc 1 1285 0
 1203 00f6 4749     		ldr	r1, .L124
1286:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       if (freq[i] && freq[i] <= v) {
 1204              		.loc 1 1286 0
 1205 00f8 0023     		movs	r3, #0
1284:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     v = 1000000000L;
 1206              		.loc 1 1284 0
 1207 00fa 4FF0FF30 		mov	r0, #-1
1286:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       if (freq[i] && freq[i] <= v) {
 1208              		.loc 1 1286 0
 1209 00fe A2E7     		b	.L87
 1210              	.LVL144:
 1211              	.L100:
1337:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     }
 1212              		.loc 1 1337 0
 1213 0100 0DF58163 		add	r3, sp, #1032
 1214 0104 53F82530 		ldr	r3, [r3, r5, lsl #2]
 1215 0108 0DF50362 		add	r2, sp, #2096
 1216 010c 1344     		add	r3, r3, r2
 1217 010e 13F8242C 		ldrb	r2, [r3, #-36]	@ zero_extendqisi2
 1218 0112 0132     		adds	r2, r2, #1
 1219 0114 03F8242C 		strb	r2, [r3, #-36]
 1220              	.L99:
1330:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     if (codesize[i]) {
 1221              		.loc 1 1330 0 discriminator 2
 1222 0118 0135     		adds	r5, r5, #1
 1223              	.LVL145:
 1224              	.L93:
1330:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     if (codesize[i]) {
 1225              		.loc 1 1330 0 is_stmt 0 discriminator 1
 1226 011a B5F5807F 		cmp	r5, #256
 1227 011e 11DC     		bgt	.L120
1331:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       /* The JPEG standard seems to think that this can't happen, */
 1228              		.loc 1 1331 0 is_stmt 1
 1229 0120 0DF58163 		add	r3, sp, #1032
 1230 0124 53F82530 		ldr	r3, [r3, r5, lsl #2]
 1231 0128 002B     		cmp	r3, #0
 1232 012a F5D0     		beq	.L99
1334:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 	ERREXIT(cinfo, JERR_HUFF_CLEN_OVERFLOW);
 1233              		.loc 1 1334 0
 1234 012c 202B     		cmp	r3, #32
ARM GAS  /tmp/cccRWS2v.s 			page 52


 1235 012e E7DD     		ble	.L100
1335:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 1236              		.loc 1 1335 0
 1237 0130 3368     		ldr	r3, [r6]
 1238 0132 2822     		movs	r2, #40
 1239 0134 5A61     		str	r2, [r3, #20]
 1240 0136 3368     		ldr	r3, [r6]
 1241 0138 1B68     		ldr	r3, [r3]
 1242 013a 3046     		mov	r0, r6
 1243 013c 9847     		blx	r3
 1244              	.LVL146:
 1245 013e DFE7     		b	.L100
 1246              	.LVL147:
 1247              	.L115:
1330:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     if (codesize[i]) {
 1248              		.loc 1 1330 0
 1249 0140 0025     		movs	r5, #0
 1250              	.LVL148:
 1251 0142 EAE7     		b	.L93
 1252              	.LVL149:
 1253              	.L120:
1352:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     while (bits[i] > 0) {
 1254              		.loc 1 1352 0
 1255 0144 2020     		movs	r0, #32
 1256 0146 30E0     		b	.L102
 1257              	.LVL150:
 1258              	.L104:
1356:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       
 1259              		.loc 1 1356 0
 1260 0148 013B     		subs	r3, r3, #1
 1261              	.LVL151:
 1262              	.L103:
1355:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 	j--;
 1263              		.loc 1 1355 0
 1264 014a 0DF50362 		add	r2, sp, #2096
 1265 014e 1A44     		add	r2, r2, r3
 1266 0150 12F8242C 		ldrb	r2, [r2, #-36]	@ zero_extendqisi2
 1267 0154 002A     		cmp	r2, #0
 1268 0156 F7D0     		beq	.L104
1358:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       bits[i-1]++;		/* one goes in this length */
 1269              		.loc 1 1358 0
 1270 0158 0239     		subs	r1, r1, #2
 1271 015a 0DF50362 		add	r2, sp, #2096
 1272 015e 0244     		add	r2, r2, r0
 1273 0160 02F8241C 		strb	r1, [r2, #-36]
1359:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       bits[j+1] += 2;		/* two new symbols in this length */
 1274              		.loc 1 1359 0
 1275 0164 421E     		subs	r2, r0, #1
 1276 0166 0DF50361 		add	r1, sp, #2096
 1277 016a 0A44     		add	r2, r2, r1
 1278 016c 12F8241C 		ldrb	r1, [r2, #-36]	@ zero_extendqisi2
 1279 0170 0131     		adds	r1, r1, #1
 1280 0172 02F8241C 		strb	r1, [r2, #-36]
1360:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       bits[j]--;		/* symbol of this length is now a prefix */
 1281              		.loc 1 1360 0
 1282 0176 5A1C     		adds	r2, r3, #1
 1283 0178 0DF50361 		add	r1, sp, #2096
ARM GAS  /tmp/cccRWS2v.s 			page 53


 1284 017c 0A44     		add	r2, r2, r1
 1285 017e 12F8241C 		ldrb	r1, [r2, #-36]	@ zero_extendqisi2
 1286 0182 0231     		adds	r1, r1, #2
 1287 0184 02F8241C 		strb	r1, [r2, #-36]
1361:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     }
 1288              		.loc 1 1361 0
 1289 0188 0DF50362 		add	r2, sp, #2096
 1290 018c 1344     		add	r3, r3, r2
 1291              	.LVL152:
 1292 018e 13F8242C 		ldrb	r2, [r3, #-36]	@ zero_extendqisi2
 1293 0192 013A     		subs	r2, r2, #1
 1294 0194 03F8242C 		strb	r2, [r3, #-36]
 1295              	.L106:
1353:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       j = i - 2;		/* find length of new prefix to be used */
 1296              		.loc 1 1353 0
 1297 0198 0DF50363 		add	r3, sp, #2096
 1298 019c 0344     		add	r3, r3, r0
 1299 019e 13F8241C 		ldrb	r1, [r3, #-36]	@ zero_extendqisi2
 1300 01a2 09B1     		cbz	r1, .L121
1354:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       while (bits[j] == 0)
 1301              		.loc 1 1354 0
 1302 01a4 831E     		subs	r3, r0, #2
 1303              	.LVL153:
1355:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 	j--;
 1304              		.loc 1 1355 0
 1305 01a6 D0E7     		b	.L103
 1306              	.LVL154:
 1307              	.L121:
1352:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     while (bits[i] > 0) {
 1308              		.loc 1 1352 0 discriminator 2
 1309 01a8 0138     		subs	r0, r0, #1
 1310              	.LVL155:
 1311              	.L102:
1352:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     while (bits[i] > 0) {
 1312              		.loc 1 1352 0 is_stmt 0 discriminator 1
 1313 01aa 1028     		cmp	r0, #16
 1314 01ac F4DC     		bgt	.L106
 1315 01ae 00E0     		b	.L107
 1316              	.L108:
1367:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   bits[i]--;
 1317              		.loc 1 1367 0 is_stmt 1
 1318 01b0 0138     		subs	r0, r0, #1
 1319              	.LVL156:
 1320              	.L107:
1366:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     i--;
 1321              		.loc 1 1366 0
 1322 01b2 0DF50363 		add	r3, sp, #2096
 1323 01b6 0344     		add	r3, r3, r0
 1324 01b8 13F8243C 		ldrb	r3, [r3, #-36]	@ zero_extendqisi2
 1325 01bc 002B     		cmp	r3, #0
 1326 01be F7D0     		beq	.L108
1368:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   
 1327              		.loc 1 1368 0
 1328 01c0 0DF50362 		add	r2, sp, #2096
 1329 01c4 1044     		add	r0, r0, r2
 1330              	.LVL157:
 1331 01c6 013B     		subs	r3, r3, #1
ARM GAS  /tmp/cccRWS2v.s 			page 54


 1332 01c8 00F8243C 		strb	r3, [r0, #-36]
1371:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   
 1333              		.loc 1 1371 0
 1334 01cc 0DF60C05 		addw	r5, sp, #2060
 1335 01d0 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 1336 01d2 2060     		str	r0, [r4]	@ unaligned
 1337 01d4 6160     		str	r1, [r4, #4]	@ unaligned
 1338 01d6 A260     		str	r2, [r4, #8]	@ unaligned
 1339 01d8 E360     		str	r3, [r4, #12]	@ unaligned
 1340 01da 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 1341 01dc 2374     		strb	r3, [r4, #16]
 1342              	.LVL158:
1378:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     for (j = 0; j <= 255; j++) {
 1343              		.loc 1 1378 0
 1344 01de 0121     		movs	r1, #1
1377:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   for (i = 1; i <= MAX_CLEN; i++) {
 1345              		.loc 1 1377 0
 1346 01e0 0020     		movs	r0, #0
1378:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     for (j = 0; j <= 255; j++) {
 1347              		.loc 1 1378 0
 1348 01e2 0DE0     		b	.L109
 1349              	.LVL159:
 1350              	.L110:
1379:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       if (codesize[j] == i) {
 1351              		.loc 1 1379 0 discriminator 2
 1352 01e4 0133     		adds	r3, r3, #1
 1353              	.LVL160:
 1354              	.L112:
1379:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       if (codesize[j] == i) {
 1355              		.loc 1 1379 0 is_stmt 0 discriminator 1
 1356 01e6 FF2B     		cmp	r3, #255
 1357 01e8 09DC     		bgt	.L122
1380:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 	htbl->huffval[p] = (UINT8) j;
 1358              		.loc 1 1380 0 is_stmt 1
 1359 01ea 0DF58162 		add	r2, sp, #1032
 1360 01ee 52F82320 		ldr	r2, [r2, r3, lsl #2]
 1361 01f2 8A42     		cmp	r2, r1
 1362 01f4 F6D1     		bne	.L110
1381:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 	p++;
 1363              		.loc 1 1381 0
 1364 01f6 2218     		adds	r2, r4, r0
 1365 01f8 5374     		strb	r3, [r2, #17]
1382:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       }
 1366              		.loc 1 1382 0
 1367 01fa 0130     		adds	r0, r0, #1
 1368              	.LVL161:
 1369 01fc F2E7     		b	.L110
 1370              	.L122:
1378:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     for (j = 0; j <= 255; j++) {
 1371              		.loc 1 1378 0 discriminator 2
 1372 01fe 0131     		adds	r1, r1, #1
 1373              	.LVL162:
 1374              	.L109:
1378:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     for (j = 0; j <= 255; j++) {
 1375              		.loc 1 1378 0 is_stmt 0 discriminator 1
 1376 0200 2029     		cmp	r1, #32
 1377 0202 01DC     		bgt	.L123
ARM GAS  /tmp/cccRWS2v.s 			page 55


1379:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       if (codesize[j] == i) {
 1378              		.loc 1 1379 0 is_stmt 1
 1379 0204 0023     		movs	r3, #0
 1380 0206 EEE7     		b	.L112
 1381              	.L123:
1388:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** }
 1382              		.loc 1 1388 0
 1383 0208 0023     		movs	r3, #0
 1384 020a C4F81431 		str	r3, [r4, #276]
1389:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 1385              		.loc 1 1389 0
 1386 020e 0DF6340D 		addw	sp, sp, #2100
 1387              	.LCFI14:
 1388              		.cfi_def_cfa_offset 20
 1389              		@ sp needed
 1390 0212 F0BD     		pop	{r4, r5, r6, r7, pc}
 1391              	.LVL163:
 1392              	.L125:
 1393              		.align	2
 1394              	.L124:
 1395 0214 00CA9A3B 		.word	1000000000
 1396              		.cfi_endproc
 1397              	.LFE25:
 1399              		.section	.text.emit_buffered_bits,"ax",%progbits
 1400              		.align	1
 1401              		.syntax unified
 1402              		.thumb
 1403              		.thumb_func
 1404              		.fpu fpv5-sp-d16
 1406              	emit_buffered_bits:
 1407              	.LFB12:
 442:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   if (entropy->gather_statistics)
 1408              		.loc 1 442 0
 1409              		.cfi_startproc
 1410              		@ args = 0, pretend = 0, frame = 0
 1411              		@ frame_needed = 0, uses_anonymous_args = 0
 1412              	.LVL164:
 1413 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 1414              	.LCFI15:
 1415              		.cfi_def_cfa_offset 32
 1416              		.cfi_offset 3, -32
 1417              		.cfi_offset 4, -28
 1418              		.cfi_offset 5, -24
 1419              		.cfi_offset 6, -20
 1420              		.cfi_offset 7, -16
 1421              		.cfi_offset 8, -12
 1422              		.cfi_offset 9, -8
 1423              		.cfi_offset 14, -4
 1424 0004 0446     		mov	r4, r0
 1425 0006 8946     		mov	r9, r1
 1426 0008 9046     		mov	r8, r2
 443:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     return;			/* no real work */
 1427              		.loc 1 443 0
 1428 000a C36E     		ldr	r3, [r0, #108]
 1429 000c 53B3     		cbz	r3, .L128
 1430              	.LVL165:
 1431              	.L126:
ARM GAS  /tmp/cccRWS2v.s 			page 56


 451:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 1432              		.loc 1 451 0
 1433 000e BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 1434              	.LVL166:
 1435              	.L137:
 1436              	.LBB5:
 1437              	.LBB6:
 1438              	.LBB7:
 372:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     if (c == 0xFF) {		/* need to stuff a zero byte? */
 1439              		.loc 1 372 0
 1440 0012 2046     		mov	r0, r4
 1441 0014 FFF7FEFF 		bl	dump_buffer_e
 1442              	.LVL167:
 1443 0018 0EE0     		b	.L131
 1444              	.L132:
 376:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     put_bits -= 8;
 1445              		.loc 1 376 0
 1446 001a 2D02     		lsls	r5, r5, #8
 1447              	.LVL168:
 377:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   }
 1448              		.loc 1 377 0
 1449 001c 083E     		subs	r6, r6, #8
 1450              	.LVL169:
 1451              	.L130:
 1452              	.LBE7:
 369:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     int c = (int) ((put_buffer >> 16) & 0xFF);
 1453              		.loc 1 369 0
 1454 001e 072E     		cmp	r6, #7
 1455 0020 1ADD     		ble	.L136
 1456              	.LBB8:
 370:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 1457              		.loc 1 370 0
 1458 0022 C5F30747 		ubfx	r7, r5, #16, #8
 1459              	.LVL170:
 372:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     if (c == 0xFF) {		/* need to stuff a zero byte? */
 1460              		.loc 1 372 0
 1461 0026 236F     		ldr	r3, [r4, #112]
 1462 0028 5A1C     		adds	r2, r3, #1
 1463 002a 2267     		str	r2, [r4, #112]
 1464 002c 1F70     		strb	r7, [r3]
 1465 002e 636F     		ldr	r3, [r4, #116]
 1466 0030 013B     		subs	r3, r3, #1
 1467 0032 6367     		str	r3, [r4, #116]
 1468 0034 002B     		cmp	r3, #0
 1469 0036 ECD0     		beq	.L137
 1470              	.L131:
 373:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       emit_byte_e(entropy, 0);
 1471              		.loc 1 373 0
 1472 0038 FF2F     		cmp	r7, #255
 1473 003a EED1     		bne	.L132
 374:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     }
 1474              		.loc 1 374 0
 1475 003c 236F     		ldr	r3, [r4, #112]
 1476 003e 5A1C     		adds	r2, r3, #1
 1477 0040 2267     		str	r2, [r4, #112]
 1478 0042 0022     		movs	r2, #0
 1479 0044 1A70     		strb	r2, [r3]
ARM GAS  /tmp/cccRWS2v.s 			page 57


 1480 0046 636F     		ldr	r3, [r4, #116]
 1481 0048 013B     		subs	r3, r3, #1
 1482 004a 6367     		str	r3, [r4, #116]
 1483 004c 002B     		cmp	r3, #0
 1484 004e E4D1     		bne	.L132
 1485 0050 2046     		mov	r0, r4
 1486 0052 FFF7FEFF 		bl	dump_buffer_e
 1487              	.LVL171:
 1488 0056 E0E7     		b	.L132
 1489              	.LVL172:
 1490              	.L136:
 1491              	.LBE8:
 380:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   entropy->saved.put_bits = put_bits;
 1492              		.loc 1 380 0
 1493 0058 E560     		str	r5, [r4, #12]
 381:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** }
 1494              		.loc 1 381 0
 1495 005a 2661     		str	r6, [r4, #16]
 1496              	.L129:
 1497              	.LVL173:
 1498              	.LBE6:
 1499              	.LBE5:
 448:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     nbits--;
 1500              		.loc 1 448 0
 1501 005c 09F10109 		add	r9, r9, #1
 1502              	.LVL174:
 449:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   }
 1503              		.loc 1 449 0
 1504 0060 08F1FF38 		add	r8, r8, #-1
 1505              	.LVL175:
 1506              	.L128:
 446:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     emit_bits_e(entropy, (unsigned int) (*bufstart), 1);
 1507              		.loc 1 446 0
 1508 0064 B8F1000F 		cmp	r8, #0
 1509 0068 D1D0     		beq	.L126
 447:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     bufstart++;
 1510              		.loc 1 447 0
 1511 006a 99F80050 		ldrb	r5, [r9]	@ zero_extendqisi2
 1512              	.LVL176:
 1513              	.LBB10:
 1514              	.LBB9:
 351:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 1515              		.loc 1 351 0
 1516 006e 2669     		ldr	r6, [r4, #16]
 1517              	.LVL177:
 357:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     return;			/* do nothing if we're only getting stats */
 1518              		.loc 1 357 0
 1519 0070 E36E     		ldr	r3, [r4, #108]
 1520 0072 002B     		cmp	r3, #0
 1521 0074 F2D1     		bne	.L129
 360:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   
 1522              		.loc 1 360 0
 1523 0076 05F00105 		and	r5, r5, #1
 1524              	.LVL178:
 362:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 1525              		.loc 1 362 0
 1526 007a 0136     		adds	r6, r6, #1
ARM GAS  /tmp/cccRWS2v.s 			page 58


 1527              	.LVL179:
 364:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 1528              		.loc 1 364 0
 1529 007c C6F11803 		rsb	r3, r6, #24
 1530 0080 9D40     		lsls	r5, r5, r3
 1531              	.LVL180:
 367:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 1532              		.loc 1 367 0
 1533 0082 E368     		ldr	r3, [r4, #12]
 1534 0084 1D43     		orrs	r5, r5, r3
 1535              	.LVL181:
 1536 0086 CAE7     		b	.L130
 1537              	.LBE9:
 1538              	.LBE10:
 1539              		.cfi_endproc
 1540              	.LFE12:
 1542              		.section	.text.flush_bits_s,"ax",%progbits
 1543              		.align	1
 1544              		.syntax unified
 1545              		.thumb
 1546              		.thumb_func
 1547              		.fpu fpv5-sp-d16
 1549              	flush_bits_s:
 1550              	.LFB8:
 387:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   if (! emit_bits_s(state, 0x7F, 7)) /* fill any partial byte with ones */
 1551              		.loc 1 387 0
 1552              		.cfi_startproc
 1553              		@ args = 0, pretend = 0, frame = 0
 1554              		@ frame_needed = 0, uses_anonymous_args = 0
 1555              	.LVL182:
 1556 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1557              	.LCFI16:
 1558              		.cfi_def_cfa_offset 24
 1559              		.cfi_offset 3, -24
 1560              		.cfi_offset 4, -20
 1561              		.cfi_offset 5, -16
 1562              		.cfi_offset 6, -12
 1563              		.cfi_offset 7, -8
 1564              		.cfi_offset 14, -4
 1565 0002 0446     		mov	r4, r0
 1566              	.LVL183:
 1567              	.LBB14:
 1568              	.LBB15:
 312:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 1569              		.loc 1 312 0
 1570 0004 C668     		ldr	r6, [r0, #12]
 1571              	.LVL184:
 320:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   
 1572              		.loc 1 320 0
 1573 0006 0736     		adds	r6, r6, #7
 1574              	.LVL185:
 322:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 1575              		.loc 1 322 0
 1576 0008 C6F11803 		rsb	r3, r6, #24
 1577 000c 7F25     		movs	r5, #127
 1578 000e 9D40     		lsls	r5, r5, r3
 1579              	.LVL186:
ARM GAS  /tmp/cccRWS2v.s 			page 59


 324:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   
 1580              		.loc 1 324 0
 1581 0010 8368     		ldr	r3, [r0, #8]
 1582 0012 1D43     		orrs	r5, r5, r3
 1583              	.LVL187:
 1584 0014 07E0     		b	.L139
 1585              	.LVL188:
 1586              	.L148:
 1587              	.LBB16:
 329:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     if (c == 0xFF) {		/* need to stuff a zero byte? */
 1588              		.loc 1 329 0
 1589 0016 2046     		mov	r0, r4
 1590 0018 FFF7FEFF 		bl	dump_buffer_s
 1591              	.LVL189:
 1592 001c 0346     		mov	r3, r0
 1593 001e 78B9     		cbnz	r0, .L140
 1594 0020 24E0     		b	.L141
 1595              	.L142:
 333:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     put_bits -= 8;
 1596              		.loc 1 333 0
 1597 0022 2D02     		lsls	r5, r5, #8
 1598              	.LVL190:
 334:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   }
 1599              		.loc 1 334 0
 1600 0024 083E     		subs	r6, r6, #8
 1601              	.LVL191:
 1602              	.L139:
 1603              	.LBE16:
 326:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     int c = (int) ((put_buffer >> 16) & 0xFF);
 1604              		.loc 1 326 0
 1605 0026 072E     		cmp	r6, #7
 1606 0028 1DDD     		ble	.L147
 1607              	.LBB17:
 327:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     
 1608              		.loc 1 327 0
 1609 002a C5F30747 		ubfx	r7, r5, #16, #8
 1610              	.LVL192:
 329:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     if (c == 0xFF) {		/* need to stuff a zero byte? */
 1611              		.loc 1 329 0
 1612 002e 2368     		ldr	r3, [r4]
 1613 0030 5A1C     		adds	r2, r3, #1
 1614 0032 2260     		str	r2, [r4]
 1615 0034 1F70     		strb	r7, [r3]
 1616 0036 6368     		ldr	r3, [r4, #4]
 1617 0038 013B     		subs	r3, r3, #1
 1618 003a 6360     		str	r3, [r4, #4]
 1619 003c 002B     		cmp	r3, #0
 1620 003e EAD0     		beq	.L148
 1621              	.L140:
 330:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       emit_byte_s(state, 0, return FALSE);
 1622              		.loc 1 330 0
 1623 0040 FF2F     		cmp	r7, #255
 1624 0042 EED1     		bne	.L142
 331:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     }
 1625              		.loc 1 331 0
 1626 0044 2368     		ldr	r3, [r4]
 1627 0046 5A1C     		adds	r2, r3, #1
ARM GAS  /tmp/cccRWS2v.s 			page 60


 1628 0048 2260     		str	r2, [r4]
 1629 004a 0022     		movs	r2, #0
 1630 004c 1A70     		strb	r2, [r3]
 1631 004e 6368     		ldr	r3, [r4, #4]
 1632 0050 013B     		subs	r3, r3, #1
 1633 0052 6360     		str	r3, [r4, #4]
 1634 0054 002B     		cmp	r3, #0
 1635 0056 E4D1     		bne	.L142
 1636 0058 2046     		mov	r0, r4
 1637 005a FFF7FEFF 		bl	dump_buffer_s
 1638              	.LVL193:
 1639 005e 0346     		mov	r3, r0
 1640 0060 0028     		cmp	r0, #0
 1641 0062 DED1     		bne	.L142
 1642 0064 02E0     		b	.L141
 1643              	.LVL194:
 1644              	.L147:
 1645              	.LBE17:
 337:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   state->cur.put_bits = put_bits;
 1646              		.loc 1 337 0
 1647 0066 A560     		str	r5, [r4, #8]
 338:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 1648              		.loc 1 338 0
 1649 0068 E660     		str	r6, [r4, #12]
 340:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** }
 1650              		.loc 1 340 0
 1651 006a 0123     		movs	r3, #1
 1652              	.L141:
 1653              	.LVL195:
 1654              	.LBE15:
 1655              	.LBE14:
 388:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     return FALSE;
 1656              		.loc 1 388 0
 1657 006c 23B1     		cbz	r3, .L145
 390:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   state->cur.put_bits = 0;
 1658              		.loc 1 390 0
 1659 006e 0023     		movs	r3, #0
 1660 0070 A360     		str	r3, [r4, #8]
 391:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   return TRUE;
 1661              		.loc 1 391 0
 1662 0072 E360     		str	r3, [r4, #12]
 392:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** }
 1663              		.loc 1 392 0
 1664 0074 0120     		movs	r0, #1
 1665              	.L138:
 393:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 1666              		.loc 1 393 0
 1667 0076 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1668              	.LVL196:
 1669              	.L145:
 389:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   state->cur.put_buffer = 0;	     /* and reset bit-buffer to empty */
 1670              		.loc 1 389 0
 1671 0078 0020     		movs	r0, #0
 1672 007a FCE7     		b	.L138
 1673              		.cfi_endproc
 1674              	.LFE8:
 1676              		.section	.text.emit_restart_s,"ax",%progbits
ARM GAS  /tmp/cccRWS2v.s 			page 61


 1677              		.align	1
 1678              		.syntax unified
 1679              		.thumb
 1680              		.thumb_func
 1681              		.fpu fpv5-sp-d16
 1683              	emit_restart_s:
 1684              	.LFB14:
 491:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   int ci;
 1685              		.loc 1 491 0
 1686              		.cfi_startproc
 1687              		@ args = 0, pretend = 0, frame = 0
 1688              		@ frame_needed = 0, uses_anonymous_args = 0
 1689              	.LVL197:
 1690 0000 38B5     		push	{r3, r4, r5, lr}
 1691              	.LCFI17:
 1692              		.cfi_def_cfa_offset 16
 1693              		.cfi_offset 3, -16
 1694              		.cfi_offset 4, -12
 1695              		.cfi_offset 5, -8
 1696              		.cfi_offset 14, -4
 1697 0002 0446     		mov	r4, r0
 1698 0004 0D46     		mov	r5, r1
 494:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     return FALSE;
 1699              		.loc 1 494 0
 1700 0006 FFF7FEFF 		bl	flush_bits_s
 1701              	.LVL198:
 1702 000a 0346     		mov	r3, r0
 1703 000c 60B3     		cbz	r0, .L149
 497:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   emit_byte_s(state, JPEG_RST0 + restart_num, return FALSE);
 1704              		.loc 1 497 0
 1705 000e 2368     		ldr	r3, [r4]
 1706 0010 5A1C     		adds	r2, r3, #1
 1707 0012 2260     		str	r2, [r4]
 1708 0014 FF22     		movs	r2, #255
 1709 0016 1A70     		strb	r2, [r3]
 1710 0018 6368     		ldr	r3, [r4, #4]
 1711 001a 013B     		subs	r3, r3, #1
 1712 001c 6360     		str	r3, [r4, #4]
 1713 001e 53B1     		cbz	r3, .L156
 1714              	.L151:
 498:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 1715              		.loc 1 498 0
 1716 0020 2368     		ldr	r3, [r4]
 1717 0022 5A1C     		adds	r2, r3, #1
 1718 0024 2260     		str	r2, [r4]
 1719 0026 303D     		subs	r5, r5, #48
 1720              	.LVL199:
 1721 0028 1D70     		strb	r5, [r3]
 1722 002a 6368     		ldr	r3, [r4, #4]
 1723 002c 013B     		subs	r3, r3, #1
 1724 002e 6360     		str	r3, [r4, #4]
 1725 0030 43B1     		cbz	r3, .L157
 1726              	.L152:
 491:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   int ci;
 1727              		.loc 1 491 0 discriminator 1
 1728 0032 0023     		movs	r3, #0
 1729 0034 12E0     		b	.L153
ARM GAS  /tmp/cccRWS2v.s 			page 62


 1730              	.LVL200:
 1731              	.L156:
 497:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   emit_byte_s(state, JPEG_RST0 + restart_num, return FALSE);
 1732              		.loc 1 497 0 discriminator 1
 1733 0036 2046     		mov	r0, r4
 1734 0038 FFF7FEFF 		bl	dump_buffer_s
 1735              	.LVL201:
 1736 003c 0346     		mov	r3, r0
 1737 003e 0028     		cmp	r0, #0
 1738 0040 EED1     		bne	.L151
 1739 0042 11E0     		b	.L149
 1740              	.LVL202:
 1741              	.L157:
 498:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 1742              		.loc 1 498 0 discriminator 1
 1743 0044 2046     		mov	r0, r4
 1744 0046 FFF7FEFF 		bl	dump_buffer_s
 1745              	.LVL203:
 1746 004a 0346     		mov	r3, r0
 1747 004c 0028     		cmp	r0, #0
 1748 004e F0D1     		bne	.L152
 1749 0050 0AE0     		b	.L149
 1750              	.LVL204:
 1751              	.L154:
 502:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 1752              		.loc 1 502 0 discriminator 3
 1753 0052 1A1D     		adds	r2, r3, #4
 1754 0054 0021     		movs	r1, #0
 1755 0056 44F82210 		str	r1, [r4, r2, lsl #2]
 501:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     state->cur.last_dc_val[ci] = 0;
 1756              		.loc 1 501 0 discriminator 3
 1757 005a 0133     		adds	r3, r3, #1
 1758              	.LVL205:
 1759              	.L153:
 501:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     state->cur.last_dc_val[ci] = 0;
 1760              		.loc 1 501 0 is_stmt 0 discriminator 1
 1761 005c 226A     		ldr	r2, [r4, #32]
 1762 005e D2F82021 		ldr	r2, [r2, #288]
 1763 0062 9A42     		cmp	r2, r3
 1764 0064 F5DC     		bgt	.L154
 506:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** }
 1765              		.loc 1 506 0 is_stmt 1
 1766 0066 0123     		movs	r3, #1
 1767              	.LVL206:
 1768              	.L149:
 507:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 1769              		.loc 1 507 0
 1770 0068 1846     		mov	r0, r3
 1771 006a 38BD     		pop	{r3, r4, r5, pc}
 1772              		.cfi_endproc
 1773              	.LFE14:
 1775              		.section	.text.flush_bits_e,"ax",%progbits
 1776              		.align	1
 1777              		.syntax unified
 1778              		.thumb
 1779              		.thumb_func
 1780              		.fpu fpv5-sp-d16
ARM GAS  /tmp/cccRWS2v.s 			page 63


 1782              	flush_bits_e:
 1783              	.LFB9:
 398:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   emit_bits_e(entropy, 0x7F, 7); /* fill any partial byte with ones */
 1784              		.loc 1 398 0
 1785              		.cfi_startproc
 1786              		@ args = 0, pretend = 0, frame = 0
 1787              		@ frame_needed = 0, uses_anonymous_args = 0
 1788              	.LVL207:
 1789 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1790              	.LCFI18:
 1791              		.cfi_def_cfa_offset 24
 1792              		.cfi_offset 3, -24
 1793              		.cfi_offset 4, -20
 1794              		.cfi_offset 5, -16
 1795              		.cfi_offset 6, -12
 1796              		.cfi_offset 7, -8
 1797              		.cfi_offset 14, -4
 1798 0002 0446     		mov	r4, r0
 1799              	.LVL208:
 1800              	.LBB21:
 1801              	.LBB22:
 351:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 1802              		.loc 1 351 0
 1803 0004 0569     		ldr	r5, [r0, #16]
 1804              	.LVL209:
 357:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     return;			/* do nothing if we're only getting stats */
 1805              		.loc 1 357 0
 1806 0006 C36E     		ldr	r3, [r0, #108]
 1807 0008 63BB     		cbnz	r3, .L159
 362:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 1808              		.loc 1 362 0
 1809 000a 0735     		adds	r5, r5, #7
 1810              	.LVL210:
 364:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 1811              		.loc 1 364 0
 1812 000c C5F11803 		rsb	r3, r5, #24
 1813 0010 7F26     		movs	r6, #127
 1814 0012 9E40     		lsls	r6, r6, r3
 1815              	.LVL211:
 367:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 1816              		.loc 1 367 0
 1817 0014 C368     		ldr	r3, [r0, #12]
 1818 0016 1E43     		orrs	r6, r6, r3
 1819              	.LVL212:
 1820 0018 05E0     		b	.L160
 1821              	.LVL213:
 1822              	.L166:
 1823              	.LBB23:
 372:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     if (c == 0xFF) {		/* need to stuff a zero byte? */
 1824              		.loc 1 372 0
 1825 001a 2046     		mov	r0, r4
 1826 001c FFF7FEFF 		bl	dump_buffer_e
 1827              	.LVL214:
 1828 0020 0EE0     		b	.L161
 1829              	.L162:
 376:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     put_bits -= 8;
 1830              		.loc 1 376 0
ARM GAS  /tmp/cccRWS2v.s 			page 64


 1831 0022 3602     		lsls	r6, r6, #8
 1832              	.LVL215:
 377:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   }
 1833              		.loc 1 377 0
 1834 0024 083D     		subs	r5, r5, #8
 1835              	.LVL216:
 1836              	.L160:
 1837              	.LBE23:
 369:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     int c = (int) ((put_buffer >> 16) & 0xFF);
 1838              		.loc 1 369 0
 1839 0026 072D     		cmp	r5, #7
 1840 0028 1ADD     		ble	.L165
 1841              	.LBB24:
 370:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 1842              		.loc 1 370 0
 1843 002a C6F30747 		ubfx	r7, r6, #16, #8
 1844              	.LVL217:
 372:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     if (c == 0xFF) {		/* need to stuff a zero byte? */
 1845              		.loc 1 372 0
 1846 002e 236F     		ldr	r3, [r4, #112]
 1847 0030 5A1C     		adds	r2, r3, #1
 1848 0032 2267     		str	r2, [r4, #112]
 1849 0034 1F70     		strb	r7, [r3]
 1850 0036 636F     		ldr	r3, [r4, #116]
 1851 0038 013B     		subs	r3, r3, #1
 1852 003a 6367     		str	r3, [r4, #116]
 1853 003c 002B     		cmp	r3, #0
 1854 003e ECD0     		beq	.L166
 1855              	.L161:
 373:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       emit_byte_e(entropy, 0);
 1856              		.loc 1 373 0
 1857 0040 FF2F     		cmp	r7, #255
 1858 0042 EED1     		bne	.L162
 374:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     }
 1859              		.loc 1 374 0
 1860 0044 236F     		ldr	r3, [r4, #112]
 1861 0046 5A1C     		adds	r2, r3, #1
 1862 0048 2267     		str	r2, [r4, #112]
 1863 004a 0022     		movs	r2, #0
 1864 004c 1A70     		strb	r2, [r3]
 1865 004e 636F     		ldr	r3, [r4, #116]
 1866 0050 013B     		subs	r3, r3, #1
 1867 0052 6367     		str	r3, [r4, #116]
 1868 0054 002B     		cmp	r3, #0
 1869 0056 E4D1     		bne	.L162
 1870 0058 2046     		mov	r0, r4
 1871 005a FFF7FEFF 		bl	dump_buffer_e
 1872              	.LVL218:
 1873 005e E0E7     		b	.L162
 1874              	.LVL219:
 1875              	.L165:
 1876              	.LBE24:
 380:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   entropy->saved.put_bits = put_bits;
 1877              		.loc 1 380 0
 1878 0060 E660     		str	r6, [r4, #12]
 381:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** }
 1879              		.loc 1 381 0
ARM GAS  /tmp/cccRWS2v.s 			page 65


 1880 0062 2561     		str	r5, [r4, #16]
 1881              	.LVL220:
 1882              	.L159:
 1883              	.LBE22:
 1884              	.LBE21:
 400:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   entropy->saved.put_bits = 0;
 1885              		.loc 1 400 0
 1886 0064 0023     		movs	r3, #0
 1887 0066 E360     		str	r3, [r4, #12]
 401:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** }
 1888              		.loc 1 401 0
 1889 0068 2361     		str	r3, [r4, #16]
 402:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 1890              		.loc 1 402 0
 1891 006a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1892              		.cfi_endproc
 1893              	.LFE9:
 1895              		.section	.text.emit_eobrun,"ax",%progbits
 1896              		.align	1
 1897              		.syntax unified
 1898              		.thumb
 1899              		.thumb_func
 1900              		.fpu fpv5-sp-d16
 1902              	emit_eobrun:
 1903              	.LFB13:
 460:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   register int temp, nbits;
 1904              		.loc 1 460 0
 1905              		.cfi_startproc
 1906              		@ args = 0, pretend = 0, frame = 0
 1907              		@ frame_needed = 0, uses_anonymous_args = 0
 1908              	.LVL221:
 463:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     temp = entropy->EOBRUN;
 1909              		.loc 1 463 0
 1910 0000 D0F88030 		ldr	r3, [r0, #128]
 1911 0004 002B     		cmp	r3, #0
 1912 0006 00F0B980 		beq	.L186
 460:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   register int temp, nbits;
 1913              		.loc 1 460 0
 1914 000a 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1915              	.LCFI19:
 1916              		.cfi_def_cfa_offset 24
 1917              		.cfi_offset 4, -24
 1918              		.cfi_offset 5, -20
 1919              		.cfi_offset 6, -16
 1920              		.cfi_offset 7, -12
 1921              		.cfi_offset 8, -8
 1922              		.cfi_offset 14, -4
 1923              	.LVL222:
 465:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     while ((temp >>= 1))
 1924              		.loc 1 465 0
 1925 000e 0025     		movs	r5, #0
 466:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       nbits++;
 1926              		.loc 1 466 0
 1927 0010 00E0     		b	.L169
 1928              	.LVL223:
 1929              	.L170:
 467:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     /* safety check: shouldn't happen given limited correction-bit buffer */
ARM GAS  /tmp/cccRWS2v.s 			page 66


 1930              		.loc 1 467 0
 1931 0012 0135     		adds	r5, r5, #1
 1932              	.LVL224:
 1933              	.L169:
 466:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       nbits++;
 1934              		.loc 1 466 0
 1935 0014 5B10     		asrs	r3, r3, #1
 1936              	.LVL225:
 1937 0016 FCD1     		bne	.L170
 1938 0018 0446     		mov	r4, r0
 469:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       ERREXIT(entropy->cinfo, JERR_HUFF_MISSING_CODE);
 1939              		.loc 1 469 0
 1940 001a 0E2D     		cmp	r5, #14
 1941 001c 07DD     		ble	.L171
 470:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 1942              		.loc 1 470 0
 1943 001e 836F     		ldr	r3, [r0, #120]
 1944              	.LVL226:
 1945 0020 1B68     		ldr	r3, [r3]
 1946 0022 2922     		movs	r2, #41
 1947 0024 5A61     		str	r2, [r3, #20]
 1948 0026 806F     		ldr	r0, [r0, #120]
 1949              	.LVL227:
 1950 0028 0368     		ldr	r3, [r0]
 1951 002a 1B68     		ldr	r3, [r3]
 1952 002c 9847     		blx	r3
 1953              	.LVL228:
 1954              	.L171:
 472:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     if (nbits)
 1955              		.loc 1 472 0
 1956 002e E36F     		ldr	r3, [r4, #124]
 1957 0030 2A01     		lsls	r2, r5, #4
 1958              	.LVL229:
 1959              	.LBB34:
 1960              	.LBB35:
 426:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     entropy->ac_count_ptrs[tbl_no][symbol]++;
 1961              		.loc 1 426 0
 1962 0032 E16E     		ldr	r1, [r4, #108]
 1963 0034 C1B1     		cbz	r1, .L172
 427:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   else {
 1964              		.loc 1 427 0
 1965 0036 1633     		adds	r3, r3, #22
 1966              	.LVL230:
 1967 0038 04EB8303 		add	r3, r4, r3, lsl #2
 1968 003c 5968     		ldr	r1, [r3, #4]
 1969 003e 51F82230 		ldr	r3, [r1, r2, lsl #2]
 1970 0042 0133     		adds	r3, r3, #1
 1971 0044 41F82230 		str	r3, [r1, r2, lsl #2]
 1972              	.LVL231:
 1973              	.L173:
 1974              	.LBE35:
 1975              	.LBE34:
 473:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       emit_bits_e(entropy, entropy->EOBRUN, nbits);
 1976              		.loc 1 473 0
 1977 0048 002D     		cmp	r5, #0
 1978 004a 57D1     		bne	.L189
 1979              	.LVL232:
ARM GAS  /tmp/cccRWS2v.s 			page 67


 1980              	.L179:
 476:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 1981              		.loc 1 476 0
 1982 004c 0025     		movs	r5, #0
 1983 004e C4F88050 		str	r5, [r4, #128]
 479:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     entropy->BE = 0;
 1984              		.loc 1 479 0
 1985 0052 D4F88420 		ldr	r2, [r4, #132]
 1986 0056 D4F88810 		ldr	r1, [r4, #136]
 1987 005a 2046     		mov	r0, r4
 1988 005c FFF7FEFF 		bl	emit_buffered_bits
 1989              	.LVL233:
 480:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   }
 1990              		.loc 1 480 0
 1991 0060 C4F88450 		str	r5, [r4, #132]
 482:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 1992              		.loc 1 482 0
 1993 0064 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1994              	.LVL234:
 1995              	.L172:
 1996              	.LBB42:
 1997              	.LBB41:
 1998              	.LBB36:
 429:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     emit_bits_e(entropy, tbl->ehufco[symbol], tbl->ehufsi[symbol]);
 1999              		.loc 1 429 0
 2000 0068 0E33     		adds	r3, r3, #14
 2001              	.LVL235:
 2002 006a 04EB8303 		add	r3, r4, r3, lsl #2
 2003 006e 5B68     		ldr	r3, [r3, #4]
 2004              	.LVL236:
 430:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   }
 2005              		.loc 1 430 0
 2006 0070 53F82270 		ldr	r7, [r3, r2, lsl #2]
 2007 0074 1A44     		add	r2, r2, r3
 2008              	.LVL237:
 2009 0076 92F80064 		ldrb	r6, [r2, #1024]	@ zero_extendqisi2
 2010              	.LVL238:
 2011              	.LBB37:
 2012              	.LBB38:
 351:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 2013              		.loc 1 351 0
 2014 007a D4F81080 		ldr	r8, [r4, #16]
 2015              	.LVL239:
 354:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     ERREXIT(entropy->cinfo, JERR_HUFF_MISSING_CODE);
 2016              		.loc 1 354 0
 2017 007e 3EB9     		cbnz	r6, .L174
 355:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 2018              		.loc 1 355 0
 2019 0080 A36F     		ldr	r3, [r4, #120]
 2020              	.LVL240:
 2021 0082 1B68     		ldr	r3, [r3]
 2022 0084 2922     		movs	r2, #41
 2023 0086 5A61     		str	r2, [r3, #20]
 2024              	.LVL241:
 2025 0088 A06F     		ldr	r0, [r4, #120]
 2026 008a 0368     		ldr	r3, [r0]
 2027 008c 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/cccRWS2v.s 			page 68


 2028 008e 9847     		blx	r3
 2029              	.LVL242:
 2030              	.L174:
 357:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     return;			/* do nothing if we're only getting stats */
 2031              		.loc 1 357 0
 2032 0090 E36E     		ldr	r3, [r4, #108]
 2033 0092 002B     		cmp	r3, #0
 2034 0094 D8D1     		bne	.L173
 360:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   
 2035              		.loc 1 360 0
 2036 0096 0123     		movs	r3, #1
 2037 0098 B340     		lsls	r3, r3, r6
 2038 009a 013B     		subs	r3, r3, #1
 2039 009c 1F40     		ands	r7, r7, r3
 2040              	.LVL243:
 362:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 2041              		.loc 1 362 0
 2042 009e 4644     		add	r6, r6, r8
 2043              	.LVL244:
 364:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 2044              		.loc 1 364 0
 2045 00a0 C6F11803 		rsb	r3, r6, #24
 2046 00a4 9F40     		lsls	r7, r7, r3
 2047              	.LVL245:
 367:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 2048              		.loc 1 367 0
 2049 00a6 E368     		ldr	r3, [r4, #12]
 2050 00a8 1F43     		orrs	r7, r7, r3
 2051              	.LVL246:
 2052 00aa 05E0     		b	.L175
 2053              	.LVL247:
 2054              	.L191:
 2055              	.LBB39:
 372:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     if (c == 0xFF) {		/* need to stuff a zero byte? */
 2056              		.loc 1 372 0
 2057 00ac 2046     		mov	r0, r4
 2058 00ae FFF7FEFF 		bl	dump_buffer_e
 2059              	.LVL248:
 2060 00b2 0FE0     		b	.L176
 2061              	.L177:
 376:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     put_bits -= 8;
 2062              		.loc 1 376 0
 2063 00b4 3F02     		lsls	r7, r7, #8
 2064              	.LVL249:
 377:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   }
 2065              		.loc 1 377 0
 2066 00b6 083E     		subs	r6, r6, #8
 2067              	.LVL250:
 2068              	.L175:
 2069              	.LBE39:
 369:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     int c = (int) ((put_buffer >> 16) & 0xFF);
 2070              		.loc 1 369 0
 2071 00b8 072E     		cmp	r6, #7
 2072 00ba 1CDD     		ble	.L190
 2073              	.LBB40:
 370:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 2074              		.loc 1 370 0
ARM GAS  /tmp/cccRWS2v.s 			page 69


 2075 00bc C7F30748 		ubfx	r8, r7, #16, #8
 2076              	.LVL251:
 372:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     if (c == 0xFF) {		/* need to stuff a zero byte? */
 2077              		.loc 1 372 0
 2078 00c0 236F     		ldr	r3, [r4, #112]
 2079 00c2 5A1C     		adds	r2, r3, #1
 2080 00c4 2267     		str	r2, [r4, #112]
 2081 00c6 83F80080 		strb	r8, [r3]
 2082 00ca 636F     		ldr	r3, [r4, #116]
 2083 00cc 013B     		subs	r3, r3, #1
 2084 00ce 6367     		str	r3, [r4, #116]
 2085 00d0 002B     		cmp	r3, #0
 2086 00d2 EBD0     		beq	.L191
 2087              	.L176:
 373:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       emit_byte_e(entropy, 0);
 2088              		.loc 1 373 0
 2089 00d4 B8F1FF0F 		cmp	r8, #255
 2090 00d8 ECD1     		bne	.L177
 374:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     }
 2091              		.loc 1 374 0
 2092 00da 236F     		ldr	r3, [r4, #112]
 2093 00dc 5A1C     		adds	r2, r3, #1
 2094 00de 2267     		str	r2, [r4, #112]
 2095 00e0 0022     		movs	r2, #0
 2096 00e2 1A70     		strb	r2, [r3]
 2097 00e4 636F     		ldr	r3, [r4, #116]
 2098 00e6 013B     		subs	r3, r3, #1
 2099 00e8 6367     		str	r3, [r4, #116]
 2100 00ea 002B     		cmp	r3, #0
 2101 00ec E2D1     		bne	.L177
 2102 00ee 2046     		mov	r0, r4
 2103 00f0 FFF7FEFF 		bl	dump_buffer_e
 2104              	.LVL252:
 2105 00f4 DEE7     		b	.L177
 2106              	.LVL253:
 2107              	.L190:
 2108              	.LBE40:
 380:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   entropy->saved.put_bits = put_bits;
 2109              		.loc 1 380 0
 2110 00f6 E760     		str	r7, [r4, #12]
 381:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** }
 2111              		.loc 1 381 0
 2112 00f8 2661     		str	r6, [r4, #16]
 2113 00fa A5E7     		b	.L173
 2114              	.LVL254:
 2115              	.L189:
 2116              	.LBE38:
 2117              	.LBE37:
 2118              	.LBE36:
 2119              	.LBE41:
 2120              	.LBE42:
 474:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 2121              		.loc 1 474 0
 2122 00fc D4F88060 		ldr	r6, [r4, #128]
 2123              	.LVL255:
 2124              	.LBB43:
 2125              	.LBB44:
ARM GAS  /tmp/cccRWS2v.s 			page 70


 351:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 2126              		.loc 1 351 0
 2127 0100 2769     		ldr	r7, [r4, #16]
 2128              	.LVL256:
 354:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     ERREXIT(entropy->cinfo, JERR_HUFF_MISSING_CODE);
 2129              		.loc 1 354 0
 2130 0102 3DB9     		cbnz	r5, .L180
 355:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 2131              		.loc 1 355 0
 2132 0104 A36F     		ldr	r3, [r4, #120]
 2133 0106 1B68     		ldr	r3, [r3]
 2134 0108 2922     		movs	r2, #41
 2135 010a 5A61     		str	r2, [r3, #20]
 2136 010c A06F     		ldr	r0, [r4, #120]
 2137 010e 0368     		ldr	r3, [r0]
 2138 0110 1B68     		ldr	r3, [r3]
 2139 0112 9847     		blx	r3
 2140              	.LVL257:
 2141              	.L180:
 357:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     return;			/* do nothing if we're only getting stats */
 2142              		.loc 1 357 0
 2143 0114 E36E     		ldr	r3, [r4, #108]
 2144 0116 002B     		cmp	r3, #0
 2145 0118 98D1     		bne	.L179
 360:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   
 2146              		.loc 1 360 0
 2147 011a 0123     		movs	r3, #1
 2148 011c AB40     		lsls	r3, r3, r5
 2149 011e 013B     		subs	r3, r3, #1
 2150 0120 1E40     		ands	r6, r6, r3
 2151              	.LVL258:
 362:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 2152              		.loc 1 362 0
 2153 0122 3D44     		add	r5, r5, r7
 2154              	.LVL259:
 364:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 2155              		.loc 1 364 0
 2156 0124 C5F11803 		rsb	r3, r5, #24
 2157 0128 9E40     		lsls	r6, r6, r3
 2158              	.LVL260:
 367:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 2159              		.loc 1 367 0
 2160 012a E368     		ldr	r3, [r4, #12]
 2161 012c 1E43     		orrs	r6, r6, r3
 2162              	.LVL261:
 2163 012e 05E0     		b	.L181
 2164              	.LVL262:
 2165              	.L193:
 2166              	.LBB45:
 372:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     if (c == 0xFF) {		/* need to stuff a zero byte? */
 2167              		.loc 1 372 0
 2168 0130 2046     		mov	r0, r4
 2169 0132 FFF7FEFF 		bl	dump_buffer_e
 2170              	.LVL263:
 2171 0136 0EE0     		b	.L182
 2172              	.L183:
 376:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     put_bits -= 8;
ARM GAS  /tmp/cccRWS2v.s 			page 71


 2173              		.loc 1 376 0
 2174 0138 3602     		lsls	r6, r6, #8
 2175              	.LVL264:
 377:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   }
 2176              		.loc 1 377 0
 2177 013a 083D     		subs	r5, r5, #8
 2178              	.LVL265:
 2179              	.L181:
 2180              	.LBE45:
 369:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     int c = (int) ((put_buffer >> 16) & 0xFF);
 2181              		.loc 1 369 0
 2182 013c 072D     		cmp	r5, #7
 2183 013e 1ADD     		ble	.L192
 2184              	.LBB46:
 370:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 2185              		.loc 1 370 0
 2186 0140 C6F30747 		ubfx	r7, r6, #16, #8
 2187              	.LVL266:
 372:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     if (c == 0xFF) {		/* need to stuff a zero byte? */
 2188              		.loc 1 372 0
 2189 0144 236F     		ldr	r3, [r4, #112]
 2190 0146 5A1C     		adds	r2, r3, #1
 2191 0148 2267     		str	r2, [r4, #112]
 2192 014a 1F70     		strb	r7, [r3]
 2193 014c 636F     		ldr	r3, [r4, #116]
 2194 014e 013B     		subs	r3, r3, #1
 2195 0150 6367     		str	r3, [r4, #116]
 2196 0152 002B     		cmp	r3, #0
 2197 0154 ECD0     		beq	.L193
 2198              	.L182:
 373:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       emit_byte_e(entropy, 0);
 2199              		.loc 1 373 0
 2200 0156 FF2F     		cmp	r7, #255
 2201 0158 EED1     		bne	.L183
 374:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     }
 2202              		.loc 1 374 0
 2203 015a 236F     		ldr	r3, [r4, #112]
 2204 015c 5A1C     		adds	r2, r3, #1
 2205 015e 2267     		str	r2, [r4, #112]
 2206 0160 0022     		movs	r2, #0
 2207 0162 1A70     		strb	r2, [r3]
 2208 0164 636F     		ldr	r3, [r4, #116]
 2209 0166 013B     		subs	r3, r3, #1
 2210 0168 6367     		str	r3, [r4, #116]
 2211 016a 002B     		cmp	r3, #0
 2212 016c E4D1     		bne	.L183
 2213 016e 2046     		mov	r0, r4
 2214 0170 FFF7FEFF 		bl	dump_buffer_e
 2215              	.LVL267:
 2216 0174 E0E7     		b	.L183
 2217              	.LVL268:
 2218              	.L192:
 2219              	.LBE46:
 380:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   entropy->saved.put_bits = put_bits;
 2220              		.loc 1 380 0
 2221 0176 E660     		str	r6, [r4, #12]
 381:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** }
ARM GAS  /tmp/cccRWS2v.s 			page 72


 2222              		.loc 1 381 0
 2223 0178 2561     		str	r5, [r4, #16]
 2224 017a 67E7     		b	.L179
 2225              	.LVL269:
 2226              	.L186:
 2227              	.LCFI20:
 2228              		.cfi_def_cfa_offset 0
 2229              		.cfi_restore 4
 2230              		.cfi_restore 5
 2231              		.cfi_restore 6
 2232              		.cfi_restore 7
 2233              		.cfi_restore 8
 2234              		.cfi_restore 14
 2235 017c 7047     		bx	lr
 2236              	.LBE44:
 2237              	.LBE43:
 2238              		.cfi_endproc
 2239              	.LFE13:
 2241              		.section	.text.emit_restart_e,"ax",%progbits
 2242              		.align	1
 2243              		.syntax unified
 2244              		.thumb
 2245              		.thumb_func
 2246              		.fpu fpv5-sp-d16
 2248              	emit_restart_e:
 2249              	.LFB15:
 512:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   int ci;
 2250              		.loc 1 512 0
 2251              		.cfi_startproc
 2252              		@ args = 0, pretend = 0, frame = 0
 2253              		@ frame_needed = 0, uses_anonymous_args = 0
 2254              	.LVL270:
 2255 0000 38B5     		push	{r3, r4, r5, lr}
 2256              	.LCFI21:
 2257              		.cfi_def_cfa_offset 16
 2258              		.cfi_offset 3, -16
 2259              		.cfi_offset 4, -12
 2260              		.cfi_offset 5, -8
 2261              		.cfi_offset 14, -4
 2262 0002 0446     		mov	r4, r0
 2263 0004 0D46     		mov	r5, r1
 515:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 2264              		.loc 1 515 0
 2265 0006 FFF7FEFF 		bl	emit_eobrun
 2266              	.LVL271:
 517:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     flush_bits_e(entropy);
 2267              		.loc 1 517 0
 2268 000a E36E     		ldr	r3, [r4, #108]
 2269 000c 4BB1     		cbz	r3, .L203
 2270              	.LVL272:
 2271              	.L195:
 523:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     /* Re-initialize DC predictions to 0 */
 2272              		.loc 1 523 0
 2273 000e A16F     		ldr	r1, [r4, #120]
 2274 0010 D1F86831 		ldr	r3, [r1, #360]
 2275 0014 4BB3     		cbz	r3, .L197
 529:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     entropy->BE = 0;
ARM GAS  /tmp/cccRWS2v.s 			page 73


 2276              		.loc 1 529 0
 2277 0016 0023     		movs	r3, #0
 2278 0018 C4F88030 		str	r3, [r4, #128]
 530:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   }
 2279              		.loc 1 530 0
 2280 001c C4F88430 		str	r3, [r4, #132]
 532:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 2281              		.loc 1 532 0
 2282 0020 27E0     		b	.L194
 2283              	.LVL273:
 2284              	.L203:
 518:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     emit_byte_e(entropy, 0xFF);
 2285              		.loc 1 518 0
 2286 0022 2046     		mov	r0, r4
 2287 0024 FFF7FEFF 		bl	flush_bits_e
 2288              	.LVL274:
 519:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     emit_byte_e(entropy, JPEG_RST0 + restart_num);
 2289              		.loc 1 519 0
 2290 0028 236F     		ldr	r3, [r4, #112]
 2291 002a 5A1C     		adds	r2, r3, #1
 2292 002c 2267     		str	r2, [r4, #112]
 2293 002e FF22     		movs	r2, #255
 2294 0030 1A70     		strb	r2, [r3]
 2295 0032 636F     		ldr	r3, [r4, #116]
 2296 0034 013B     		subs	r3, r3, #1
 2297 0036 6367     		str	r3, [r4, #116]
 2298 0038 6BB1     		cbz	r3, .L204
 2299              	.L196:
 520:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   }
 2300              		.loc 1 520 0
 2301 003a 236F     		ldr	r3, [r4, #112]
 2302 003c 5A1C     		adds	r2, r3, #1
 2303 003e 2267     		str	r2, [r4, #112]
 2304 0040 303D     		subs	r5, r5, #48
 2305              	.LVL275:
 2306 0042 1D70     		strb	r5, [r3]
 2307 0044 636F     		ldr	r3, [r4, #116]
 2308 0046 013B     		subs	r3, r3, #1
 2309 0048 6367     		str	r3, [r4, #116]
 2310 004a 002B     		cmp	r3, #0
 2311 004c DFD1     		bne	.L195
 520:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   }
 2312              		.loc 1 520 0 is_stmt 0 discriminator 1
 2313 004e 2046     		mov	r0, r4
 2314 0050 FFF7FEFF 		bl	dump_buffer_e
 2315              	.LVL276:
 2316 0054 DBE7     		b	.L195
 2317              	.LVL277:
 2318              	.L204:
 519:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     emit_byte_e(entropy, JPEG_RST0 + restart_num);
 2319              		.loc 1 519 0 is_stmt 1 discriminator 1
 2320 0056 2046     		mov	r0, r4
 2321 0058 FFF7FEFF 		bl	dump_buffer_e
 2322              	.LVL278:
 2323 005c EDE7     		b	.L196
 2324              	.LVL279:
 2325              	.L199:
ARM GAS  /tmp/cccRWS2v.s 			page 74


 526:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   } else {
 2326              		.loc 1 526 0 discriminator 3
 2327 005e 1A1D     		adds	r2, r3, #4
 2328 0060 04EB8202 		add	r2, r4, r2, lsl #2
 2329 0064 0020     		movs	r0, #0
 2330 0066 5060     		str	r0, [r2, #4]
 525:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       entropy->saved.last_dc_val[ci] = 0;
 2331              		.loc 1 525 0 discriminator 3
 2332 0068 0133     		adds	r3, r3, #1
 2333              	.LVL280:
 2334              	.L197:
 525:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       entropy->saved.last_dc_val[ci] = 0;
 2335              		.loc 1 525 0 is_stmt 0 discriminator 1
 2336 006a D1F82021 		ldr	r2, [r1, #288]
 2337 006e 9A42     		cmp	r2, r3
 2338 0070 F5DC     		bgt	.L199
 2339              	.LVL281:
 2340              	.L194:
 532:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 2341              		.loc 1 532 0 is_stmt 1
 2342 0072 38BD     		pop	{r3, r4, r5, pc}
 2343              		.cfi_endproc
 2344              	.LFE15:
 2346              		.section	.text.encode_mcu_DC_first,"ax",%progbits
 2347              		.align	1
 2348              		.syntax unified
 2349              		.thumb
 2350              		.thumb_func
 2351              		.fpu fpv5-sp-d16
 2353              	encode_mcu_DC_first:
 2354              	.LFB16:
 542:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   huff_entropy_ptr entropy = (huff_entropy_ptr) cinfo->entropy;
 2355              		.loc 1 542 0
 2356              		.cfi_startproc
 2357              		@ args = 0, pretend = 0, frame = 8
 2358              		@ frame_needed = 0, uses_anonymous_args = 0
 2359              	.LVL282:
 2360 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 2361              	.LCFI22:
 2362              		.cfi_def_cfa_offset 36
 2363              		.cfi_offset 4, -36
 2364              		.cfi_offset 5, -32
 2365              		.cfi_offset 6, -28
 2366              		.cfi_offset 7, -24
 2367              		.cfi_offset 8, -20
 2368              		.cfi_offset 9, -16
 2369              		.cfi_offset 10, -12
 2370              		.cfi_offset 11, -8
 2371              		.cfi_offset 14, -4
 2372 0004 83B0     		sub	sp, sp, #12
 2373              	.LCFI23:
 2374              		.cfi_def_cfa_offset 48
 2375 0006 0646     		mov	r6, r0
 2376 0008 8B46     		mov	fp, r1
 543:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   register int temp, temp2;
 2377              		.loc 1 543 0
 2378 000a D0F8A441 		ldr	r4, [r0, #420]
ARM GAS  /tmp/cccRWS2v.s 			page 75


 2379              	.LVL283:
 547:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   JBLOCKROW block;
 2380              		.loc 1 547 0
 2381 000e D0F87431 		ldr	r3, [r0, #372]
 2382 0012 0193     		str	r3, [sp, #4]
 2383              	.LVL284:
 552:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   entropy->free_in_buffer = cinfo->dest->free_in_buffer;
 2384              		.loc 1 552 0
 2385 0014 8369     		ldr	r3, [r0, #24]
 2386              	.LVL285:
 2387 0016 1B68     		ldr	r3, [r3]
 2388 0018 2367     		str	r3, [r4, #112]
 2389              	.LVL286:
 553:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 2390              		.loc 1 553 0
 2391 001a 8369     		ldr	r3, [r0, #24]
 2392 001c 5B68     		ldr	r3, [r3, #4]
 2393 001e 6367     		str	r3, [r4, #116]
 556:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     if (entropy->restarts_to_go == 0)
 2394              		.loc 1 556 0
 2395 0020 D0F8EC30 		ldr	r3, [r0, #236]
 2396 0024 0BB1     		cbz	r3, .L206
 557:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       emit_restart_e(entropy, entropy->next_restart_num);
 2397              		.loc 1 557 0
 2398 0026 636A     		ldr	r3, [r4, #36]
 2399 0028 0BB1     		cbz	r3, .L230
 2400              	.LVL287:
 2401              	.L206:
 585:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     while (temp) {
 2402              		.loc 1 585 0 discriminator 1
 2403 002a 0027     		movs	r7, #0
 2404 002c 25E0     		b	.L207
 2405              	.LVL288:
 2406              	.L230:
 558:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 2407              		.loc 1 558 0
 2408 002e A16A     		ldr	r1, [r4, #40]
 2409              	.LVL289:
 2410 0030 2046     		mov	r0, r4
 2411              	.LVL290:
 2412 0032 FFF7FEFF 		bl	emit_restart_e
 2413              	.LVL291:
 2414 0036 F8E7     		b	.L206
 2415              	.LVL292:
 2416              	.L233:
 581:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     }
 2417              		.loc 1 581 0
 2418 0038 5A1E     		subs	r2, r3, #1
 2419 003a 0092     		str	r2, [sp]
 2420              	.LVL293:
 578:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       /* For a negative input, want temp2 = bitwise complement of abs(input) */
 2421              		.loc 1 578 0
 2422 003c 5B42     		negs	r3, r3
 2423              	.LVL294:
 2424 003e 39E0     		b	.L208
 2425              	.LVL295:
 2426              	.L210:
ARM GAS  /tmp/cccRWS2v.s 			page 76


 587:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       temp >>= 1;
 2427              		.loc 1 587 0
 2428 0040 0135     		adds	r5, r5, #1
 2429              	.LVL296:
 588:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     }
 2430              		.loc 1 588 0
 2431 0042 5B10     		asrs	r3, r3, #1
 2432              	.LVL297:
 2433              	.L209:
 586:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       nbits++;
 2434              		.loc 1 586 0
 2435 0044 002B     		cmp	r3, #0
 2436 0046 FBD1     		bne	.L210
 593:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       ERREXIT(cinfo, JERR_BAD_DCT_COEF);
 2437              		.loc 1 593 0
 2438 0048 0B2D     		cmp	r5, #11
 2439 004a 06DD     		ble	.L211
 594:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     
 2440              		.loc 1 594 0
 2441 004c 3368     		ldr	r3, [r6]
 2442              	.LVL298:
 2443 004e 0622     		movs	r2, #6
 2444 0050 5A61     		str	r2, [r3, #20]
 2445 0052 3368     		ldr	r3, [r6]
 2446 0054 1B68     		ldr	r3, [r3]
 2447 0056 3046     		mov	r0, r6
 2448 0058 9847     		blx	r3
 2449              	.LVL299:
 2450              	.L211:
 597:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     
 2451              		.loc 1 597 0
 2452 005a D8F81430 		ldr	r3, [r8, #20]
 2453              	.LVL300:
 2454              	.LBB56:
 2455              	.LBB57:
 413:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     entropy->dc_count_ptrs[tbl_no][symbol]++;
 2456              		.loc 1 413 0
 2457 005e E26E     		ldr	r2, [r4, #108]
 2458 0060 52B3     		cbz	r2, .L212
 414:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   else {
 2459              		.loc 1 414 0
 2460 0062 1233     		adds	r3, r3, #18
 2461              	.LVL301:
 2462 0064 04EB8303 		add	r3, r4, r3, lsl #2
 2463 0068 5A68     		ldr	r2, [r3, #4]
 2464 006a 52F82530 		ldr	r3, [r2, r5, lsl #2]
 2465 006e 0133     		adds	r3, r3, #1
 2466 0070 42F82530 		str	r3, [r2, r5, lsl #2]
 2467              	.LVL302:
 2468              	.L213:
 2469              	.LBE57:
 2470              	.LBE56:
 601:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       emit_bits_e(entropy, (unsigned int) temp2, nbits);
 2471              		.loc 1 601 0
 2472 0074 002D     		cmp	r5, #0
 2473 0076 74D1     		bne	.L231
 2474              	.LVL303:
ARM GAS  /tmp/cccRWS2v.s 			page 77


 2475              	.L219:
 561:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     block = MCU_data[blkn];
 2476              		.loc 1 561 0 discriminator 2
 2477 0078 0137     		adds	r7, r7, #1
 2478              	.LVL304:
 2479              	.L207:
 561:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     block = MCU_data[blkn];
 2480              		.loc 1 561 0 is_stmt 0 discriminator 1
 2481 007a D6F83C31 		ldr	r3, [r6, #316]
 2482 007e BB42     		cmp	r3, r7
 2483 0080 40F3B680 		ble	.L232
 562:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     ci = cinfo->MCU_membership[blkn];
 2484              		.loc 1 562 0 is_stmt 1
 2485 0084 5BF82710 		ldr	r1, [fp, r7, lsl #2]
 2486              	.LVL305:
 563:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     compptr = cinfo->cur_comp_info[ci];
 2487              		.loc 1 563 0
 2488 0088 07F15003 		add	r3, r7, #80
 2489 008c 56F82320 		ldr	r2, [r6, r3, lsl #2]
 2490              	.LVL306:
 564:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 2491              		.loc 1 564 0
 2492 0090 02F14803 		add	r3, r2, #72
 2493 0094 06EB8303 		add	r3, r6, r3, lsl #2
 2494 0098 D3F80480 		ldr	r8, [r3, #4]
 2495              	.LVL307:
 569:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 2496              		.loc 1 569 0
 2497 009c B1F90030 		ldrsh	r3, [r1]
 2498 00a0 0199     		ldr	r1, [sp, #4]
 2499              	.LVL308:
 2500 00a2 0B41     		asrs	r3, r3, r1
 2501              	.LVL309:
 572:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     entropy->saved.last_dc_val[ci] = temp2;
 2502              		.loc 1 572 0
 2503 00a4 0432     		adds	r2, r2, #4
 2504              	.LVL310:
 2505 00a6 04EB8202 		add	r2, r4, r2, lsl #2
 2506 00aa 5168     		ldr	r1, [r2, #4]
 2507              	.LVL311:
 573:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 2508              		.loc 1 573 0
 2509 00ac 5360     		str	r3, [r2, #4]
 2510              	.LVL312:
 577:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       temp = -temp;		/* temp is abs value of input */
 2511              		.loc 1 577 0
 2512 00ae 5B1A     		subs	r3, r3, r1
 2513              	.LVL313:
 2514 00b0 C2D4     		bmi	.L233
 576:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     if (temp < 0) {
 2515              		.loc 1 576 0
 2516 00b2 0093     		str	r3, [sp]
 2517              	.LVL314:
 2518              	.L208:
 585:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     while (temp) {
 2519              		.loc 1 585 0
 2520 00b4 0025     		movs	r5, #0
ARM GAS  /tmp/cccRWS2v.s 			page 78


 586:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       nbits++;
 2521              		.loc 1 586 0
 2522 00b6 C5E7     		b	.L209
 2523              	.LVL315:
 2524              	.L212:
 2525              	.LBB64:
 2526              	.LBB63:
 2527              	.LBB58:
 416:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     emit_bits_e(entropy, tbl->ehufco[symbol], tbl->ehufsi[symbol]);
 2528              		.loc 1 416 0
 2529 00b8 0A33     		adds	r3, r3, #10
 2530              	.LVL316:
 2531 00ba 04EB8303 		add	r3, r4, r3, lsl #2
 2532 00be 5B68     		ldr	r3, [r3, #4]
 2533              	.LVL317:
 417:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   }
 2534              		.loc 1 417 0
 2535 00c0 53F82590 		ldr	r9, [r3, r5, lsl #2]
 2536 00c4 2B44     		add	r3, r3, r5
 2537              	.LVL318:
 2538 00c6 93F80084 		ldrb	r8, [r3, #1024]	@ zero_extendqisi2
 2539              	.LVL319:
 2540              	.LBB59:
 2541              	.LBB60:
 351:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 2542              		.loc 1 351 0
 2543 00ca D4F810A0 		ldr	r10, [r4, #16]
 2544              	.LVL320:
 354:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     ERREXIT(entropy->cinfo, JERR_HUFF_MISSING_CODE);
 2545              		.loc 1 354 0
 2546 00ce B8F1000F 		cmp	r8, #0
 2547 00d2 07D1     		bne	.L214
 355:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 2548              		.loc 1 355 0
 2549 00d4 A36F     		ldr	r3, [r4, #120]
 2550 00d6 1B68     		ldr	r3, [r3]
 2551 00d8 2922     		movs	r2, #41
 2552 00da 5A61     		str	r2, [r3, #20]
 2553 00dc A06F     		ldr	r0, [r4, #120]
 2554 00de 0368     		ldr	r3, [r0]
 2555 00e0 1B68     		ldr	r3, [r3]
 2556 00e2 9847     		blx	r3
 2557              	.LVL321:
 2558              	.L214:
 357:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     return;			/* do nothing if we're only getting stats */
 2559              		.loc 1 357 0
 2560 00e4 E36E     		ldr	r3, [r4, #108]
 2561 00e6 002B     		cmp	r3, #0
 2562 00e8 C4D1     		bne	.L213
 360:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   
 2563              		.loc 1 360 0
 2564 00ea 0123     		movs	r3, #1
 2565 00ec 03FA08F3 		lsl	r3, r3, r8
 2566 00f0 013B     		subs	r3, r3, #1
 2567 00f2 09EA0309 		and	r9, r9, r3
 2568              	.LVL322:
 362:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
ARM GAS  /tmp/cccRWS2v.s 			page 79


 2569              		.loc 1 362 0
 2570 00f6 D044     		add	r8, r8, r10
 2571              	.LVL323:
 364:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 2572              		.loc 1 364 0
 2573 00f8 C8F11803 		rsb	r3, r8, #24
 2574 00fc 09FA03F9 		lsl	r9, r9, r3
 2575              	.LVL324:
 367:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 2576              		.loc 1 367 0
 2577 0100 E368     		ldr	r3, [r4, #12]
 2578 0102 49EA0309 		orr	r9, r9, r3
 2579              	.LVL325:
 2580 0106 07E0     		b	.L215
 2581              	.LVL326:
 2582              	.L235:
 2583              	.LBB61:
 372:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     if (c == 0xFF) {		/* need to stuff a zero byte? */
 2584              		.loc 1 372 0
 2585 0108 2046     		mov	r0, r4
 2586 010a FFF7FEFF 		bl	dump_buffer_e
 2587              	.LVL327:
 2588 010e 12E0     		b	.L216
 2589              	.L217:
 376:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     put_bits -= 8;
 2590              		.loc 1 376 0
 2591 0110 4FEA0929 		lsl	r9, r9, #8
 2592              	.LVL328:
 377:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   }
 2593              		.loc 1 377 0
 2594 0114 A8F10808 		sub	r8, r8, #8
 2595              	.LVL329:
 2596              	.L215:
 2597              	.LBE61:
 369:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     int c = (int) ((put_buffer >> 16) & 0xFF);
 2598              		.loc 1 369 0
 2599 0118 B8F1070F 		cmp	r8, #7
 2600 011c 1CDD     		ble	.L234
 2601              	.LBB62:
 370:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 2602              		.loc 1 370 0
 2603 011e C9F3074A 		ubfx	r10, r9, #16, #8
 2604              	.LVL330:
 372:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     if (c == 0xFF) {		/* need to stuff a zero byte? */
 2605              		.loc 1 372 0
 2606 0122 236F     		ldr	r3, [r4, #112]
 2607 0124 5A1C     		adds	r2, r3, #1
 2608 0126 2267     		str	r2, [r4, #112]
 2609 0128 83F800A0 		strb	r10, [r3]
 2610 012c 636F     		ldr	r3, [r4, #116]
 2611 012e 013B     		subs	r3, r3, #1
 2612 0130 6367     		str	r3, [r4, #116]
 2613 0132 002B     		cmp	r3, #0
 2614 0134 E8D0     		beq	.L235
 2615              	.L216:
 373:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       emit_byte_e(entropy, 0);
 2616              		.loc 1 373 0
ARM GAS  /tmp/cccRWS2v.s 			page 80


 2617 0136 BAF1FF0F 		cmp	r10, #255
 2618 013a E9D1     		bne	.L217
 374:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     }
 2619              		.loc 1 374 0
 2620 013c 236F     		ldr	r3, [r4, #112]
 2621 013e 5A1C     		adds	r2, r3, #1
 2622 0140 2267     		str	r2, [r4, #112]
 2623 0142 0022     		movs	r2, #0
 2624 0144 1A70     		strb	r2, [r3]
 2625 0146 636F     		ldr	r3, [r4, #116]
 2626 0148 013B     		subs	r3, r3, #1
 2627 014a 6367     		str	r3, [r4, #116]
 2628 014c 002B     		cmp	r3, #0
 2629 014e DFD1     		bne	.L217
 2630 0150 2046     		mov	r0, r4
 2631 0152 FFF7FEFF 		bl	dump_buffer_e
 2632              	.LVL331:
 2633 0156 DBE7     		b	.L217
 2634              	.LVL332:
 2635              	.L234:
 2636              	.LBE62:
 380:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   entropy->saved.put_bits = put_bits;
 2637              		.loc 1 380 0
 2638 0158 C4F80C90 		str	r9, [r4, #12]
 381:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** }
 2639              		.loc 1 381 0
 2640 015c C4F81080 		str	r8, [r4, #16]
 2641 0160 88E7     		b	.L213
 2642              	.LVL333:
 2643              	.L231:
 2644              	.LBE60:
 2645              	.LBE59:
 2646              	.LBE58:
 2647              	.LBE63:
 2648              	.LBE64:
 2649              	.LBB65:
 2650              	.LBB66:
 351:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 2651              		.loc 1 351 0
 2652 0162 D4F81080 		ldr	r8, [r4, #16]
 2653              	.LVL334:
 354:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     ERREXIT(entropy->cinfo, JERR_HUFF_MISSING_CODE);
 2654              		.loc 1 354 0
 2655 0166 3DB9     		cbnz	r5, .L220
 355:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 2656              		.loc 1 355 0
 2657 0168 A36F     		ldr	r3, [r4, #120]
 2658 016a 1B68     		ldr	r3, [r3]
 2659 016c 2922     		movs	r2, #41
 2660 016e 5A61     		str	r2, [r3, #20]
 2661 0170 A06F     		ldr	r0, [r4, #120]
 2662 0172 0368     		ldr	r3, [r0]
 2663 0174 1B68     		ldr	r3, [r3]
 2664 0176 9847     		blx	r3
 2665              	.LVL335:
 2666              	.L220:
 357:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     return;			/* do nothing if we're only getting stats */
ARM GAS  /tmp/cccRWS2v.s 			page 81


 2667              		.loc 1 357 0
 2668 0178 E36E     		ldr	r3, [r4, #108]
 2669 017a 002B     		cmp	r3, #0
 2670 017c 7FF47CAF 		bne	.L219
 360:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   
 2671              		.loc 1 360 0
 2672 0180 0123     		movs	r3, #1
 2673 0182 AB40     		lsls	r3, r3, r5
 2674 0184 013B     		subs	r3, r3, #1
 2675 0186 009A     		ldr	r2, [sp]
 2676 0188 1A40     		ands	r2, r2, r3
 2677              	.LVL336:
 362:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 2678              		.loc 1 362 0
 2679 018a A844     		add	r8, r8, r5
 2680              	.LVL337:
 364:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 2681              		.loc 1 364 0
 2682 018c C8F11805 		rsb	r5, r8, #24
 2683              	.LVL338:
 2684 0190 02FA05F5 		lsl	r5, r2, r5
 2685              	.LVL339:
 367:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 2686              		.loc 1 367 0
 2687 0194 E368     		ldr	r3, [r4, #12]
 2688 0196 1D43     		orrs	r5, r5, r3
 2689              	.LVL340:
 2690 0198 06E0     		b	.L221
 2691              	.LVL341:
 2692              	.L237:
 2693              	.LBB67:
 372:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     if (c == 0xFF) {		/* need to stuff a zero byte? */
 2694              		.loc 1 372 0
 2695 019a 2046     		mov	r0, r4
 2696 019c FFF7FEFF 		bl	dump_buffer_e
 2697              	.LVL342:
 2698 01a0 11E0     		b	.L222
 2699              	.L223:
 376:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     put_bits -= 8;
 2700              		.loc 1 376 0
 2701 01a2 2D02     		lsls	r5, r5, #8
 2702              	.LVL343:
 377:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   }
 2703              		.loc 1 377 0
 2704 01a4 A8F10808 		sub	r8, r8, #8
 2705              	.LVL344:
 2706              	.L221:
 2707              	.LBE67:
 369:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     int c = (int) ((put_buffer >> 16) & 0xFF);
 2708              		.loc 1 369 0
 2709 01a8 B8F1070F 		cmp	r8, #7
 2710 01ac 1CDD     		ble	.L236
 2711              	.LBB68:
 370:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 2712              		.loc 1 370 0
 2713 01ae C5F30749 		ubfx	r9, r5, #16, #8
 2714              	.LVL345:
ARM GAS  /tmp/cccRWS2v.s 			page 82


 372:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     if (c == 0xFF) {		/* need to stuff a zero byte? */
 2715              		.loc 1 372 0
 2716 01b2 236F     		ldr	r3, [r4, #112]
 2717 01b4 5A1C     		adds	r2, r3, #1
 2718 01b6 2267     		str	r2, [r4, #112]
 2719 01b8 83F80090 		strb	r9, [r3]
 2720 01bc 636F     		ldr	r3, [r4, #116]
 2721 01be 013B     		subs	r3, r3, #1
 2722 01c0 6367     		str	r3, [r4, #116]
 2723 01c2 002B     		cmp	r3, #0
 2724 01c4 E9D0     		beq	.L237
 2725              	.L222:
 373:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       emit_byte_e(entropy, 0);
 2726              		.loc 1 373 0
 2727 01c6 B9F1FF0F 		cmp	r9, #255
 2728 01ca EAD1     		bne	.L223
 374:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     }
 2729              		.loc 1 374 0
 2730 01cc 236F     		ldr	r3, [r4, #112]
 2731 01ce 5A1C     		adds	r2, r3, #1
 2732 01d0 2267     		str	r2, [r4, #112]
 2733 01d2 0022     		movs	r2, #0
 2734 01d4 1A70     		strb	r2, [r3]
 2735 01d6 636F     		ldr	r3, [r4, #116]
 2736 01d8 013B     		subs	r3, r3, #1
 2737 01da 6367     		str	r3, [r4, #116]
 2738 01dc 002B     		cmp	r3, #0
 2739 01de E0D1     		bne	.L223
 2740 01e0 2046     		mov	r0, r4
 2741 01e2 FFF7FEFF 		bl	dump_buffer_e
 2742              	.LVL346:
 2743 01e6 DCE7     		b	.L223
 2744              	.LVL347:
 2745              	.L236:
 2746              	.LBE68:
 380:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   entropy->saved.put_bits = put_bits;
 2747              		.loc 1 380 0
 2748 01e8 E560     		str	r5, [r4, #12]
 381:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** }
 2749              		.loc 1 381 0
 2750 01ea C4F81080 		str	r8, [r4, #16]
 2751 01ee 43E7     		b	.L219
 2752              	.LVL348:
 2753              	.L232:
 2754              	.LBE66:
 2755              	.LBE65:
 605:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   cinfo->dest->free_in_buffer = entropy->free_in_buffer;
 2756              		.loc 1 605 0
 2757 01f0 B369     		ldr	r3, [r6, #24]
 2758 01f2 226F     		ldr	r2, [r4, #112]
 2759 01f4 1A60     		str	r2, [r3]
 606:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 2760              		.loc 1 606 0
 2761 01f6 B369     		ldr	r3, [r6, #24]
 2762 01f8 626F     		ldr	r2, [r4, #116]
 2763 01fa 5A60     		str	r2, [r3, #4]
 609:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     if (entropy->restarts_to_go == 0) {
ARM GAS  /tmp/cccRWS2v.s 			page 83


 2764              		.loc 1 609 0
 2765 01fc D6F8EC30 		ldr	r3, [r6, #236]
 2766 0200 53B1     		cbz	r3, .L226
 610:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       entropy->restarts_to_go = cinfo->restart_interval;
 2767              		.loc 1 610 0
 2768 0202 626A     		ldr	r2, [r4, #36]
 2769 0204 2AB9     		cbnz	r2, .L227
 611:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       entropy->next_restart_num++;
 2770              		.loc 1 611 0
 2771 0206 6362     		str	r3, [r4, #36]
 612:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       entropy->next_restart_num &= 7;
 2772              		.loc 1 612 0
 2773 0208 A36A     		ldr	r3, [r4, #40]
 2774 020a 0133     		adds	r3, r3, #1
 613:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     }
 2775              		.loc 1 613 0
 2776 020c 03F00703 		and	r3, r3, #7
 2777 0210 A362     		str	r3, [r4, #40]
 2778              	.L227:
 615:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   }
 2779              		.loc 1 615 0
 2780 0212 636A     		ldr	r3, [r4, #36]
 2781 0214 013B     		subs	r3, r3, #1
 2782 0216 6362     		str	r3, [r4, #36]
 2783              	.L226:
 619:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 2784              		.loc 1 619 0
 2785 0218 0120     		movs	r0, #1
 2786 021a 03B0     		add	sp, sp, #12
 2787              	.LCFI24:
 2788              		.cfi_def_cfa_offset 36
 2789              		@ sp needed
 2790 021c BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 2791              		.cfi_endproc
 2792              	.LFE16:
 2794              		.section	.text.encode_mcu_DC_refine,"ax",%progbits
 2795              		.align	1
 2796              		.syntax unified
 2797              		.thumb
 2798              		.thumb_func
 2799              		.fpu fpv5-sp-d16
 2801              	encode_mcu_DC_refine:
 2802              	.LFB18:
 740:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   huff_entropy_ptr entropy = (huff_entropy_ptr) cinfo->entropy;
 2803              		.loc 1 740 0
 2804              		.cfi_startproc
 2805              		@ args = 0, pretend = 0, frame = 0
 2806              		@ frame_needed = 0, uses_anonymous_args = 0
 2807              	.LVL349:
 2808 0000 2DE9F84F 		push	{r3, r4, r5, r6, r7, r8, r9, r10, fp, lr}
 2809              	.LCFI25:
 2810              		.cfi_def_cfa_offset 40
 2811              		.cfi_offset 3, -40
 2812              		.cfi_offset 4, -36
 2813              		.cfi_offset 5, -32
 2814              		.cfi_offset 6, -28
 2815              		.cfi_offset 7, -24
ARM GAS  /tmp/cccRWS2v.s 			page 84


 2816              		.cfi_offset 8, -20
 2817              		.cfi_offset 9, -16
 2818              		.cfi_offset 10, -12
 2819              		.cfi_offset 11, -8
 2820              		.cfi_offset 14, -4
 2821 0004 8146     		mov	r9, r0
 2822 0006 8B46     		mov	fp, r1
 741:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   register int temp;
 2823              		.loc 1 741 0
 2824 0008 D0F8A441 		ldr	r4, [r0, #420]
 2825              	.LVL350:
 744:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   JBLOCKROW block;
 2826              		.loc 1 744 0
 2827 000c D0F874A1 		ldr	r10, [r0, #372]
 2828              	.LVL351:
 747:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   entropy->free_in_buffer = cinfo->dest->free_in_buffer;
 2829              		.loc 1 747 0
 2830 0010 8369     		ldr	r3, [r0, #24]
 2831 0012 1B68     		ldr	r3, [r3]
 2832 0014 2367     		str	r3, [r4, #112]
 748:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 2833              		.loc 1 748 0
 2834 0016 8369     		ldr	r3, [r0, #24]
 2835 0018 5B68     		ldr	r3, [r3, #4]
 2836 001a 6367     		str	r3, [r4, #116]
 751:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     if (entropy->restarts_to_go == 0)
 2837              		.loc 1 751 0
 2838 001c D0F8EC30 		ldr	r3, [r0, #236]
 2839 0020 0BB1     		cbz	r3, .L239
 752:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       emit_restart_e(entropy, entropy->next_restart_num);
 2840              		.loc 1 752 0
 2841 0022 636A     		ldr	r3, [r4, #36]
 2842 0024 13B1     		cbz	r3, .L250
 2843              	.LVL352:
 2844              	.L239:
 740:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   huff_entropy_ptr entropy = (huff_entropy_ptr) cinfo->entropy;
 2845              		.loc 1 740 0 discriminator 1
 2846 0026 4FF00008 		mov	r8, #0
 2847 002a 2BE0     		b	.L240
 2848              	.LVL353:
 2849              	.L250:
 753:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 2850              		.loc 1 753 0
 2851 002c A16A     		ldr	r1, [r4, #40]
 2852              	.LVL354:
 2853 002e 2046     		mov	r0, r4
 2854              	.LVL355:
 2855 0030 FFF7FEFF 		bl	emit_restart_e
 2856              	.LVL356:
 2857 0034 F7E7     		b	.L239
 2858              	.LVL357:
 2859              	.L252:
 2860              	.LBB72:
 2861              	.LBB73:
 2862              	.LBB74:
 372:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     if (c == 0xFF) {		/* need to stuff a zero byte? */
 2863              		.loc 1 372 0
ARM GAS  /tmp/cccRWS2v.s 			page 85


 2864 0036 2046     		mov	r0, r4
 2865 0038 FFF7FEFF 		bl	dump_buffer_e
 2866              	.LVL358:
 2867 003c 0EE0     		b	.L243
 2868              	.L244:
 376:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     put_bits -= 8;
 2869              		.loc 1 376 0
 2870 003e 2D02     		lsls	r5, r5, #8
 2871              	.LVL359:
 377:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   }
 2872              		.loc 1 377 0
 2873 0040 083E     		subs	r6, r6, #8
 2874              	.LVL360:
 2875              	.L242:
 2876              	.LBE74:
 369:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     int c = (int) ((put_buffer >> 16) & 0xFF);
 2877              		.loc 1 369 0
 2878 0042 072E     		cmp	r6, #7
 2879 0044 1ADD     		ble	.L251
 2880              	.LBB75:
 370:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 2881              		.loc 1 370 0
 2882 0046 C5F30747 		ubfx	r7, r5, #16, #8
 2883              	.LVL361:
 372:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     if (c == 0xFF) {		/* need to stuff a zero byte? */
 2884              		.loc 1 372 0
 2885 004a 236F     		ldr	r3, [r4, #112]
 2886 004c 5A1C     		adds	r2, r3, #1
 2887 004e 2267     		str	r2, [r4, #112]
 2888 0050 1F70     		strb	r7, [r3]
 2889 0052 636F     		ldr	r3, [r4, #116]
 2890 0054 013B     		subs	r3, r3, #1
 2891 0056 6367     		str	r3, [r4, #116]
 2892 0058 002B     		cmp	r3, #0
 2893 005a ECD0     		beq	.L252
 2894              	.L243:
 373:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       emit_byte_e(entropy, 0);
 2895              		.loc 1 373 0
 2896 005c FF2F     		cmp	r7, #255
 2897 005e EED1     		bne	.L244
 374:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     }
 2898              		.loc 1 374 0
 2899 0060 236F     		ldr	r3, [r4, #112]
 2900 0062 5A1C     		adds	r2, r3, #1
 2901 0064 2267     		str	r2, [r4, #112]
 2902 0066 0022     		movs	r2, #0
 2903 0068 1A70     		strb	r2, [r3]
 2904 006a 636F     		ldr	r3, [r4, #116]
 2905 006c 013B     		subs	r3, r3, #1
 2906 006e 6367     		str	r3, [r4, #116]
 2907 0070 002B     		cmp	r3, #0
 2908 0072 E4D1     		bne	.L244
 2909 0074 2046     		mov	r0, r4
 2910 0076 FFF7FEFF 		bl	dump_buffer_e
 2911              	.LVL362:
 2912 007a E0E7     		b	.L244
 2913              	.LVL363:
ARM GAS  /tmp/cccRWS2v.s 			page 86


 2914              	.L251:
 2915              	.LBE75:
 380:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   entropy->saved.put_bits = put_bits;
 2916              		.loc 1 380 0
 2917 007c E560     		str	r5, [r4, #12]
 381:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** }
 2918              		.loc 1 381 0
 2919 007e 2661     		str	r6, [r4, #16]
 2920              	.L241:
 2921              	.LVL364:
 2922              	.LBE73:
 2923              	.LBE72:
 756:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     block = MCU_data[blkn];
 2924              		.loc 1 756 0 discriminator 3
 2925 0080 08F10108 		add	r8, r8, #1
 2926              	.LVL365:
 2927              	.L240:
 756:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     block = MCU_data[blkn];
 2928              		.loc 1 756 0 is_stmt 0 discriminator 1
 2929 0084 D9F83C31 		ldr	r3, [r9, #316]
 2930 0088 4345     		cmp	r3, r8
 2931 008a 12DD     		ble	.L253
 757:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 2932              		.loc 1 757 0 is_stmt 1 discriminator 3
 2933 008c 5BF82830 		ldr	r3, [fp, r8, lsl #2]
 2934              	.LVL366:
 760:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     emit_bits_e(entropy, (unsigned int) (temp >> Al), 1);
 2935              		.loc 1 760 0 discriminator 3
 2936 0090 B3F90050 		ldrsh	r5, [r3]
 2937              	.LVL367:
 761:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   }
 2938              		.loc 1 761 0 discriminator 3
 2939 0094 45FA0AF5 		asr	r5, r5, r10
 2940              	.LVL368:
 2941              	.LBB77:
 2942              	.LBB76:
 351:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 2943              		.loc 1 351 0 discriminator 3
 2944 0098 2669     		ldr	r6, [r4, #16]
 2945              	.LVL369:
 357:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     return;			/* do nothing if we're only getting stats */
 2946              		.loc 1 357 0 discriminator 3
 2947 009a E36E     		ldr	r3, [r4, #108]
 2948              	.LVL370:
 2949 009c 002B     		cmp	r3, #0
 2950 009e EFD1     		bne	.L241
 360:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   
 2951              		.loc 1 360 0
 2952 00a0 05F00105 		and	r5, r5, #1
 2953              	.LVL371:
 362:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 2954              		.loc 1 362 0
 2955 00a4 0136     		adds	r6, r6, #1
 2956              	.LVL372:
 364:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 2957              		.loc 1 364 0
 2958 00a6 C6F11803 		rsb	r3, r6, #24
ARM GAS  /tmp/cccRWS2v.s 			page 87


 2959 00aa 9D40     		lsls	r5, r5, r3
 2960              	.LVL373:
 367:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 2961              		.loc 1 367 0
 2962 00ac E368     		ldr	r3, [r4, #12]
 2963 00ae 1D43     		orrs	r5, r5, r3
 2964              	.LVL374:
 2965 00b0 C7E7     		b	.L242
 2966              	.LVL375:
 2967              	.L253:
 2968              	.LBE76:
 2969              	.LBE77:
 764:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   cinfo->dest->free_in_buffer = entropy->free_in_buffer;
 2970              		.loc 1 764 0
 2971 00b2 D9F81830 		ldr	r3, [r9, #24]
 2972 00b6 226F     		ldr	r2, [r4, #112]
 2973 00b8 1A60     		str	r2, [r3]
 765:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 2974              		.loc 1 765 0
 2975 00ba D9F81830 		ldr	r3, [r9, #24]
 2976 00be 626F     		ldr	r2, [r4, #116]
 2977 00c0 5A60     		str	r2, [r3, #4]
 768:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     if (entropy->restarts_to_go == 0) {
 2978              		.loc 1 768 0
 2979 00c2 D9F8EC30 		ldr	r3, [r9, #236]
 2980 00c6 53B1     		cbz	r3, .L247
 769:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       entropy->restarts_to_go = cinfo->restart_interval;
 2981              		.loc 1 769 0
 2982 00c8 626A     		ldr	r2, [r4, #36]
 2983 00ca 2AB9     		cbnz	r2, .L248
 770:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       entropy->next_restart_num++;
 2984              		.loc 1 770 0
 2985 00cc 6362     		str	r3, [r4, #36]
 771:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       entropy->next_restart_num &= 7;
 2986              		.loc 1 771 0
 2987 00ce A36A     		ldr	r3, [r4, #40]
 2988 00d0 0133     		adds	r3, r3, #1
 772:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     }
 2989              		.loc 1 772 0
 2990 00d2 03F00703 		and	r3, r3, #7
 2991 00d6 A362     		str	r3, [r4, #40]
 2992              	.L248:
 774:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   }
 2993              		.loc 1 774 0
 2994 00d8 636A     		ldr	r3, [r4, #36]
 2995 00da 013B     		subs	r3, r3, #1
 2996 00dc 6362     		str	r3, [r4, #36]
 2997              	.L247:
 778:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 2998              		.loc 1 778 0
 2999 00de 0120     		movs	r0, #1
 3000 00e0 BDE8F88F 		pop	{r3, r4, r5, r6, r7, r8, r9, r10, fp, pc}
 3001              		.cfi_endproc
 3002              	.LFE18:
 3004              		.section	.text.encode_mcu_AC_first,"ax",%progbits
 3005              		.align	1
 3006              		.syntax unified
ARM GAS  /tmp/cccRWS2v.s 			page 88


 3007              		.thumb
 3008              		.thumb_func
 3009              		.fpu fpv5-sp-d16
 3011              	encode_mcu_AC_first:
 3012              	.LFB17:
 629:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   huff_entropy_ptr entropy = (huff_entropy_ptr) cinfo->entropy;
 3013              		.loc 1 629 0
 3014              		.cfi_startproc
 3015              		@ args = 0, pretend = 0, frame = 24
 3016              		@ frame_needed = 0, uses_anonymous_args = 0
 3017              	.LVL376:
 3018 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 3019              	.LCFI26:
 3020              		.cfi_def_cfa_offset 36
 3021              		.cfi_offset 4, -36
 3022              		.cfi_offset 5, -32
 3023              		.cfi_offset 6, -28
 3024              		.cfi_offset 7, -24
 3025              		.cfi_offset 8, -20
 3026              		.cfi_offset 9, -16
 3027              		.cfi_offset 10, -12
 3028              		.cfi_offset 11, -8
 3029              		.cfi_offset 14, -4
 3030 0004 87B0     		sub	sp, sp, #28
 3031              	.LCFI27:
 3032              		.cfi_def_cfa_offset 64
 3033 0006 8146     		mov	r9, r0
 3034 0008 0D46     		mov	r5, r1
 630:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   register int temp, temp2;
 3035              		.loc 1 630 0
 3036 000a D0F8A441 		ldr	r4, [r0, #420]
 3037              	.LVL377:
 638:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   entropy->free_in_buffer = cinfo->dest->free_in_buffer;
 3038              		.loc 1 638 0
 3039 000e 8369     		ldr	r3, [r0, #24]
 3040 0010 1B68     		ldr	r3, [r3]
 3041 0012 2367     		str	r3, [r4, #112]
 639:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 3042              		.loc 1 639 0
 3043 0014 8369     		ldr	r3, [r0, #24]
 3044 0016 5B68     		ldr	r3, [r3, #4]
 3045 0018 6367     		str	r3, [r4, #116]
 642:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     if (entropy->restarts_to_go == 0)
 3046              		.loc 1 642 0
 3047 001a D0F8EC30 		ldr	r3, [r0, #236]
 3048 001e 0BB1     		cbz	r3, .L255
 643:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       emit_restart_e(entropy, entropy->next_restart_num);
 3049              		.loc 1 643 0
 3050 0020 636A     		ldr	r3, [r4, #36]
 3051 0022 8BB1     		cbz	r3, .L294
 3052              	.LVL378:
 3053              	.L255:
 646:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   Al = cinfo->Al;
 3054              		.loc 1 646 0
 3055 0024 D9F86C31 		ldr	r3, [r9, #364]
 3056 0028 0193     		str	r3, [sp, #4]
 3057              	.LVL379:
ARM GAS  /tmp/cccRWS2v.s 			page 89


 647:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   natural_order = cinfo->natural_order;
 3058              		.loc 1 647 0
 3059 002a D9F87431 		ldr	r3, [r9, #372]
 3060              	.LVL380:
 3061 002e 0493     		str	r3, [sp, #16]
 3062              	.LVL381:
 648:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 3063              		.loc 1 648 0
 3064 0030 D9F87C31 		ldr	r3, [r9, #380]
 3065              	.LVL382:
 651:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 3066              		.loc 1 651 0
 3067 0034 2A68     		ldr	r2, [r5]
 3068 0036 0292     		str	r2, [sp, #8]
 3069              	.LVL383:
 657:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     if ((temp = (*block)[natural_order[k]]) == 0) {
 3070              		.loc 1 657 0
 3071 0038 D9F868A1 		ldr	r10, [r9, #360]
 3072              	.LVL384:
 655:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****    
 3073              		.loc 1 655 0
 3074 003c 4FF00008 		mov	r8, #0
 3075 0040 CDF81490 		str	r9, [sp, #20]
 3076 0044 9946     		mov	r9, r3
 3077              	.LVL385:
 657:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     if ((temp = (*block)[natural_order[k]]) == 0) {
 3078              		.loc 1 657 0
 3079 0046 08E0     		b	.L256
 3080              	.LVL386:
 3081              	.L294:
 644:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 3082              		.loc 1 644 0
 3083 0048 A16A     		ldr	r1, [r4, #40]
 3084              	.LVL387:
 3085 004a 2046     		mov	r0, r4
 3086              	.LVL388:
 3087 004c FFF7FEFF 		bl	emit_restart_e
 3088              	.LVL389:
 3089 0050 E8E7     		b	.L255
 3090              	.LVL390:
 3091              	.L296:
 659:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       continue;
 3092              		.loc 1 659 0
 3093 0052 08F10108 		add	r8, r8, #1
 3094              	.LVL391:
 3095              	.L258:
 657:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     if ((temp = (*block)[natural_order[k]]) == 0) {
 3096              		.loc 1 657 0 discriminator 2
 3097 0056 0AF1010A 		add	r10, r10, #1
 3098              	.LVL392:
 3099              	.L256:
 657:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     if ((temp = (*block)[natural_order[k]]) == 0) {
 3100              		.loc 1 657 0 is_stmt 0 discriminator 1
 3101 005a 019B     		ldr	r3, [sp, #4]
 3102 005c 9A45     		cmp	r10, r3
 3103 005e 00F32A81 		bgt	.L295
 658:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       r++;
ARM GAS  /tmp/cccRWS2v.s 			page 90


 3104              		.loc 1 658 0 is_stmt 1
 3105 0062 59F82A30 		ldr	r3, [r9, r10, lsl #2]
 3106 0066 029A     		ldr	r2, [sp, #8]
 3107 0068 32F91360 		ldrsh	r6, [r2, r3, lsl #1]
 3108              	.LVL393:
 3109 006c 002E     		cmp	r6, #0
 3110 006e F0D0     		beq	.L296
 667:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       temp = -temp;		/* temp is abs value of input */
 3111              		.loc 1 667 0
 3112 0070 002E     		cmp	r6, #0
 3113 0072 0BDB     		blt	.L297
 673:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       temp2 = temp;
 3114              		.loc 1 673 0
 3115 0074 049B     		ldr	r3, [sp, #16]
 3116 0076 1E41     		asrs	r6, r6, r3
 3117              	.LVL394:
 674:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     }
 3118              		.loc 1 674 0
 3119 0078 0396     		str	r6, [sp, #12]
 3120              	.LVL395:
 3121              	.L260:
 677:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       r++;
 3122              		.loc 1 677 0
 3123 007a 6EB1     		cbz	r6, .L298
 683:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       emit_eobrun(entropy);
 3124              		.loc 1 683 0
 3125 007c D4F88030 		ldr	r3, [r4, #128]
 3126 0080 002B     		cmp	r3, #0
 3127 0082 56D0     		beq	.L263
 684:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     /* if run length > 15, must emit special run-length-16 codes (0xF0) */
 3128              		.loc 1 684 0
 3129 0084 2046     		mov	r0, r4
 3130 0086 FFF7FEFF 		bl	emit_eobrun
 3131              	.LVL396:
 3132 008a 52E0     		b	.L263
 3133              	.LVL397:
 3134              	.L297:
 668:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       temp >>= Al;		/* apply the point transform */
 3135              		.loc 1 668 0
 3136 008c 7642     		negs	r6, r6
 3137              	.LVL398:
 669:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       /* For a negative coef, want temp2 = bitwise complement of abs(coef) */
 3138              		.loc 1 669 0
 3139 008e 049B     		ldr	r3, [sp, #16]
 3140 0090 1E41     		asrs	r6, r6, r3
 3141              	.LVL399:
 671:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     } else {
 3142              		.loc 1 671 0
 3143 0092 F343     		mvns	r3, r6
 3144 0094 0393     		str	r3, [sp, #12]
 3145              	.LVL400:
 3146 0096 F0E7     		b	.L260
 3147              	.LVL401:
 3148              	.L298:
 678:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       continue;
 3149              		.loc 1 678 0
 3150 0098 08F10108 		add	r8, r8, #1
ARM GAS  /tmp/cccRWS2v.s 			page 91


 3151              	.LVL402:
 679:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     }
 3152              		.loc 1 679 0
 3153 009c DBE7     		b	.L258
 3154              	.LVL403:
 3155              	.L264:
 3156              	.LBB93:
 3157              	.LBB94:
 3158              	.LBB95:
 429:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     emit_bits_e(entropy, tbl->ehufco[symbol], tbl->ehufsi[symbol]);
 3159              		.loc 1 429 0
 3160 009e 0E33     		adds	r3, r3, #14
 3161              	.LVL404:
 3162 00a0 04EB8303 		add	r3, r4, r3, lsl #2
 3163 00a4 5B68     		ldr	r3, [r3, #4]
 3164              	.LVL405:
 430:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   }
 3165              		.loc 1 430 0
 3166 00a6 D3F8C073 		ldr	r7, [r3, #960]
 3167 00aa 93F8F054 		ldrb	r5, [r3, #1264]	@ zero_extendqisi2
 3168              	.LVL406:
 3169              	.LBB96:
 3170              	.LBB97:
 351:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 3171              		.loc 1 351 0
 3172 00ae D4F810B0 		ldr	fp, [r4, #16]
 3173              	.LVL407:
 354:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     ERREXIT(entropy->cinfo, JERR_HUFF_MISSING_CODE);
 3174              		.loc 1 354 0
 3175 00b2 3DB9     		cbnz	r5, .L266
 355:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 3176              		.loc 1 355 0
 3177 00b4 A36F     		ldr	r3, [r4, #120]
 3178              	.LVL408:
 3179 00b6 1B68     		ldr	r3, [r3]
 3180 00b8 2922     		movs	r2, #41
 3181 00ba 5A61     		str	r2, [r3, #20]
 3182              	.LVL409:
 3183 00bc A06F     		ldr	r0, [r4, #120]
 3184 00be 0368     		ldr	r3, [r0]
 3185 00c0 1B68     		ldr	r3, [r3]
 3186 00c2 9847     		blx	r3
 3187              	.LVL410:
 3188              	.L266:
 357:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     return;			/* do nothing if we're only getting stats */
 3189              		.loc 1 357 0
 3190 00c4 E36E     		ldr	r3, [r4, #108]
 3191 00c6 002B     		cmp	r3, #0
 3192 00c8 31D1     		bne	.L265
 360:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   
 3193              		.loc 1 360 0
 3194 00ca 0123     		movs	r3, #1
 3195 00cc AB40     		lsls	r3, r3, r5
 3196 00ce 013B     		subs	r3, r3, #1
 3197 00d0 1F40     		ands	r7, r7, r3
 3198              	.LVL411:
 362:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
ARM GAS  /tmp/cccRWS2v.s 			page 92


 3199              		.loc 1 362 0
 3200 00d2 5D44     		add	r5, r5, fp
 3201              	.LVL412:
 364:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 3202              		.loc 1 364 0
 3203 00d4 C5F11803 		rsb	r3, r5, #24
 3204 00d8 9F40     		lsls	r7, r7, r3
 3205              	.LVL413:
 367:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 3206              		.loc 1 367 0
 3207 00da E368     		ldr	r3, [r4, #12]
 3208 00dc 1F43     		orrs	r7, r7, r3
 3209              	.LVL414:
 3210 00de 05E0     		b	.L267
 3211              	.LVL415:
 3212              	.L300:
 3213              	.LBB98:
 372:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     if (c == 0xFF) {		/* need to stuff a zero byte? */
 3214              		.loc 1 372 0
 3215 00e0 2046     		mov	r0, r4
 3216 00e2 FFF7FEFF 		bl	dump_buffer_e
 3217              	.LVL416:
 3218 00e6 0FE0     		b	.L268
 3219              	.L269:
 376:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     put_bits -= 8;
 3220              		.loc 1 376 0
 3221 00e8 3F02     		lsls	r7, r7, #8
 3222              	.LVL417:
 377:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   }
 3223              		.loc 1 377 0
 3224 00ea 083D     		subs	r5, r5, #8
 3225              	.LVL418:
 3226              	.L267:
 3227              	.LBE98:
 369:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     int c = (int) ((put_buffer >> 16) & 0xFF);
 3228              		.loc 1 369 0
 3229 00ec 072D     		cmp	r5, #7
 3230 00ee 1CDD     		ble	.L299
 3231              	.LBB99:
 370:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 3232              		.loc 1 370 0
 3233 00f0 C7F3074B 		ubfx	fp, r7, #16, #8
 3234              	.LVL419:
 372:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     if (c == 0xFF) {		/* need to stuff a zero byte? */
 3235              		.loc 1 372 0
 3236 00f4 236F     		ldr	r3, [r4, #112]
 3237 00f6 5A1C     		adds	r2, r3, #1
 3238 00f8 2267     		str	r2, [r4, #112]
 3239 00fa 83F800B0 		strb	fp, [r3]
 3240 00fe 636F     		ldr	r3, [r4, #116]
 3241 0100 013B     		subs	r3, r3, #1
 3242 0102 6367     		str	r3, [r4, #116]
 3243 0104 002B     		cmp	r3, #0
 3244 0106 EBD0     		beq	.L300
 3245              	.L268:
 373:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       emit_byte_e(entropy, 0);
 3246              		.loc 1 373 0
ARM GAS  /tmp/cccRWS2v.s 			page 93


 3247 0108 BBF1FF0F 		cmp	fp, #255
 3248 010c ECD1     		bne	.L269
 374:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     }
 3249              		.loc 1 374 0
 3250 010e 236F     		ldr	r3, [r4, #112]
 3251 0110 5A1C     		adds	r2, r3, #1
 3252 0112 2267     		str	r2, [r4, #112]
 3253 0114 0022     		movs	r2, #0
 3254 0116 1A70     		strb	r2, [r3]
 3255 0118 636F     		ldr	r3, [r4, #116]
 3256 011a 013B     		subs	r3, r3, #1
 3257 011c 6367     		str	r3, [r4, #116]
 3258 011e 002B     		cmp	r3, #0
 3259 0120 E2D1     		bne	.L269
 3260 0122 2046     		mov	r0, r4
 3261 0124 FFF7FEFF 		bl	dump_buffer_e
 3262              	.LVL420:
 3263 0128 DEE7     		b	.L269
 3264              	.LVL421:
 3265              	.L299:
 3266              	.LBE99:
 380:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   entropy->saved.put_bits = put_bits;
 3267              		.loc 1 380 0
 3268 012a E760     		str	r7, [r4, #12]
 381:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** }
 3269              		.loc 1 381 0
 3270 012c 2561     		str	r5, [r4, #16]
 3271              	.LVL422:
 3272              	.L265:
 3273              	.LBE97:
 3274              	.LBE96:
 3275              	.LBE95:
 3276              	.LBE94:
 3277              	.LBE93:
 688:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     }
 3278              		.loc 1 688 0
 3279 012e A8F11008 		sub	r8, r8, #16
 3280              	.LVL423:
 3281              	.L263:
 686:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       emit_ac_symbol(entropy, entropy->ac_tbl_no, 0xF0);
 3282              		.loc 1 686 0
 3283 0132 B8F10F0F 		cmp	r8, #15
 3284 0136 0DDD     		ble	.L301
 687:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       r -= 16;
 3285              		.loc 1 687 0
 3286 0138 E36F     		ldr	r3, [r4, #124]
 3287              	.LVL424:
 3288              	.LBB101:
 3289              	.LBB100:
 426:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     entropy->ac_count_ptrs[tbl_no][symbol]++;
 3290              		.loc 1 426 0
 3291 013a E26E     		ldr	r2, [r4, #108]
 3292 013c 002A     		cmp	r2, #0
 3293 013e AED0     		beq	.L264
 427:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   else {
 3294              		.loc 1 427 0
 3295 0140 1633     		adds	r3, r3, #22
ARM GAS  /tmp/cccRWS2v.s 			page 94


 3296              	.LVL425:
 3297 0142 04EB8303 		add	r3, r4, r3, lsl #2
 3298 0146 5A68     		ldr	r2, [r3, #4]
 3299 0148 D2F8C033 		ldr	r3, [r2, #960]
 3300 014c 0133     		adds	r3, r3, #1
 3301 014e C2F8C033 		str	r3, [r2, #960]
 3302              	.LVL426:
 3303 0152 ECE7     		b	.L265
 3304              	.LVL427:
 3305              	.L301:
 3306              	.LBE100:
 3307              	.LBE101:
 692:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     while ((temp >>= 1))
 3308              		.loc 1 692 0
 3309 0154 0125     		movs	r5, #1
 3310 0156 00E0     		b	.L272
 3311              	.LVL428:
 3312              	.L273:
 694:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     /* Check for out-of-range coefficient values */
 3313              		.loc 1 694 0
 3314 0158 0135     		adds	r5, r5, #1
 3315              	.LVL429:
 3316              	.L272:
 693:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       nbits++;
 3317              		.loc 1 693 0
 3318 015a 7610     		asrs	r6, r6, #1
 3319              	.LVL430:
 3320 015c FCD1     		bne	.L273
 696:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       ERREXIT(cinfo, JERR_BAD_DCT_COEF);
 3321              		.loc 1 696 0
 3322 015e 0A2D     		cmp	r5, #10
 3323 0160 06DD     		ble	.L274
 697:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 3324              		.loc 1 697 0
 3325 0162 0598     		ldr	r0, [sp, #20]
 3326 0164 0368     		ldr	r3, [r0]
 3327 0166 0622     		movs	r2, #6
 3328 0168 5A61     		str	r2, [r3, #20]
 3329 016a 0368     		ldr	r3, [r0]
 3330 016c 1B68     		ldr	r3, [r3]
 3331 016e 9847     		blx	r3
 3332              	.LVL431:
 3333              	.L274:
 700:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 3334              		.loc 1 700 0
 3335 0170 E36F     		ldr	r3, [r4, #124]
 3336 0172 05EB0818 		add	r8, r5, r8, lsl #4
 3337              	.LVL432:
 3338              	.LBB102:
 3339              	.LBB103:
 426:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     entropy->ac_count_ptrs[tbl_no][symbol]++;
 3340              		.loc 1 426 0
 3341 0176 E26E     		ldr	r2, [r4, #108]
 3342 0178 1AB3     		cbz	r2, .L275
 427:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   else {
 3343              		.loc 1 427 0
 3344 017a 1633     		adds	r3, r3, #22
ARM GAS  /tmp/cccRWS2v.s 			page 95


 3345              	.LVL433:
 3346 017c 04EB8303 		add	r3, r4, r3, lsl #2
 3347 0180 5A68     		ldr	r2, [r3, #4]
 3348 0182 52F82830 		ldr	r3, [r2, r8, lsl #2]
 3349 0186 0133     		adds	r3, r3, #1
 3350 0188 42F82830 		str	r3, [r2, r8, lsl #2]
 3351              	.LVL434:
 3352              	.L276:
 3353              	.LBE103:
 3354              	.LBE102:
 3355              	.LBB110:
 3356              	.LBB111:
 351:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 3357              		.loc 1 351 0
 3358 018c 2769     		ldr	r7, [r4, #16]
 3359              	.LVL435:
 354:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     ERREXIT(entropy->cinfo, JERR_HUFF_MISSING_CODE);
 3360              		.loc 1 354 0
 3361 018e 3DB9     		cbnz	r5, .L282
 355:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 3362              		.loc 1 355 0
 3363 0190 A36F     		ldr	r3, [r4, #120]
 3364 0192 1B68     		ldr	r3, [r3]
 3365 0194 2922     		movs	r2, #41
 3366 0196 5A61     		str	r2, [r3, #20]
 3367 0198 A06F     		ldr	r0, [r4, #120]
 3368 019a 0368     		ldr	r3, [r0]
 3369 019c 1B68     		ldr	r3, [r3]
 3370 019e 9847     		blx	r3
 3371              	.LVL436:
 3372              	.L282:
 357:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     return;			/* do nothing if we're only getting stats */
 3373              		.loc 1 357 0
 3374 01a0 E36E     		ldr	r3, [r4, #108]
 3375 01a2 002B     		cmp	r3, #0
 3376 01a4 40F08580 		bne	.L291
 360:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   
 3377              		.loc 1 360 0
 3378 01a8 0123     		movs	r3, #1
 3379 01aa AB40     		lsls	r3, r3, r5
 3380 01ac 013B     		subs	r3, r3, #1
 3381 01ae 039A     		ldr	r2, [sp, #12]
 3382 01b0 1A40     		ands	r2, r2, r3
 3383              	.LVL437:
 362:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 3384              		.loc 1 362 0
 3385 01b2 3D44     		add	r5, r5, r7
 3386              	.LVL438:
 364:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 3387              		.loc 1 364 0
 3388 01b4 C5F11807 		rsb	r7, r5, #24
 3389 01b8 02FA07F7 		lsl	r7, r2, r7
 3390              	.LVL439:
 367:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 3391              		.loc 1 367 0
 3392 01bc E368     		ldr	r3, [r4, #12]
 3393 01be 1F43     		orrs	r7, r7, r3
ARM GAS  /tmp/cccRWS2v.s 			page 96


 3394              	.LVL440:
 3395 01c0 54E0     		b	.L283
 3396              	.LVL441:
 3397              	.L275:
 3398              	.LBE111:
 3399              	.LBE110:
 3400              	.LBB115:
 3401              	.LBB109:
 3402              	.LBB104:
 429:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     emit_bits_e(entropy, tbl->ehufco[symbol], tbl->ehufsi[symbol]);
 3403              		.loc 1 429 0
 3404 01c2 0E33     		adds	r3, r3, #14
 3405              	.LVL442:
 3406 01c4 04EB8303 		add	r3, r4, r3, lsl #2
 3407 01c8 5B68     		ldr	r3, [r3, #4]
 3408              	.LVL443:
 430:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   }
 3409              		.loc 1 430 0
 3410 01ca 53F828B0 		ldr	fp, [r3, r8, lsl #2]
 3411 01ce 9844     		add	r8, r8, r3
 3412              	.LVL444:
 3413 01d0 98F80074 		ldrb	r7, [r8, #1024]	@ zero_extendqisi2
 3414              	.LVL445:
 3415              	.LBB105:
 3416              	.LBB106:
 351:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 3417              		.loc 1 351 0
 3418 01d4 D4F81080 		ldr	r8, [r4, #16]
 3419              	.LVL446:
 354:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     ERREXIT(entropy->cinfo, JERR_HUFF_MISSING_CODE);
 3420              		.loc 1 354 0
 3421 01d8 3FB9     		cbnz	r7, .L277
 355:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 3422              		.loc 1 355 0
 3423 01da A36F     		ldr	r3, [r4, #120]
 3424              	.LVL447:
 3425 01dc 1B68     		ldr	r3, [r3]
 3426 01de 2922     		movs	r2, #41
 3427 01e0 5A61     		str	r2, [r3, #20]
 3428              	.LVL448:
 3429 01e2 A06F     		ldr	r0, [r4, #120]
 3430 01e4 0368     		ldr	r3, [r0]
 3431 01e6 1B68     		ldr	r3, [r3]
 3432 01e8 9847     		blx	r3
 3433              	.LVL449:
 3434              	.L277:
 357:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     return;			/* do nothing if we're only getting stats */
 3435              		.loc 1 357 0
 3436 01ea E36E     		ldr	r3, [r4, #108]
 3437 01ec 002B     		cmp	r3, #0
 3438 01ee CDD1     		bne	.L276
 360:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   
 3439              		.loc 1 360 0
 3440 01f0 0123     		movs	r3, #1
 3441 01f2 BB40     		lsls	r3, r3, r7
 3442 01f4 013B     		subs	r3, r3, #1
 3443 01f6 0BEA030B 		and	fp, fp, r3
ARM GAS  /tmp/cccRWS2v.s 			page 97


 3444              	.LVL450:
 362:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 3445              		.loc 1 362 0
 3446 01fa 4744     		add	r7, r7, r8
 3447              	.LVL451:
 364:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 3448              		.loc 1 364 0
 3449 01fc C7F11808 		rsb	r8, r7, #24
 3450 0200 0BFA08F8 		lsl	r8, fp, r8
 3451              	.LVL452:
 367:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 3452              		.loc 1 367 0
 3453 0204 E368     		ldr	r3, [r4, #12]
 3454 0206 48EA0308 		orr	r8, r8, r3
 3455              	.LVL453:
 3456 020a 06E0     		b	.L278
 3457              	.LVL454:
 3458              	.L303:
 3459              	.LBB107:
 372:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     if (c == 0xFF) {		/* need to stuff a zero byte? */
 3460              		.loc 1 372 0
 3461 020c 2046     		mov	r0, r4
 3462 020e FFF7FEFF 		bl	dump_buffer_e
 3463              	.LVL455:
 3464 0212 10E0     		b	.L279
 3465              	.L280:
 376:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     put_bits -= 8;
 3466              		.loc 1 376 0
 3467 0214 4FEA0828 		lsl	r8, r8, #8
 3468              	.LVL456:
 377:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   }
 3469              		.loc 1 377 0
 3470 0218 083F     		subs	r7, r7, #8
 3471              	.LVL457:
 3472              	.L278:
 3473              	.LBE107:
 369:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     int c = (int) ((put_buffer >> 16) & 0xFF);
 3474              		.loc 1 369 0
 3475 021a 072F     		cmp	r7, #7
 3476 021c 1CDD     		ble	.L302
 3477              	.LBB108:
 370:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 3478              		.loc 1 370 0
 3479 021e C8F3074B 		ubfx	fp, r8, #16, #8
 3480              	.LVL458:
 372:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     if (c == 0xFF) {		/* need to stuff a zero byte? */
 3481              		.loc 1 372 0
 3482 0222 236F     		ldr	r3, [r4, #112]
 3483 0224 5A1C     		adds	r2, r3, #1
 3484 0226 2267     		str	r2, [r4, #112]
 3485 0228 83F800B0 		strb	fp, [r3]
 3486 022c 636F     		ldr	r3, [r4, #116]
 3487 022e 013B     		subs	r3, r3, #1
 3488 0230 6367     		str	r3, [r4, #116]
 3489 0232 002B     		cmp	r3, #0
 3490 0234 EAD0     		beq	.L303
 3491              	.L279:
ARM GAS  /tmp/cccRWS2v.s 			page 98


 373:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       emit_byte_e(entropy, 0);
 3492              		.loc 1 373 0
 3493 0236 BBF1FF0F 		cmp	fp, #255
 3494 023a EBD1     		bne	.L280
 374:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     }
 3495              		.loc 1 374 0
 3496 023c 236F     		ldr	r3, [r4, #112]
 3497 023e 5A1C     		adds	r2, r3, #1
 3498 0240 2267     		str	r2, [r4, #112]
 3499 0242 0022     		movs	r2, #0
 3500 0244 1A70     		strb	r2, [r3]
 3501 0246 636F     		ldr	r3, [r4, #116]
 3502 0248 013B     		subs	r3, r3, #1
 3503 024a 6367     		str	r3, [r4, #116]
 3504 024c 002B     		cmp	r3, #0
 3505 024e E1D1     		bne	.L280
 3506 0250 2046     		mov	r0, r4
 3507 0252 FFF7FEFF 		bl	dump_buffer_e
 3508              	.LVL459:
 3509 0256 DDE7     		b	.L280
 3510              	.LVL460:
 3511              	.L302:
 3512              	.LBE108:
 380:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   entropy->saved.put_bits = put_bits;
 3513              		.loc 1 380 0
 3514 0258 C4F80C80 		str	r8, [r4, #12]
 381:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** }
 3515              		.loc 1 381 0
 3516 025c 2761     		str	r7, [r4, #16]
 3517 025e 95E7     		b	.L276
 3518              	.LVL461:
 3519              	.L305:
 3520              	.LBE106:
 3521              	.LBE105:
 3522              	.LBE104:
 3523              	.LBE109:
 3524              	.LBE115:
 3525              	.LBB116:
 3526              	.LBB114:
 3527              	.LBB112:
 372:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     if (c == 0xFF) {		/* need to stuff a zero byte? */
 3528              		.loc 1 372 0
 3529 0260 2046     		mov	r0, r4
 3530 0262 FFF7FEFF 		bl	dump_buffer_e
 3531              	.LVL462:
 3532 0266 0FE0     		b	.L284
 3533              	.L285:
 376:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     put_bits -= 8;
 3534              		.loc 1 376 0
 3535 0268 3F02     		lsls	r7, r7, #8
 3536              	.LVL463:
 377:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   }
 3537              		.loc 1 377 0
 3538 026a 083D     		subs	r5, r5, #8
 3539              	.LVL464:
 3540              	.L283:
 3541              	.LBE112:
ARM GAS  /tmp/cccRWS2v.s 			page 99


 369:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     int c = (int) ((put_buffer >> 16) & 0xFF);
 3542              		.loc 1 369 0
 3543 026c 072D     		cmp	r5, #7
 3544 026e 1CDD     		ble	.L304
 3545              	.LBB113:
 370:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 3546              		.loc 1 370 0
 3547 0270 C7F30748 		ubfx	r8, r7, #16, #8
 3548              	.LVL465:
 372:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     if (c == 0xFF) {		/* need to stuff a zero byte? */
 3549              		.loc 1 372 0
 3550 0274 236F     		ldr	r3, [r4, #112]
 3551 0276 5A1C     		adds	r2, r3, #1
 3552 0278 2267     		str	r2, [r4, #112]
 3553 027a 83F80080 		strb	r8, [r3]
 3554 027e 636F     		ldr	r3, [r4, #116]
 3555 0280 013B     		subs	r3, r3, #1
 3556 0282 6367     		str	r3, [r4, #116]
 3557 0284 002B     		cmp	r3, #0
 3558 0286 EBD0     		beq	.L305
 3559              	.L284:
 373:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       emit_byte_e(entropy, 0);
 3560              		.loc 1 373 0
 3561 0288 B8F1FF0F 		cmp	r8, #255
 3562 028c ECD1     		bne	.L285
 374:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     }
 3563              		.loc 1 374 0
 3564 028e 236F     		ldr	r3, [r4, #112]
 3565 0290 5A1C     		adds	r2, r3, #1
 3566 0292 2267     		str	r2, [r4, #112]
 3567 0294 0022     		movs	r2, #0
 3568 0296 1A70     		strb	r2, [r3]
 3569 0298 636F     		ldr	r3, [r4, #116]
 3570 029a 013B     		subs	r3, r3, #1
 3571 029c 6367     		str	r3, [r4, #116]
 3572 029e 002B     		cmp	r3, #0
 3573 02a0 E2D1     		bne	.L285
 3574 02a2 2046     		mov	r0, r4
 3575 02a4 FFF7FEFF 		bl	dump_buffer_e
 3576              	.LVL466:
 3577 02a8 DEE7     		b	.L285
 3578              	.LVL467:
 3579              	.L304:
 3580              	.LBE113:
 380:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   entropy->saved.put_bits = put_bits;
 3581              		.loc 1 380 0
 3582 02aa E760     		str	r7, [r4, #12]
 381:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** }
 3583              		.loc 1 381 0
 3584 02ac 2561     		str	r5, [r4, #16]
 3585              	.LBE114:
 3586              	.LBE116:
 706:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   }
 3587              		.loc 1 706 0
 3588 02ae B046     		mov	r8, r6
 3589 02b0 D1E6     		b	.L258
 3590              	.LVL468:
ARM GAS  /tmp/cccRWS2v.s 			page 100


 3591              	.L291:
 3592 02b2 B046     		mov	r8, r6
 3593 02b4 CFE6     		b	.L258
 3594              	.LVL469:
 3595              	.L295:
 3596 02b6 DDF81490 		ldr	r9, [sp, #20]
 3597              	.LVL470:
 709:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     entropy->EOBRUN++;		/* count an EOB */
 3598              		.loc 1 709 0
 3599 02ba B8F1000F 		cmp	r8, #0
 3600 02be 08DD     		ble	.L288
 710:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     if (entropy->EOBRUN == 0x7FFF)
 3601              		.loc 1 710 0
 3602 02c0 D4F88030 		ldr	r3, [r4, #128]
 3603 02c4 0133     		adds	r3, r3, #1
 3604 02c6 C4F88030 		str	r3, [r4, #128]
 711:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       emit_eobrun(entropy);	/* force it out to avoid overflow */
 3605              		.loc 1 711 0
 3606 02ca 47F6FF72 		movw	r2, #32767
 3607 02ce 9342     		cmp	r3, r2
 3608 02d0 19D0     		beq	.L306
 3609              	.L288:
 715:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   cinfo->dest->free_in_buffer = entropy->free_in_buffer;
 3610              		.loc 1 715 0
 3611 02d2 D9F81830 		ldr	r3, [r9, #24]
 3612 02d6 226F     		ldr	r2, [r4, #112]
 3613 02d8 1A60     		str	r2, [r3]
 716:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 3614              		.loc 1 716 0
 3615 02da D9F81830 		ldr	r3, [r9, #24]
 3616 02de 626F     		ldr	r2, [r4, #116]
 3617 02e0 5A60     		str	r2, [r3, #4]
 719:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     if (entropy->restarts_to_go == 0) {
 3618              		.loc 1 719 0
 3619 02e2 D9F8EC30 		ldr	r3, [r9, #236]
 3620 02e6 53B1     		cbz	r3, .L289
 720:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       entropy->restarts_to_go = cinfo->restart_interval;
 3621              		.loc 1 720 0
 3622 02e8 626A     		ldr	r2, [r4, #36]
 3623 02ea 2AB9     		cbnz	r2, .L290
 721:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       entropy->next_restart_num++;
 3624              		.loc 1 721 0
 3625 02ec 6362     		str	r3, [r4, #36]
 722:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       entropy->next_restart_num &= 7;
 3626              		.loc 1 722 0
 3627 02ee A36A     		ldr	r3, [r4, #40]
 3628 02f0 0133     		adds	r3, r3, #1
 723:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     }
 3629              		.loc 1 723 0
 3630 02f2 03F00703 		and	r3, r3, #7
 3631 02f6 A362     		str	r3, [r4, #40]
 3632              	.L290:
 725:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   }
 3633              		.loc 1 725 0
 3634 02f8 636A     		ldr	r3, [r4, #36]
 3635 02fa 013B     		subs	r3, r3, #1
 3636 02fc 6362     		str	r3, [r4, #36]
ARM GAS  /tmp/cccRWS2v.s 			page 101


 3637              	.L289:
 729:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 3638              		.loc 1 729 0
 3639 02fe 0120     		movs	r0, #1
 3640 0300 07B0     		add	sp, sp, #28
 3641              	.LCFI28:
 3642              		.cfi_remember_state
 3643              		.cfi_def_cfa_offset 36
 3644              		@ sp needed
 3645 0302 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 3646              	.LVL471:
 3647              	.L306:
 3648              	.LCFI29:
 3649              		.cfi_restore_state
 712:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   }
 3650              		.loc 1 712 0
 3651 0306 2046     		mov	r0, r4
 3652 0308 FFF7FEFF 		bl	emit_eobrun
 3653              	.LVL472:
 3654 030c E1E7     		b	.L288
 3655              		.cfi_endproc
 3656              	.LFE17:
 3658              		.section	.text.finish_pass_huff,"ax",%progbits
 3659              		.align	1
 3660              		.syntax unified
 3661              		.thumb
 3662              		.thumb_func
 3663              		.fpu fpv5-sp-d16
 3665              	finish_pass_huff:
 3666              	.LFB22:
1074:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   huff_entropy_ptr entropy = (huff_entropy_ptr) cinfo->entropy;
 3667              		.loc 1 1074 0
 3668              		.cfi_startproc
 3669              		@ args = 0, pretend = 0, frame = 40
 3670              		@ frame_needed = 0, uses_anonymous_args = 0
 3671              	.LVL473:
 3672 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 3673              	.LCFI30:
 3674              		.cfi_def_cfa_offset 20
 3675              		.cfi_offset 4, -20
 3676              		.cfi_offset 5, -16
 3677              		.cfi_offset 6, -12
 3678              		.cfi_offset 7, -8
 3679              		.cfi_offset 14, -4
 3680 0002 8BB0     		sub	sp, sp, #44
 3681              	.LCFI31:
 3682              		.cfi_def_cfa_offset 64
 3683 0004 0546     		mov	r5, r0
1075:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   working_state state;
 3684              		.loc 1 1075 0
 3685 0006 D0F8A441 		ldr	r4, [r0, #420]
 3686              	.LVL474:
1078:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     entropy->next_output_byte = cinfo->dest->next_output_byte;
 3687              		.loc 1 1078 0
 3688 000a D0F80831 		ldr	r3, [r0, #264]
 3689 000e 002B     		cmp	r3, #0
 3690 0010 29D1     		bne	.L312
ARM GAS  /tmp/cccRWS2v.s 			page 102


1090:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     state.free_in_buffer = cinfo->dest->free_in_buffer;
 3691              		.loc 1 1090 0
 3692 0012 8369     		ldr	r3, [r0, #24]
 3693 0014 1A68     		ldr	r2, [r3]
 3694 0016 0192     		str	r2, [sp, #4]
1091:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     ASSIGN_STATE(state.cur, entropy->saved);
 3695              		.loc 1 1091 0
 3696 0018 5B68     		ldr	r3, [r3, #4]
 3697 001a 0293     		str	r3, [sp, #8]
1092:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     state.cinfo = cinfo;
 3698              		.loc 1 1092 0
 3699 001c 03AE     		add	r6, sp, #12
 3700 001e 04F10C07 		add	r7, r4, #12
 3701 0022 0FCF     		ldmia	r7!, {r0, r1, r2, r3}
 3702              	.LVL475:
 3703 0024 0FC6     		stmia	r6!, {r0, r1, r2, r3}
 3704 0026 97E80300 		ldm	r7, {r0, r1}
 3705 002a 86E80300 		stm	r6, {r0, r1}
1093:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 3706              		.loc 1 1093 0
 3707 002e 0995     		str	r5, [sp, #36]
1096:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       ERREXIT(cinfo, JERR_CANT_SUSPEND);
 3708              		.loc 1 1096 0
 3709 0030 01A8     		add	r0, sp, #4
 3710 0032 FFF7FEFF 		bl	flush_bits_s
 3711              	.LVL476:
 3712 0036 30B9     		cbnz	r0, .L310
1097:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 3713              		.loc 1 1097 0
 3714 0038 2B68     		ldr	r3, [r5]
 3715 003a 1922     		movs	r2, #25
 3716 003c 5A61     		str	r2, [r3, #20]
 3717 003e 2B68     		ldr	r3, [r5]
 3718 0040 1B68     		ldr	r3, [r3]
 3719 0042 2846     		mov	r0, r5
 3720 0044 9847     		blx	r3
 3721              	.LVL477:
 3722              	.L310:
1100:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     cinfo->dest->free_in_buffer = state.free_in_buffer;
 3723              		.loc 1 1100 0
 3724 0046 AB69     		ldr	r3, [r5, #24]
 3725 0048 019A     		ldr	r2, [sp, #4]
 3726 004a 1A60     		str	r2, [r3]
1101:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     ASSIGN_STATE(entropy->saved, state.cur);
 3727              		.loc 1 1101 0
 3728 004c AB69     		ldr	r3, [r5, #24]
 3729 004e 029A     		ldr	r2, [sp, #8]
 3730 0050 5A60     		str	r2, [r3, #4]
1102:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   }
 3731              		.loc 1 1102 0
 3732 0052 0C34     		adds	r4, r4, #12
 3733              	.LVL478:
 3734 0054 03AD     		add	r5, sp, #12
 3735              	.LVL479:
 3736 0056 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 3737 0058 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 3738              	.LVL480:
ARM GAS  /tmp/cccRWS2v.s 			page 103


 3739 005a 95E80300 		ldm	r5, {r0, r1}
 3740 005e 84E80300 		stm	r4, {r0, r1}
 3741              	.LVL481:
 3742              	.L307:
1104:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 3743              		.loc 1 1104 0
 3744 0062 0BB0     		add	sp, sp, #44
 3745              	.LCFI32:
 3746              		.cfi_remember_state
 3747              		.cfi_def_cfa_offset 20
 3748              		@ sp needed
 3749 0064 F0BD     		pop	{r4, r5, r6, r7, pc}
 3750              	.LVL482:
 3751              	.L312:
 3752              	.LCFI33:
 3753              		.cfi_restore_state
1079:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     entropy->free_in_buffer = cinfo->dest->free_in_buffer;
 3754              		.loc 1 1079 0
 3755 0066 8369     		ldr	r3, [r0, #24]
 3756 0068 1B68     		ldr	r3, [r3]
 3757 006a 2367     		str	r3, [r4, #112]
1080:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 3758              		.loc 1 1080 0
 3759 006c 8369     		ldr	r3, [r0, #24]
 3760 006e 5B68     		ldr	r3, [r3, #4]
 3761 0070 6367     		str	r3, [r4, #116]
1083:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     flush_bits_e(entropy);
 3762              		.loc 1 1083 0
 3763 0072 2046     		mov	r0, r4
 3764              	.LVL483:
 3765 0074 FFF7FEFF 		bl	emit_eobrun
 3766              	.LVL484:
1084:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 3767              		.loc 1 1084 0
 3768 0078 2046     		mov	r0, r4
 3769 007a FFF7FEFF 		bl	flush_bits_e
 3770              	.LVL485:
1086:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     cinfo->dest->free_in_buffer = entropy->free_in_buffer;
 3771              		.loc 1 1086 0
 3772 007e AB69     		ldr	r3, [r5, #24]
 3773 0080 226F     		ldr	r2, [r4, #112]
 3774 0082 1A60     		str	r2, [r3]
1087:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   } else {
 3775              		.loc 1 1087 0
 3776 0084 AB69     		ldr	r3, [r5, #24]
 3777 0086 626F     		ldr	r2, [r4, #116]
 3778 0088 5A60     		str	r2, [r3, #4]
 3779 008a EAE7     		b	.L307
 3780              		.cfi_endproc
 3781              	.LFE22:
 3783              		.section	.text.finish_pass_gather,"ax",%progbits
 3784              		.align	1
 3785              		.syntax unified
 3786              		.thumb
 3787              		.thumb_func
 3788              		.fpu fpv5-sp-d16
 3790              	finish_pass_gather:
ARM GAS  /tmp/cccRWS2v.s 			page 104


 3791              	.LFB26:
1398:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   huff_entropy_ptr entropy = (huff_entropy_ptr) cinfo->entropy;
 3792              		.loc 1 1398 0
 3793              		.cfi_startproc
 3794              		@ args = 0, pretend = 0, frame = 32
 3795              		@ frame_needed = 0, uses_anonymous_args = 0
 3796              	.LVL486:
 3797 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 3798              	.LCFI34:
 3799              		.cfi_def_cfa_offset 24
 3800              		.cfi_offset 4, -24
 3801              		.cfi_offset 5, -20
 3802              		.cfi_offset 6, -16
 3803              		.cfi_offset 7, -12
 3804              		.cfi_offset 8, -8
 3805              		.cfi_offset 14, -4
 3806 0004 88B0     		sub	sp, sp, #32
 3807              	.LCFI35:
 3808              		.cfi_def_cfa_offset 56
 3809 0006 0646     		mov	r6, r0
1399:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   int ci, tbl;
 3810              		.loc 1 1399 0
 3811 0008 D0F8A471 		ldr	r7, [r0, #420]
 3812              	.LVL487:
1409:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     /* Flush out buffered data (all we care about is counting the EOB symbol) */
 3813              		.loc 1 1409 0
 3814 000c D0F80831 		ldr	r3, [r0, #264]
 3815 0010 4BB9     		cbnz	r3, .L322
 3816              	.LVL488:
 3817              	.L314:
1413:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   MEMZERO(did_ac, SIZEOF(did_ac));
 3818              		.loc 1 1413 0
 3819 0012 0024     		movs	r4, #0
 3820 0014 0494     		str	r4, [sp, #16]
 3821 0016 0594     		str	r4, [sp, #20]
 3822 0018 0694     		str	r4, [sp, #24]
 3823 001a 0794     		str	r4, [sp, #28]
1414:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 3824              		.loc 1 1414 0
 3825 001c 0094     		str	r4, [sp]
 3826 001e 0194     		str	r4, [sp, #4]
 3827 0020 0294     		str	r4, [sp, #8]
 3828 0022 0394     		str	r4, [sp, #12]
 3829              	.LVL489:
1416:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     compptr = cinfo->cur_comp_info[ci];
 3830              		.loc 1 1416 0
 3831 0024 38E0     		b	.L315
 3832              	.LVL490:
 3833              	.L322:
1411:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 3834              		.loc 1 1411 0
 3835 0026 3846     		mov	r0, r7
 3836              	.LVL491:
 3837 0028 FFF7FEFF 		bl	emit_eobrun
 3838              	.LVL492:
 3839 002c F1E7     		b	.L314
 3840              	.LVL493:
ARM GAS  /tmp/cccRWS2v.s 			page 105


 3841              	.L317:
1425:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 	did_dc[tbl] = TRUE;
 3842              		.loc 1 1425 0
 3843 002e 08F11203 		add	r3, r8, #18
 3844 0032 07EB8303 		add	r3, r7, r3, lsl #2
 3845 0036 08F11E01 		add	r1, r8, #30
 3846 003a 5A68     		ldr	r2, [r3, #4]
 3847 003c 56F82110 		ldr	r1, [r6, r1, lsl #2]
 3848 0040 3046     		mov	r0, r6
 3849 0042 FFF7FEFF 		bl	jpeg_gen_optimal_table
 3850              	.LVL494:
1426:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       }
 3851              		.loc 1 1426 0
 3852 0046 08AB     		add	r3, sp, #32
 3853 0048 03EB8808 		add	r8, r3, r8, lsl #2
 3854              	.LVL495:
 3855 004c 0123     		movs	r3, #1
 3856 004e 48F8103C 		str	r3, [r8, #-16]
 3857              	.L316:
1430:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       tbl = compptr->ac_tbl_no;
 3858              		.loc 1 1430 0
 3859 0052 D6F86C31 		ldr	r3, [r6, #364]
 3860 0056 F3B1     		cbz	r3, .L318
1431:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       if (! did_ac[tbl]) {
 3861              		.loc 1 1431 0
 3862 0058 AD69     		ldr	r5, [r5, #24]
 3863              	.LVL496:
1432:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 	htblptr = & cinfo->ac_huff_tbl_ptrs[tbl];
 3864              		.loc 1 1432 0
 3865 005a 08AB     		add	r3, sp, #32
 3866 005c 03EB8503 		add	r3, r3, r5, lsl #2
 3867 0060 53F8203C 		ldr	r3, [r3, #-32]
 3868 0064 BBB9     		cbnz	r3, .L318
 3869              	.LVL497:
1434:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 	  *htblptr = jpeg_alloc_huff_table((j_common_ptr) cinfo);
 3870              		.loc 1 1434 0
 3871 0066 05F12203 		add	r3, r5, #34
 3872 006a 56F82330 		ldr	r3, [r6, r3, lsl #2]
 3873 006e 002B     		cmp	r3, #0
 3874 0070 3AD0     		beq	.L323
 3875              	.L319:
1436:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 	did_ac[tbl] = TRUE;
 3876              		.loc 1 1436 0
 3877 0072 05F11603 		add	r3, r5, #22
 3878 0076 07EB8303 		add	r3, r7, r3, lsl #2
 3879 007a 05F12201 		add	r1, r5, #34
 3880 007e 5A68     		ldr	r2, [r3, #4]
 3881 0080 56F82110 		ldr	r1, [r6, r1, lsl #2]
 3882 0084 3046     		mov	r0, r6
 3883 0086 FFF7FEFF 		bl	jpeg_gen_optimal_table
 3884              	.LVL498:
1437:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       }
 3885              		.loc 1 1437 0
 3886 008a 08AB     		add	r3, sp, #32
 3887 008c 03EB8505 		add	r5, r3, r5, lsl #2
 3888              	.LVL499:
 3889 0090 0123     		movs	r3, #1
ARM GAS  /tmp/cccRWS2v.s 			page 106


 3890 0092 45F8203C 		str	r3, [r5, #-32]
 3891              	.L318:
1416:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     compptr = cinfo->cur_comp_info[ci];
 3892              		.loc 1 1416 0 discriminator 2
 3893 0096 0134     		adds	r4, r4, #1
 3894              	.LVL500:
 3895              	.L315:
1416:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     compptr = cinfo->cur_comp_info[ci];
 3896              		.loc 1 1416 0 is_stmt 0 discriminator 1
 3897 0098 D6F82031 		ldr	r3, [r6, #288]
 3898 009c A342     		cmp	r3, r4
 3899 009e 2BDD     		ble	.L324
1417:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     /* DC needs no table for refinement scan */
 3900              		.loc 1 1417 0 is_stmt 1
 3901 00a0 04F14803 		add	r3, r4, #72
 3902 00a4 06EB8303 		add	r3, r6, r3, lsl #2
 3903 00a8 5D68     		ldr	r5, [r3, #4]
 3904              	.LVL501:
1419:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       tbl = compptr->dc_tbl_no;
 3905              		.loc 1 1419 0
 3906 00aa D6F86831 		ldr	r3, [r6, #360]
 3907 00ae 002B     		cmp	r3, #0
 3908 00b0 CFD1     		bne	.L316
1419:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       tbl = compptr->dc_tbl_no;
 3909              		.loc 1 1419 0 is_stmt 0 discriminator 1
 3910 00b2 D6F87031 		ldr	r3, [r6, #368]
 3911 00b6 002B     		cmp	r3, #0
 3912 00b8 CBD1     		bne	.L316
1420:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       if (! did_dc[tbl]) {
 3913              		.loc 1 1420 0 is_stmt 1
 3914 00ba D5F81480 		ldr	r8, [r5, #20]
 3915              	.LVL502:
1421:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 	htblptr = & cinfo->dc_huff_tbl_ptrs[tbl];
 3916              		.loc 1 1421 0
 3917 00be 08AB     		add	r3, sp, #32
 3918 00c0 03EB8803 		add	r3, r3, r8, lsl #2
 3919 00c4 53F8103C 		ldr	r3, [r3, #-16]
 3920 00c8 002B     		cmp	r3, #0
 3921 00ca C2D1     		bne	.L316
 3922              	.LVL503:
1423:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 	  *htblptr = jpeg_alloc_huff_table((j_common_ptr) cinfo);
 3923              		.loc 1 1423 0
 3924 00cc 08F11E03 		add	r3, r8, #30
 3925 00d0 56F82330 		ldr	r3, [r6, r3, lsl #2]
 3926 00d4 002B     		cmp	r3, #0
 3927 00d6 AAD1     		bne	.L317
1424:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 	jpeg_gen_optimal_table(cinfo, *htblptr, entropy->dc_count_ptrs[tbl]);
 3928              		.loc 1 1424 0
 3929 00d8 3046     		mov	r0, r6
 3930 00da FFF7FEFF 		bl	jpeg_alloc_huff_table
 3931              	.LVL504:
 3932 00de 08F11E03 		add	r3, r8, #30
 3933 00e2 46F82300 		str	r0, [r6, r3, lsl #2]
 3934 00e6 A2E7     		b	.L317
 3935              	.LVL505:
 3936              	.L323:
1435:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 	jpeg_gen_optimal_table(cinfo, *htblptr, entropy->ac_count_ptrs[tbl]);
ARM GAS  /tmp/cccRWS2v.s 			page 107


 3937              		.loc 1 1435 0
 3938 00e8 3046     		mov	r0, r6
 3939 00ea FFF7FEFF 		bl	jpeg_alloc_huff_table
 3940              	.LVL506:
 3941 00ee 05F12203 		add	r3, r5, #34
 3942 00f2 46F82300 		str	r0, [r6, r3, lsl #2]
 3943 00f6 BCE7     		b	.L319
 3944              	.LVL507:
 3945              	.L324:
1441:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 3946              		.loc 1 1441 0
 3947 00f8 08B0     		add	sp, sp, #32
 3948              	.LCFI36:
 3949              		.cfi_def_cfa_offset 24
 3950              		@ sp needed
 3951 00fa BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 3952              		.cfi_endproc
 3953              	.LFE26:
 3955              		.section	.text.encode_one_block,"ax",%progbits
 3956              		.align	1
 3957              		.syntax unified
 3958              		.thumb
 3959              		.thumb_func
 3960              		.fpu fpv5-sp-d16
 3962              	encode_one_block:
 3963              	.LFB20:
 918:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   register int temp, temp2;
 3964              		.loc 1 918 0
 3965              		.cfi_startproc
 3966              		@ args = 4, pretend = 0, frame = 24
 3967              		@ frame_needed = 0, uses_anonymous_args = 0
 3968              	.LVL508:
 3969 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 3970              	.LCFI37:
 3971              		.cfi_def_cfa_offset 36
 3972              		.cfi_offset 4, -36
 3973              		.cfi_offset 5, -32
 3974              		.cfi_offset 6, -28
 3975              		.cfi_offset 7, -24
 3976              		.cfi_offset 8, -20
 3977              		.cfi_offset 9, -16
 3978              		.cfi_offset 10, -12
 3979              		.cfi_offset 11, -8
 3980              		.cfi_offset 14, -4
 3981 0004 87B0     		sub	sp, sp, #28
 3982              	.LCFI38:
 3983              		.cfi_def_cfa_offset 64
 3984 0006 0446     		mov	r4, r0
 3985 0008 0391     		str	r1, [sp, #12]
 3986 000a 1F46     		mov	r7, r3
 922:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   const int * natural_order = state->cinfo->natural_order;
 3987              		.loc 1 922 0
 3988 000c 036A     		ldr	r3, [r0, #32]
 3989              	.LVL509:
 3990 000e D3F88001 		ldr	r0, [r3, #384]
 3991              	.LVL510:
 3992 0012 0190     		str	r0, [sp, #4]
ARM GAS  /tmp/cccRWS2v.s 			page 108


 3993              	.LVL511:
 923:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 3994              		.loc 1 923 0
 3995 0014 D3F87C01 		ldr	r0, [r3, #380]
 3996              	.LVL512:
 3997 0018 0290     		str	r0, [sp, #8]
 3998              	.LVL513:
 927:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 3999              		.loc 1 927 0
 4000 001a B1F90060 		ldrsh	r6, [r1]
 4001              	.LVL514:
 929:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     temp = -temp;		/* temp is abs value of input */
 4002              		.loc 1 929 0
 4003 001e B61A     		subs	r6, r6, r2
 4004              	.LVL515:
 4005 0020 03D4     		bmi	.L400
 927:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 4006              		.loc 1 927 0
 4007 0022 B146     		mov	r9, r6
 4008              	.LVL516:
 4009              	.L326:
 937:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   while (temp) {
 4010              		.loc 1 937 0
 4011 0024 4FF00008 		mov	r8, #0
 938:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     nbits++;
 4012              		.loc 1 938 0
 4013 0028 06E0     		b	.L327
 4014              	.LVL517:
 4015              	.L400:
 933:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   }
 4016              		.loc 1 933 0
 4017 002a 06F1FF39 		add	r9, r6, #-1
 4018              	.LVL518:
 930:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     /* For a negative input, want temp2 = bitwise complement of abs(input) */
 4019              		.loc 1 930 0
 4020 002e 7642     		negs	r6, r6
 4021              	.LVL519:
 4022 0030 F8E7     		b	.L326
 4023              	.LVL520:
 4024              	.L328:
 939:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     temp >>= 1;
 4025              		.loc 1 939 0
 4026 0032 08F10108 		add	r8, r8, #1
 4027              	.LVL521:
 940:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   }
 4028              		.loc 1 940 0
 4029 0036 7610     		asrs	r6, r6, #1
 4030              	.LVL522:
 4031              	.L327:
 938:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     nbits++;
 4032              		.loc 1 938 0
 4033 0038 002E     		cmp	r6, #0
 4034 003a FAD1     		bne	.L328
 945:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     ERREXIT(state->cinfo, JERR_BAD_DCT_COEF);
 4035              		.loc 1 945 0
 4036 003c B8F10B0F 		cmp	r8, #11
 4037 0040 06DD     		ble	.L329
ARM GAS  /tmp/cccRWS2v.s 			page 109


 946:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 4038              		.loc 1 946 0
 4039 0042 1B68     		ldr	r3, [r3]
 4040              	.LVL523:
 4041 0044 0622     		movs	r2, #6
 4042              	.LVL524:
 4043 0046 5A61     		str	r2, [r3, #20]
 4044              	.LVL525:
 4045 0048 206A     		ldr	r0, [r4, #32]
 4046              	.LVL526:
 4047 004a 0368     		ldr	r3, [r0]
 4048 004c 1B68     		ldr	r3, [r3]
 4049 004e 9847     		blx	r3
 4050              	.LVL527:
 4051              	.L329:
 949:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     return FALSE;
 4052              		.loc 1 949 0
 4053 0050 57F82850 		ldr	r5, [r7, r8, lsl #2]
 4054 0054 4744     		add	r7, r7, r8
 4055              	.LVL528:
 4056 0056 97F800A4 		ldrb	r10, [r7, #1024]	@ zero_extendqisi2
 4057              	.LVL529:
 4058              	.LBB135:
 4059              	.LBB136:
 312:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 4060              		.loc 1 312 0
 4061 005a E768     		ldr	r7, [r4, #12]
 4062              	.LVL530:
 315:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     ERREXIT(state->cinfo, JERR_HUFF_MISSING_CODE);
 4063              		.loc 1 315 0
 4064 005c BAF1000F 		cmp	r10, #0
 4065 0060 07D1     		bne	.L330
 316:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 4066              		.loc 1 316 0
 4067 0062 236A     		ldr	r3, [r4, #32]
 4068 0064 1B68     		ldr	r3, [r3]
 4069 0066 2922     		movs	r2, #41
 4070 0068 5A61     		str	r2, [r3, #20]
 4071 006a 206A     		ldr	r0, [r4, #32]
 4072 006c 0368     		ldr	r3, [r0]
 4073 006e 1B68     		ldr	r3, [r3]
 4074 0070 9847     		blx	r3
 4075              	.LVL531:
 4076              	.L330:
 318:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   
 4077              		.loc 1 318 0
 4078 0072 0123     		movs	r3, #1
 4079 0074 03FA0AF3 		lsl	r3, r3, r10
 4080 0078 013B     		subs	r3, r3, #1
 4081 007a 1D40     		ands	r5, r5, r3
 4082              	.LVL532:
 320:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   
 4083              		.loc 1 320 0
 4084 007c 5744     		add	r7, r7, r10
 4085              	.LVL533:
 322:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 4086              		.loc 1 322 0
ARM GAS  /tmp/cccRWS2v.s 			page 110


 4087 007e C7F11803 		rsb	r3, r7, #24
 4088 0082 9D40     		lsls	r5, r5, r3
 4089              	.LVL534:
 324:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   
 4090              		.loc 1 324 0
 4091 0084 A368     		ldr	r3, [r4, #8]
 4092 0086 1D43     		orrs	r5, r5, r3
 4093              	.LVL535:
 4094 0088 07E0     		b	.L331
 4095              	.LVL536:
 4096              	.L402:
 4097              	.LBB137:
 329:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     if (c == 0xFF) {		/* need to stuff a zero byte? */
 4098              		.loc 1 329 0
 4099 008a 2046     		mov	r0, r4
 4100 008c FFF7FEFF 		bl	dump_buffer_s
 4101              	.LVL537:
 4102 0090 88B9     		cbnz	r0, .L332
 4103 0092 0490     		str	r0, [sp, #16]
 4104 0094 27E0     		b	.L333
 4105              	.L334:
 333:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     put_bits -= 8;
 4106              		.loc 1 333 0
 4107 0096 2D02     		lsls	r5, r5, #8
 4108              	.LVL538:
 334:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   }
 4109              		.loc 1 334 0
 4110 0098 083F     		subs	r7, r7, #8
 4111              	.LVL539:
 4112              	.L331:
 4113              	.LBE137:
 326:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     int c = (int) ((put_buffer >> 16) & 0xFF);
 4114              		.loc 1 326 0
 4115 009a 072F     		cmp	r7, #7
 4116 009c 1FDD     		ble	.L401
 4117              	.LBB138:
 327:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     
 4118              		.loc 1 327 0
 4119 009e C5F3074A 		ubfx	r10, r5, #16, #8
 4120              	.LVL540:
 329:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     if (c == 0xFF) {		/* need to stuff a zero byte? */
 4121              		.loc 1 329 0
 4122 00a2 2368     		ldr	r3, [r4]
 4123 00a4 5A1C     		adds	r2, r3, #1
 4124 00a6 2260     		str	r2, [r4]
 4125 00a8 83F800A0 		strb	r10, [r3]
 4126 00ac 6368     		ldr	r3, [r4, #4]
 4127 00ae 013B     		subs	r3, r3, #1
 4128 00b0 6360     		str	r3, [r4, #4]
 4129 00b2 002B     		cmp	r3, #0
 4130 00b4 E9D0     		beq	.L402
 4131              	.L332:
 330:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       emit_byte_s(state, 0, return FALSE);
 4132              		.loc 1 330 0
 4133 00b6 BAF1FF0F 		cmp	r10, #255
 4134 00ba ECD1     		bne	.L334
 331:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     }
ARM GAS  /tmp/cccRWS2v.s 			page 111


 4135              		.loc 1 331 0
 4136 00bc 2368     		ldr	r3, [r4]
 4137 00be 5A1C     		adds	r2, r3, #1
 4138 00c0 2260     		str	r2, [r4]
 4139 00c2 0022     		movs	r2, #0
 4140 00c4 1A70     		strb	r2, [r3]
 4141 00c6 6368     		ldr	r3, [r4, #4]
 4142 00c8 013B     		subs	r3, r3, #1
 4143 00ca 6360     		str	r3, [r4, #4]
 4144 00cc 002B     		cmp	r3, #0
 4145 00ce E2D1     		bne	.L334
 4146 00d0 2046     		mov	r0, r4
 4147 00d2 FFF7FEFF 		bl	dump_buffer_s
 4148              	.LVL541:
 4149 00d6 0028     		cmp	r0, #0
 4150 00d8 DDD1     		bne	.L334
 4151 00da 0490     		str	r0, [sp, #16]
 4152 00dc 03E0     		b	.L333
 4153              	.LVL542:
 4154              	.L401:
 4155              	.LBE138:
 337:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   state->cur.put_bits = put_bits;
 4156              		.loc 1 337 0
 4157 00de A560     		str	r5, [r4, #8]
 338:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 4158              		.loc 1 338 0
 4159 00e0 E760     		str	r7, [r4, #12]
 340:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** }
 4160              		.loc 1 340 0
 4161 00e2 0123     		movs	r3, #1
 4162 00e4 0493     		str	r3, [sp, #16]
 4163              	.L333:
 4164              	.LVL543:
 4165              	.LBE136:
 4166              	.LBE135:
 949:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     return FALSE;
 4167              		.loc 1 949 0
 4168 00e6 049B     		ldr	r3, [sp, #16]
 4169 00e8 002B     		cmp	r3, #0
 4170 00ea 00F0A681 		beq	.L378
 954:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     if (! emit_bits_s(state, (unsigned int) temp2, nbits))
 4171              		.loc 1 954 0
 4172 00ee B8F1000F 		cmp	r8, #0
 4173 00f2 04D1     		bne	.L403
 4174              	.LVL544:
 4175              	.L337:
 998:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     }
 4176              		.loc 1 998 0 discriminator 1
 4177 00f4 DDF810A0 		ldr	r10, [sp, #16]
 4178 00f8 DDF84090 		ldr	r9, [sp, #64]
 4179              	.LVL545:
 4180 00fc 45E1     		b	.L344
 4181              	.LVL546:
 4182              	.L403:
 4183              	.LBB139:
 4184              	.LBB140:
 312:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
ARM GAS  /tmp/cccRWS2v.s 			page 112


 4185              		.loc 1 312 0
 4186 00fe E768     		ldr	r7, [r4, #12]
 4187              	.LVL547:
 315:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     ERREXIT(state->cinfo, JERR_HUFF_MISSING_CODE);
 4188              		.loc 1 315 0
 4189 0100 B8F1000F 		cmp	r8, #0
 4190 0104 07D1     		bne	.L338
 316:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 4191              		.loc 1 316 0
 4192 0106 236A     		ldr	r3, [r4, #32]
 4193 0108 1B68     		ldr	r3, [r3]
 4194 010a 2922     		movs	r2, #41
 4195 010c 5A61     		str	r2, [r3, #20]
 4196 010e 206A     		ldr	r0, [r4, #32]
 4197 0110 0368     		ldr	r3, [r0]
 4198 0112 1B68     		ldr	r3, [r3]
 4199 0114 9847     		blx	r3
 4200              	.LVL548:
 4201              	.L338:
 318:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   
 4202              		.loc 1 318 0
 4203 0116 0125     		movs	r5, #1
 4204 0118 05FA08F5 		lsl	r5, r5, r8
 4205 011c 013D     		subs	r5, r5, #1
 4206 011e 09EA0505 		and	r5, r9, r5
 4207              	.LVL549:
 320:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   
 4208              		.loc 1 320 0
 4209 0122 4744     		add	r7, r7, r8
 4210              	.LVL550:
 322:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 4211              		.loc 1 322 0
 4212 0124 C7F11803 		rsb	r3, r7, #24
 4213 0128 9D40     		lsls	r5, r5, r3
 4214              	.LVL551:
 324:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   
 4215              		.loc 1 324 0
 4216 012a A368     		ldr	r3, [r4, #8]
 4217 012c 1D43     		orrs	r5, r5, r3
 4218              	.LVL552:
 4219 012e 07E0     		b	.L339
 4220              	.LVL553:
 4221              	.L405:
 4222              	.LBB141:
 329:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     if (c == 0xFF) {		/* need to stuff a zero byte? */
 4223              		.loc 1 329 0
 4224 0130 2046     		mov	r0, r4
 4225 0132 FFF7FEFF 		bl	dump_buffer_s
 4226              	.LVL554:
 4227 0136 0346     		mov	r3, r0
 4228 0138 80B9     		cbnz	r0, .L340
 4229 013a 26E0     		b	.L341
 4230              	.L342:
 333:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     put_bits -= 8;
 4231              		.loc 1 333 0
 4232 013c 2D02     		lsls	r5, r5, #8
 4233              	.LVL555:
ARM GAS  /tmp/cccRWS2v.s 			page 113


 334:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   }
 4234              		.loc 1 334 0
 4235 013e 083F     		subs	r7, r7, #8
 4236              	.LVL556:
 4237              	.L339:
 4238              	.LBE141:
 326:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     int c = (int) ((put_buffer >> 16) & 0xFF);
 4239              		.loc 1 326 0
 4240 0140 072F     		cmp	r7, #7
 4241 0142 1FDD     		ble	.L404
 4242              	.LBB142:
 327:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     
 4243              		.loc 1 327 0
 4244 0144 C5F30748 		ubfx	r8, r5, #16, #8
 4245              	.LVL557:
 329:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     if (c == 0xFF) {		/* need to stuff a zero byte? */
 4246              		.loc 1 329 0
 4247 0148 2368     		ldr	r3, [r4]
 4248 014a 5A1C     		adds	r2, r3, #1
 4249 014c 2260     		str	r2, [r4]
 4250 014e 83F80080 		strb	r8, [r3]
 4251 0152 6368     		ldr	r3, [r4, #4]
 4252 0154 013B     		subs	r3, r3, #1
 4253 0156 6360     		str	r3, [r4, #4]
 4254 0158 002B     		cmp	r3, #0
 4255 015a E9D0     		beq	.L405
 4256              	.L340:
 330:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       emit_byte_s(state, 0, return FALSE);
 4257              		.loc 1 330 0
 4258 015c B8F1FF0F 		cmp	r8, #255
 4259 0160 ECD1     		bne	.L342
 331:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     }
 4260              		.loc 1 331 0
 4261 0162 2368     		ldr	r3, [r4]
 4262 0164 5A1C     		adds	r2, r3, #1
 4263 0166 2260     		str	r2, [r4]
 4264 0168 0022     		movs	r2, #0
 4265 016a 1A70     		strb	r2, [r3]
 4266 016c 6368     		ldr	r3, [r4, #4]
 4267 016e 013B     		subs	r3, r3, #1
 4268 0170 6360     		str	r3, [r4, #4]
 4269 0172 002B     		cmp	r3, #0
 4270 0174 E2D1     		bne	.L342
 4271 0176 2046     		mov	r0, r4
 4272 0178 FFF7FEFF 		bl	dump_buffer_s
 4273              	.LVL558:
 4274 017c 0346     		mov	r3, r0
 4275 017e 0028     		cmp	r0, #0
 4276 0180 DCD1     		bne	.L342
 4277 0182 02E0     		b	.L341
 4278              	.LVL559:
 4279              	.L404:
 4280              	.LBE142:
 337:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   state->cur.put_bits = put_bits;
 4281              		.loc 1 337 0
 4282 0184 A560     		str	r5, [r4, #8]
 338:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
ARM GAS  /tmp/cccRWS2v.s 			page 114


 4283              		.loc 1 338 0
 4284 0186 E760     		str	r7, [r4, #12]
 340:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** }
 4285              		.loc 1 340 0
 4286 0188 0123     		movs	r3, #1
 4287              	.L341:
 4288              	.LVL560:
 4289              	.LBE140:
 4290              	.LBE139:
 955:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       return FALSE;
 4291              		.loc 1 955 0
 4292 018a 002B     		cmp	r3, #0
 4293 018c B2D1     		bne	.L337
 956:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 4294              		.loc 1 956 0
 4295 018e 0020     		movs	r0, #0
 4296 0190 54E1     		b	.L325
 4297              	.LVL561:
 4298              	.L407:
 4299              	.LBB143:
 4300              	.LBB144:
 4301              	.LBB145:
 329:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     if (c == 0xFF) {		/* need to stuff a zero byte? */
 4302              		.loc 1 329 0
 4303 0192 2046     		mov	r0, r4
 4304 0194 FFF7FEFF 		bl	dump_buffer_s
 4305              	.LVL562:
 4306 0198 0346     		mov	r3, r0
 4307 019a 80B9     		cbnz	r0, .L349
 4308 019c 26E0     		b	.L350
 4309              	.L351:
 333:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     put_bits -= 8;
 4310              		.loc 1 333 0
 4311 019e 2D02     		lsls	r5, r5, #8
 4312              	.LVL563:
 334:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   }
 4313              		.loc 1 334 0
 4314 01a0 083F     		subs	r7, r7, #8
 4315              	.LVL564:
 4316              	.L348:
 4317              	.LBE145:
 326:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     int c = (int) ((put_buffer >> 16) & 0xFF);
 4318              		.loc 1 326 0
 4319 01a2 072F     		cmp	r7, #7
 4320 01a4 1FDD     		ble	.L406
 4321              	.LBB146:
 327:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     
 4322              		.loc 1 327 0
 4323 01a6 C5F3074B 		ubfx	fp, r5, #16, #8
 4324              	.LVL565:
 329:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     if (c == 0xFF) {		/* need to stuff a zero byte? */
 4325              		.loc 1 329 0
 4326 01aa 2368     		ldr	r3, [r4]
 4327 01ac 5A1C     		adds	r2, r3, #1
 4328 01ae 2260     		str	r2, [r4]
 4329 01b0 83F800B0 		strb	fp, [r3]
 4330 01b4 6368     		ldr	r3, [r4, #4]
ARM GAS  /tmp/cccRWS2v.s 			page 115


 4331 01b6 013B     		subs	r3, r3, #1
 4332 01b8 6360     		str	r3, [r4, #4]
 4333 01ba 002B     		cmp	r3, #0
 4334 01bc E9D0     		beq	.L407
 4335              	.L349:
 330:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       emit_byte_s(state, 0, return FALSE);
 4336              		.loc 1 330 0
 4337 01be BBF1FF0F 		cmp	fp, #255
 4338 01c2 ECD1     		bne	.L351
 331:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     }
 4339              		.loc 1 331 0
 4340 01c4 2368     		ldr	r3, [r4]
 4341 01c6 5A1C     		adds	r2, r3, #1
 4342 01c8 2260     		str	r2, [r4]
 4343 01ca 0022     		movs	r2, #0
 4344 01cc 1A70     		strb	r2, [r3]
 4345 01ce 6368     		ldr	r3, [r4, #4]
 4346 01d0 013B     		subs	r3, r3, #1
 4347 01d2 6360     		str	r3, [r4, #4]
 4348 01d4 002B     		cmp	r3, #0
 4349 01d6 E2D1     		bne	.L351
 4350 01d8 2046     		mov	r0, r4
 4351 01da FFF7FEFF 		bl	dump_buffer_s
 4352              	.LVL566:
 4353 01de 0346     		mov	r3, r0
 4354 01e0 0028     		cmp	r0, #0
 4355 01e2 DCD1     		bne	.L351
 4356 01e4 02E0     		b	.L350
 4357              	.LVL567:
 4358              	.L406:
 4359              	.LBE146:
 337:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   state->cur.put_bits = put_bits;
 4360              		.loc 1 337 0
 4361 01e6 A560     		str	r5, [r4, #8]
 338:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 4362              		.loc 1 338 0
 4363 01e8 E760     		str	r7, [r4, #12]
 340:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** }
 4364              		.loc 1 340 0
 4365 01ea 0123     		movs	r3, #1
 4366              	.L350:
 4367              	.LVL568:
 4368              	.LBE144:
 4369              	.LBE143:
 968:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 	  return FALSE;
 4370              		.loc 1 968 0
 4371 01ec 002B     		cmp	r3, #0
 4372 01ee 00F02881 		beq	.L380
 970:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       }
 4373              		.loc 1 970 0
 4374 01f2 103E     		subs	r6, r6, #16
 4375              	.LVL569:
 4376              	.L345:
 967:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 	if (! emit_bits_s(state, actbl->ehufco[0xF0], actbl->ehufsi[0xF0]))
 4377              		.loc 1 967 0
 4378 01f4 0F2E     		cmp	r6, #15
 4379 01f6 19DD     		ble	.L408
ARM GAS  /tmp/cccRWS2v.s 			page 116


 968:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 	  return FALSE;
 4380              		.loc 1 968 0
 4381 01f8 D9F8C053 		ldr	r5, [r9, #960]
 4382 01fc 99F8F074 		ldrb	r7, [r9, #1264]	@ zero_extendqisi2
 4383              	.LVL570:
 4384              	.LBB148:
 4385              	.LBB147:
 312:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 4386              		.loc 1 312 0
 4387 0200 D4F80CB0 		ldr	fp, [r4, #12]
 4388              	.LVL571:
 315:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     ERREXIT(state->cinfo, JERR_HUFF_MISSING_CODE);
 4389              		.loc 1 315 0
 4390 0204 3FB9     		cbnz	r7, .L347
 316:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 4391              		.loc 1 316 0
 4392 0206 236A     		ldr	r3, [r4, #32]
 4393 0208 1B68     		ldr	r3, [r3]
 4394 020a 2922     		movs	r2, #41
 4395 020c 5A61     		str	r2, [r3, #20]
 4396 020e 206A     		ldr	r0, [r4, #32]
 4397 0210 0368     		ldr	r3, [r0]
 4398 0212 1B68     		ldr	r3, [r3]
 4399 0214 9847     		blx	r3
 4400              	.LVL572:
 4401              	.L347:
 318:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   
 4402              		.loc 1 318 0
 4403 0216 0123     		movs	r3, #1
 4404 0218 BB40     		lsls	r3, r3, r7
 4405 021a 013B     		subs	r3, r3, #1
 4406 021c 1D40     		ands	r5, r5, r3
 4407              	.LVL573:
 320:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   
 4408              		.loc 1 320 0
 4409 021e 5F44     		add	r7, r7, fp
 4410              	.LVL574:
 322:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 4411              		.loc 1 322 0
 4412 0220 C7F11803 		rsb	r3, r7, #24
 4413 0224 9D40     		lsls	r5, r5, r3
 4414              	.LVL575:
 324:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   
 4415              		.loc 1 324 0
 4416 0226 A368     		ldr	r3, [r4, #8]
 4417 0228 1D43     		orrs	r5, r5, r3
 4418              	.LVL576:
 4419 022a BAE7     		b	.L348
 4420              	.LVL577:
 4421              	.L408:
 4422              	.LBE147:
 4423              	.LBE148:
 974:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 	temp = -temp;		/* temp is abs value of input */
 4424              		.loc 1 974 0
 4425 022c B8F1000F 		cmp	r8, #0
 4426 0230 03DB     		blt	.L409
 973:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       if (temp < 0) {
ARM GAS  /tmp/cccRWS2v.s 			page 117


 4427              		.loc 1 973 0
 4428 0232 CDF81480 		str	r8, [sp, #20]
 4429              	.LVL578:
 4430              	.L354:
 981:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       while ((temp >>= 1))
 4431              		.loc 1 981 0
 4432 0236 049F     		ldr	r7, [sp, #16]
 982:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 	nbits++;
 4433              		.loc 1 982 0
 4434 0238 06E0     		b	.L355
 4435              	.LVL579:
 4436              	.L409:
 977:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       }
 4437              		.loc 1 977 0
 4438 023a 08F1FF33 		add	r3, r8, #-1
 4439 023e 0593     		str	r3, [sp, #20]
 4440              	.LVL580:
 975:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 	/* This code assumes we are on a two's complement machine */
 4441              		.loc 1 975 0
 4442 0240 C8F10008 		rsb	r8, r8, #0
 4443              	.LVL581:
 4444 0244 F7E7     		b	.L354
 4445              	.LVL582:
 4446              	.L356:
 983:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       /* Check for out-of-range coefficient values */
 4447              		.loc 1 983 0
 4448 0246 0137     		adds	r7, r7, #1
 4449              	.LVL583:
 4450              	.L355:
 982:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 	nbits++;
 4451              		.loc 1 982 0
 4452 0248 5FEA6808 		asrs	r8, r8, #1
 4453              	.LVL584:
 4454 024c FBD1     		bne	.L356
 985:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 	ERREXIT(state->cinfo, JERR_BAD_DCT_COEF);
 4455              		.loc 1 985 0
 4456 024e 0A2F     		cmp	r7, #10
 4457 0250 07DD     		ble	.L357
 986:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 4458              		.loc 1 986 0
 4459 0252 236A     		ldr	r3, [r4, #32]
 4460 0254 1B68     		ldr	r3, [r3]
 4461 0256 0622     		movs	r2, #6
 4462 0258 5A61     		str	r2, [r3, #20]
 4463 025a 206A     		ldr	r0, [r4, #32]
 4464 025c 0368     		ldr	r3, [r0]
 4465 025e 1B68     		ldr	r3, [r3]
 4466 0260 9847     		blx	r3
 4467              	.LVL585:
 4468              	.L357:
 989:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       if (! emit_bits_s(state, actbl->ehufco[i], actbl->ehufsi[i]))
 4469              		.loc 1 989 0
 4470 0262 07EB0616 		add	r6, r7, r6, lsl #4
 4471              	.LVL586:
 990:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 	return FALSE;
 4472              		.loc 1 990 0
 4473 0266 59F82650 		ldr	r5, [r9, r6, lsl #2]
ARM GAS  /tmp/cccRWS2v.s 			page 118


 4474 026a 4E44     		add	r6, r6, r9
 4475              	.LVL587:
 4476 026c 96F80064 		ldrb	r6, [r6, #1024]	@ zero_extendqisi2
 4477              	.LVL588:
 4478              	.LBB149:
 4479              	.LBB150:
 312:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 4480              		.loc 1 312 0
 4481 0270 D4F80CB0 		ldr	fp, [r4, #12]
 4482              	.LVL589:
 315:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     ERREXIT(state->cinfo, JERR_HUFF_MISSING_CODE);
 4483              		.loc 1 315 0
 4484 0274 3EB9     		cbnz	r6, .L358
 316:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 4485              		.loc 1 316 0
 4486 0276 236A     		ldr	r3, [r4, #32]
 4487 0278 1B68     		ldr	r3, [r3]
 4488 027a 2922     		movs	r2, #41
 4489 027c 5A61     		str	r2, [r3, #20]
 4490 027e 206A     		ldr	r0, [r4, #32]
 4491 0280 0368     		ldr	r3, [r0]
 4492 0282 1B68     		ldr	r3, [r3]
 4493 0284 9847     		blx	r3
 4494              	.LVL590:
 4495              	.L358:
 318:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   
 4496              		.loc 1 318 0
 4497 0286 0123     		movs	r3, #1
 4498 0288 B340     		lsls	r3, r3, r6
 4499 028a 013B     		subs	r3, r3, #1
 4500 028c 1D40     		ands	r5, r5, r3
 4501              	.LVL591:
 320:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   
 4502              		.loc 1 320 0
 4503 028e 5E44     		add	r6, r6, fp
 4504              	.LVL592:
 322:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 4505              		.loc 1 322 0
 4506 0290 C6F11803 		rsb	r3, r6, #24
 4507 0294 9D40     		lsls	r5, r5, r3
 4508              	.LVL593:
 324:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   
 4509              		.loc 1 324 0
 4510 0296 A368     		ldr	r3, [r4, #8]
 4511 0298 1D43     		orrs	r5, r5, r3
 4512              	.LVL594:
 4513 029a 07E0     		b	.L359
 4514              	.LVL595:
 4515              	.L411:
 4516              	.LBB151:
 329:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     if (c == 0xFF) {		/* need to stuff a zero byte? */
 4517              		.loc 1 329 0
 4518 029c 2046     		mov	r0, r4
 4519 029e FFF7FEFF 		bl	dump_buffer_s
 4520              	.LVL596:
 4521 02a2 0346     		mov	r3, r0
 4522 02a4 80B9     		cbnz	r0, .L360
ARM GAS  /tmp/cccRWS2v.s 			page 119


 4523 02a6 26E0     		b	.L361
 4524              	.L362:
 333:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     put_bits -= 8;
 4525              		.loc 1 333 0
 4526 02a8 2D02     		lsls	r5, r5, #8
 4527              	.LVL597:
 334:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   }
 4528              		.loc 1 334 0
 4529 02aa 083E     		subs	r6, r6, #8
 4530              	.LVL598:
 4531              	.L359:
 4532              	.LBE151:
 326:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     int c = (int) ((put_buffer >> 16) & 0xFF);
 4533              		.loc 1 326 0
 4534 02ac 072E     		cmp	r6, #7
 4535 02ae 1FDD     		ble	.L410
 4536              	.LBB152:
 327:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     
 4537              		.loc 1 327 0
 4538 02b0 C5F3074B 		ubfx	fp, r5, #16, #8
 4539              	.LVL599:
 329:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     if (c == 0xFF) {		/* need to stuff a zero byte? */
 4540              		.loc 1 329 0
 4541 02b4 2368     		ldr	r3, [r4]
 4542 02b6 5A1C     		adds	r2, r3, #1
 4543 02b8 2260     		str	r2, [r4]
 4544 02ba 83F800B0 		strb	fp, [r3]
 4545 02be 6368     		ldr	r3, [r4, #4]
 4546 02c0 013B     		subs	r3, r3, #1
 4547 02c2 6360     		str	r3, [r4, #4]
 4548 02c4 002B     		cmp	r3, #0
 4549 02c6 E9D0     		beq	.L411
 4550              	.L360:
 330:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       emit_byte_s(state, 0, return FALSE);
 4551              		.loc 1 330 0
 4552 02c8 BBF1FF0F 		cmp	fp, #255
 4553 02cc ECD1     		bne	.L362
 331:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     }
 4554              		.loc 1 331 0
 4555 02ce 2368     		ldr	r3, [r4]
 4556 02d0 5A1C     		adds	r2, r3, #1
 4557 02d2 2260     		str	r2, [r4]
 4558 02d4 0022     		movs	r2, #0
 4559 02d6 1A70     		strb	r2, [r3]
 4560 02d8 6368     		ldr	r3, [r4, #4]
 4561 02da 013B     		subs	r3, r3, #1
 4562 02dc 6360     		str	r3, [r4, #4]
 4563 02de 002B     		cmp	r3, #0
 4564 02e0 E2D1     		bne	.L362
 4565 02e2 2046     		mov	r0, r4
 4566 02e4 FFF7FEFF 		bl	dump_buffer_s
 4567              	.LVL600:
 4568 02e8 0346     		mov	r3, r0
 4569 02ea 0028     		cmp	r0, #0
 4570 02ec DCD1     		bne	.L362
 4571 02ee 02E0     		b	.L361
 4572              	.LVL601:
ARM GAS  /tmp/cccRWS2v.s 			page 120


 4573              	.L410:
 4574              	.LBE152:
 337:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   state->cur.put_bits = put_bits;
 4575              		.loc 1 337 0
 4576 02f0 A560     		str	r5, [r4, #8]
 338:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 4577              		.loc 1 338 0
 4578 02f2 E660     		str	r6, [r4, #12]
 340:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** }
 4579              		.loc 1 340 0
 4580 02f4 0123     		movs	r3, #1
 4581              	.L361:
 4582              	.LVL602:
 4583              	.LBE150:
 4584              	.LBE149:
 990:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 	return FALSE;
 4585              		.loc 1 990 0
 4586 02f6 002B     		cmp	r3, #0
 4587 02f8 00F0A580 		beq	.L382
 4588              	.LVL603:
 4589              	.LBB153:
 4590              	.LBB154:
 312:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 4591              		.loc 1 312 0
 4592 02fc E568     		ldr	r5, [r4, #12]
 4593              	.LVL604:
 315:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     ERREXIT(state->cinfo, JERR_HUFF_MISSING_CODE);
 4594              		.loc 1 315 0
 4595 02fe 3FB9     		cbnz	r7, .L364
 316:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 4596              		.loc 1 316 0
 4597 0300 236A     		ldr	r3, [r4, #32]
 4598 0302 1B68     		ldr	r3, [r3]
 4599 0304 2922     		movs	r2, #41
 4600 0306 5A61     		str	r2, [r3, #20]
 4601 0308 206A     		ldr	r0, [r4, #32]
 4602 030a 0368     		ldr	r3, [r0]
 4603 030c 1B68     		ldr	r3, [r3]
 4604 030e 9847     		blx	r3
 4605              	.LVL605:
 4606              	.L364:
 318:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   
 4607              		.loc 1 318 0
 4608 0310 0123     		movs	r3, #1
 4609 0312 BB40     		lsls	r3, r3, r7
 4610 0314 013B     		subs	r3, r3, #1
 4611 0316 059A     		ldr	r2, [sp, #20]
 4612 0318 1A40     		ands	r2, r2, r3
 4613              	.LVL606:
 320:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   
 4614              		.loc 1 320 0
 4615 031a 2F44     		add	r7, r7, r5
 4616              	.LVL607:
 322:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 4617              		.loc 1 322 0
 4618 031c C7F11805 		rsb	r5, r7, #24
 4619 0320 02FA05F5 		lsl	r5, r2, r5
ARM GAS  /tmp/cccRWS2v.s 			page 121


 4620              	.LVL608:
 324:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   
 4621              		.loc 1 324 0
 4622 0324 A368     		ldr	r3, [r4, #8]
 4623 0326 1D43     		orrs	r5, r5, r3
 4624              	.LVL609:
 4625 0328 07E0     		b	.L365
 4626              	.LVL610:
 4627              	.L413:
 4628              	.LBB155:
 329:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     if (c == 0xFF) {		/* need to stuff a zero byte? */
 4629              		.loc 1 329 0
 4630 032a 2046     		mov	r0, r4
 4631 032c FFF7FEFF 		bl	dump_buffer_s
 4632              	.LVL611:
 4633 0330 0346     		mov	r3, r0
 4634 0332 78B9     		cbnz	r0, .L366
 4635 0334 24E0     		b	.L367
 4636              	.L368:
 333:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     put_bits -= 8;
 4637              		.loc 1 333 0
 4638 0336 2D02     		lsls	r5, r5, #8
 4639              	.LVL612:
 334:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   }
 4640              		.loc 1 334 0
 4641 0338 083F     		subs	r7, r7, #8
 4642              	.LVL613:
 4643              	.L365:
 4644              	.LBE155:
 326:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     int c = (int) ((put_buffer >> 16) & 0xFF);
 4645              		.loc 1 326 0
 4646 033a 072F     		cmp	r7, #7
 4647 033c 1DDD     		ble	.L412
 4648              	.LBB156:
 327:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     
 4649              		.loc 1 327 0
 4650 033e C5F30746 		ubfx	r6, r5, #16, #8
 4651              	.LVL614:
 329:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     if (c == 0xFF) {		/* need to stuff a zero byte? */
 4652              		.loc 1 329 0
 4653 0342 2368     		ldr	r3, [r4]
 4654 0344 5A1C     		adds	r2, r3, #1
 4655 0346 2260     		str	r2, [r4]
 4656 0348 1E70     		strb	r6, [r3]
 4657 034a 6368     		ldr	r3, [r4, #4]
 4658 034c 013B     		subs	r3, r3, #1
 4659 034e 6360     		str	r3, [r4, #4]
 4660 0350 002B     		cmp	r3, #0
 4661 0352 EAD0     		beq	.L413
 4662              	.L366:
 330:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       emit_byte_s(state, 0, return FALSE);
 4663              		.loc 1 330 0
 4664 0354 FF2E     		cmp	r6, #255
 4665 0356 EED1     		bne	.L368
 331:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     }
 4666              		.loc 1 331 0
 4667 0358 2368     		ldr	r3, [r4]
ARM GAS  /tmp/cccRWS2v.s 			page 122


 4668 035a 5A1C     		adds	r2, r3, #1
 4669 035c 2260     		str	r2, [r4]
 4670 035e 0022     		movs	r2, #0
 4671 0360 1A70     		strb	r2, [r3]
 4672 0362 6368     		ldr	r3, [r4, #4]
 4673 0364 013B     		subs	r3, r3, #1
 4674 0366 6360     		str	r3, [r4, #4]
 4675 0368 002B     		cmp	r3, #0
 4676 036a E4D1     		bne	.L368
 4677 036c 2046     		mov	r0, r4
 4678 036e FFF7FEFF 		bl	dump_buffer_s
 4679              	.LVL615:
 4680 0372 0346     		mov	r3, r0
 4681 0374 0028     		cmp	r0, #0
 4682 0376 DED1     		bne	.L368
 4683 0378 02E0     		b	.L367
 4684              	.LVL616:
 4685              	.L412:
 4686              	.LBE156:
 337:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   state->cur.put_bits = put_bits;
 4687              		.loc 1 337 0
 4688 037a A560     		str	r5, [r4, #8]
 338:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 4689              		.loc 1 338 0
 4690 037c E760     		str	r7, [r4, #12]
 340:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** }
 4691              		.loc 1 340 0
 4692 037e 0123     		movs	r3, #1
 4693              	.L367:
 4694              	.LVL617:
 4695              	.LBE154:
 4696              	.LBE153:
 995:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 	return FALSE;
 4697              		.loc 1 995 0
 4698 0380 002B     		cmp	r3, #0
 4699 0382 62D0     		beq	.L383
 998:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     }
 4700              		.loc 1 998 0
 4701 0384 4646     		mov	r6, r8
 4702              	.LVL618:
 4703              	.L346:
 962:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     if ((temp = block[natural_order[k]]) == 0) {
 4704              		.loc 1 962 0 discriminator 2
 4705 0386 0AF1010A 		add	r10, r10, #1
 4706              	.LVL619:
 4707              	.L344:
 962:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     if ((temp = block[natural_order[k]]) == 0) {
 4708              		.loc 1 962 0 is_stmt 0 discriminator 1
 4709 038a 019B     		ldr	r3, [sp, #4]
 4710 038c 9A45     		cmp	r10, r3
 4711 038e 0BDC     		bgt	.L414
 963:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       r++;
 4712              		.loc 1 963 0 is_stmt 1
 4713 0390 029B     		ldr	r3, [sp, #8]
 4714 0392 53F82A30 		ldr	r3, [r3, r10, lsl #2]
 4715 0396 039A     		ldr	r2, [sp, #12]
 4716 0398 32F91380 		ldrsh	r8, [r2, r3, lsl #1]
ARM GAS  /tmp/cccRWS2v.s 			page 123


 4717              	.LVL620:
 4718 039c B8F1000F 		cmp	r8, #0
 4719 03a0 7FF428AF 		bne	.L345
 964:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     } else {
 4720              		.loc 1 964 0
 4721 03a4 0136     		adds	r6, r6, #1
 4722              	.LVL621:
 4723 03a6 EEE7     		b	.L346
 4724              	.LVL622:
 4725              	.L414:
1003:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     if (! emit_bits_s(state, actbl->ehufco[0], actbl->ehufsi[0]))
 4726              		.loc 1 1003 0
 4727 03a8 002E     		cmp	r6, #0
 4728 03aa 50DD     		ble	.L384
1004:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       return FALSE;
 4729              		.loc 1 1004 0
 4730 03ac 109B     		ldr	r3, [sp, #64]
 4731 03ae 1E68     		ldr	r6, [r3]
 4732              	.LVL623:
 4733 03b0 93F80054 		ldrb	r5, [r3, #1024]	@ zero_extendqisi2
 4734              	.LVL624:
 4735              	.LBB157:
 4736              	.LBB158:
 312:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 4737              		.loc 1 312 0
 4738 03b4 E768     		ldr	r7, [r4, #12]
 4739              	.LVL625:
 315:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     ERREXIT(state->cinfo, JERR_HUFF_MISSING_CODE);
 4740              		.loc 1 315 0
 4741 03b6 3DB9     		cbnz	r5, .L371
 316:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 4742              		.loc 1 316 0
 4743 03b8 236A     		ldr	r3, [r4, #32]
 4744 03ba 1B68     		ldr	r3, [r3]
 4745 03bc 2922     		movs	r2, #41
 4746 03be 5A61     		str	r2, [r3, #20]
 4747 03c0 206A     		ldr	r0, [r4, #32]
 4748 03c2 0368     		ldr	r3, [r0]
 4749 03c4 1B68     		ldr	r3, [r3]
 4750 03c6 9847     		blx	r3
 4751              	.LVL626:
 4752              	.L371:
 318:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   
 4753              		.loc 1 318 0
 4754 03c8 0123     		movs	r3, #1
 4755 03ca AB40     		lsls	r3, r3, r5
 4756 03cc 013B     		subs	r3, r3, #1
 4757 03ce 1E40     		ands	r6, r6, r3
 4758              	.LVL627:
 320:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   
 4759              		.loc 1 320 0
 4760 03d0 3D44     		add	r5, r5, r7
 4761              	.LVL628:
 322:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 4762              		.loc 1 322 0
 4763 03d2 C5F11803 		rsb	r3, r5, #24
 4764 03d6 9E40     		lsls	r6, r6, r3
ARM GAS  /tmp/cccRWS2v.s 			page 124


 4765              	.LVL629:
 324:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   
 4766              		.loc 1 324 0
 4767 03d8 A368     		ldr	r3, [r4, #8]
 4768 03da 1E43     		orrs	r6, r6, r3
 4769              	.LVL630:
 4770 03dc 07E0     		b	.L372
 4771              	.LVL631:
 4772              	.L416:
 4773              	.LBB159:
 329:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     if (c == 0xFF) {		/* need to stuff a zero byte? */
 4774              		.loc 1 329 0
 4775 03de 2046     		mov	r0, r4
 4776 03e0 FFF7FEFF 		bl	dump_buffer_s
 4777              	.LVL632:
 4778 03e4 0346     		mov	r3, r0
 4779 03e6 78B9     		cbnz	r0, .L373
 4780 03e8 24E0     		b	.L374
 4781              	.L375:
 333:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     put_bits -= 8;
 4782              		.loc 1 333 0
 4783 03ea 3602     		lsls	r6, r6, #8
 4784              	.LVL633:
 334:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   }
 4785              		.loc 1 334 0
 4786 03ec 083D     		subs	r5, r5, #8
 4787              	.LVL634:
 4788              	.L372:
 4789              	.LBE159:
 326:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     int c = (int) ((put_buffer >> 16) & 0xFF);
 4790              		.loc 1 326 0
 4791 03ee 072D     		cmp	r5, #7
 4792 03f0 1DDD     		ble	.L415
 4793              	.LBB160:
 327:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     
 4794              		.loc 1 327 0
 4795 03f2 C6F30747 		ubfx	r7, r6, #16, #8
 4796              	.LVL635:
 329:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     if (c == 0xFF) {		/* need to stuff a zero byte? */
 4797              		.loc 1 329 0
 4798 03f6 2368     		ldr	r3, [r4]
 4799 03f8 5A1C     		adds	r2, r3, #1
 4800 03fa 2260     		str	r2, [r4]
 4801 03fc 1F70     		strb	r7, [r3]
 4802 03fe 6368     		ldr	r3, [r4, #4]
 4803 0400 013B     		subs	r3, r3, #1
 4804 0402 6360     		str	r3, [r4, #4]
 4805 0404 002B     		cmp	r3, #0
 4806 0406 EAD0     		beq	.L416
 4807              	.L373:
 330:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       emit_byte_s(state, 0, return FALSE);
 4808              		.loc 1 330 0
 4809 0408 FF2F     		cmp	r7, #255
 4810 040a EED1     		bne	.L375
 331:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     }
 4811              		.loc 1 331 0
 4812 040c 2368     		ldr	r3, [r4]
ARM GAS  /tmp/cccRWS2v.s 			page 125


 4813 040e 5A1C     		adds	r2, r3, #1
 4814 0410 2260     		str	r2, [r4]
 4815 0412 0022     		movs	r2, #0
 4816 0414 1A70     		strb	r2, [r3]
 4817 0416 6368     		ldr	r3, [r4, #4]
 4818 0418 013B     		subs	r3, r3, #1
 4819 041a 6360     		str	r3, [r4, #4]
 4820 041c 002B     		cmp	r3, #0
 4821 041e E4D1     		bne	.L375
 4822 0420 2046     		mov	r0, r4
 4823 0422 FFF7FEFF 		bl	dump_buffer_s
 4824              	.LVL636:
 4825 0426 0346     		mov	r3, r0
 4826 0428 0028     		cmp	r0, #0
 4827 042a DED1     		bne	.L375
 4828 042c 02E0     		b	.L374
 4829              	.LVL637:
 4830              	.L415:
 4831              	.LBE160:
 337:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   state->cur.put_bits = put_bits;
 4832              		.loc 1 337 0
 4833 042e A660     		str	r6, [r4, #8]
 338:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 4834              		.loc 1 338 0
 4835 0430 E560     		str	r5, [r4, #12]
 340:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** }
 4836              		.loc 1 340 0
 4837 0432 0123     		movs	r3, #1
 4838              	.L374:
 4839              	.LVL638:
 4840              	.LBE158:
 4841              	.LBE157:
1004:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       return FALSE;
 4842              		.loc 1 1004 0
 4843 0434 6BB9     		cbnz	r3, .L385
1005:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 4844              		.loc 1 1005 0
 4845 0436 0020     		movs	r0, #0
 4846 0438 00E0     		b	.L325
 4847              	.LVL639:
 4848              	.L378:
 950:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 4849              		.loc 1 950 0
 4850 043a 0020     		movs	r0, #0
 4851              	.LVL640:
 4852              	.L325:
1008:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 4853              		.loc 1 1008 0
 4854 043c 07B0     		add	sp, sp, #28
 4855              	.LCFI39:
 4856              		.cfi_remember_state
 4857              		.cfi_def_cfa_offset 36
 4858              		@ sp needed
 4859 043e BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 4860              	.LVL641:
 4861              	.L380:
 4862              	.LCFI40:
ARM GAS  /tmp/cccRWS2v.s 			page 126


 4863              		.cfi_restore_state
 969:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 	r -= 16;
 4864              		.loc 1 969 0
 4865 0442 0020     		movs	r0, #0
 4866 0444 FAE7     		b	.L325
 4867              	.LVL642:
 4868              	.L382:
 991:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 4869              		.loc 1 991 0
 4870 0446 0020     		movs	r0, #0
 4871 0448 F8E7     		b	.L325
 4872              	.LVL643:
 4873              	.L383:
 996:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 4874              		.loc 1 996 0
 4875 044a 0020     		movs	r0, #0
 4876 044c F6E7     		b	.L325
 4877              	.LVL644:
 4878              	.L384:
1007:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** }
 4879              		.loc 1 1007 0
 4880 044e 0120     		movs	r0, #1
 4881 0450 F4E7     		b	.L325
 4882              	.LVL645:
 4883              	.L385:
 4884 0452 0120     		movs	r0, #1
 4885 0454 F2E7     		b	.L325
 4886              		.cfi_endproc
 4887              	.LFE20:
 4889              		.section	.text.encode_mcu_huff,"ax",%progbits
 4890              		.align	1
 4891              		.syntax unified
 4892              		.thumb
 4893              		.thumb_func
 4894              		.fpu fpv5-sp-d16
 4896              	encode_mcu_huff:
 4897              	.LFB21:
1017:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   huff_entropy_ptr entropy = (huff_entropy_ptr) cinfo->entropy;
 4898              		.loc 1 1017 0
 4899              		.cfi_startproc
 4900              		@ args = 0, pretend = 0, frame = 40
 4901              		@ frame_needed = 0, uses_anonymous_args = 0
 4902              	.LVL646:
 4903 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 4904              	.LCFI41:
 4905              		.cfi_def_cfa_offset 24
 4906              		.cfi_offset 4, -24
 4907              		.cfi_offset 5, -20
 4908              		.cfi_offset 6, -16
 4909              		.cfi_offset 7, -12
 4910              		.cfi_offset 8, -8
 4911              		.cfi_offset 14, -4
 4912 0004 8CB0     		sub	sp, sp, #48
 4913              	.LCFI42:
 4914              		.cfi_def_cfa_offset 72
 4915 0006 0646     		mov	r6, r0
 4916 0008 8846     		mov	r8, r1
ARM GAS  /tmp/cccRWS2v.s 			page 127


1018:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   working_state state;
 4917              		.loc 1 1018 0
 4918 000a D0F8A471 		ldr	r7, [r0, #420]
 4919              	.LVL647:
1024:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   state.free_in_buffer = cinfo->dest->free_in_buffer;
 4920              		.loc 1 1024 0
 4921 000e 8369     		ldr	r3, [r0, #24]
 4922 0010 1A68     		ldr	r2, [r3]
 4923 0012 0392     		str	r2, [sp, #12]
1025:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   ASSIGN_STATE(state.cur, entropy->saved);
 4924              		.loc 1 1025 0
 4925 0014 5B68     		ldr	r3, [r3, #4]
 4926 0016 0493     		str	r3, [sp, #16]
1026:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   state.cinfo = cinfo;
 4927              		.loc 1 1026 0
 4928 0018 05AC     		add	r4, sp, #20
 4929 001a 07F10C05 		add	r5, r7, #12
 4930 001e 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 4931              	.LVL648:
 4932 0020 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 4933 0022 95E80300 		ldm	r5, {r0, r1}
 4934 0026 84E80300 		stm	r4, {r0, r1}
1027:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 4935              		.loc 1 1027 0
 4936 002a 0B96     		str	r6, [sp, #44]
1030:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     if (entropy->restarts_to_go == 0)
 4937              		.loc 1 1030 0
 4938 002c D6F8EC30 		ldr	r3, [r6, #236]
 4939 0030 0BB1     		cbz	r3, .L418
1031:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       if (! emit_restart_s(&state, entropy->next_restart_num))
 4940              		.loc 1 1031 0
 4941 0032 7B6A     		ldr	r3, [r7, #36]
 4942 0034 93B3     		cbz	r3, .L419
 4943              	.L418:
1017:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   huff_entropy_ptr entropy = (huff_entropy_ptr) cinfo->entropy;
 4944              		.loc 1 1017 0 discriminator 1
 4945 0036 0025     		movs	r5, #0
 4946              	.L420:
 4947              	.LVL649:
1037:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     ci = cinfo->MCU_membership[blkn];
 4948              		.loc 1 1037 0 discriminator 1
 4949 0038 D6F83C31 		ldr	r3, [r6, #316]
 4950 003c AB42     		cmp	r3, r5
 4951 003e 35DD     		ble	.L426
1038:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     compptr = cinfo->cur_comp_info[ci];
 4952              		.loc 1 1038 0
 4953 0040 05F15003 		add	r3, r5, #80
 4954 0044 56F82340 		ldr	r4, [r6, r3, lsl #2]
 4955              	.LVL650:
1039:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     if (! encode_one_block(&state,
 4956              		.loc 1 1039 0
 4957 0048 04F14803 		add	r3, r4, #72
 4958 004c 06EB8303 		add	r3, r6, r3, lsl #2
 4959 0050 5A68     		ldr	r2, [r3, #4]
 4960              	.LVL651:
1042:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 			   entropy->ac_derived_tbls[compptr->ac_tbl_no]))
 4961              		.loc 1 1042 0
ARM GAS  /tmp/cccRWS2v.s 			page 128


 4962 0052 5369     		ldr	r3, [r2, #20]
1043:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       return FALSE;
 4963              		.loc 1 1043 0
 4964 0054 9169     		ldr	r1, [r2, #24]
1040:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 			   MCU_data[blkn][0], state.cur.last_dc_val[ci],
 4965              		.loc 1 1040 0
 4966 0056 0A33     		adds	r3, r3, #10
 4967 0058 07EB8303 		add	r3, r7, r3, lsl #2
 4968 005c 5B68     		ldr	r3, [r3, #4]
 4969 005e 221D     		adds	r2, r4, #4
 4970              	.LVL652:
 4971 0060 0CA8     		add	r0, sp, #48
 4972 0062 00EB8202 		add	r2, r0, r2, lsl #2
 4973 0066 52F8242C 		ldr	r2, [r2, #-36]
 4974 006a 0E31     		adds	r1, r1, #14
 4975 006c 07EB8101 		add	r1, r7, r1, lsl #2
 4976 0070 4968     		ldr	r1, [r1, #4]
 4977 0072 0091     		str	r1, [sp]
 4978              	.LVL653:
 4979 0074 58F82510 		ldr	r1, [r8, r5, lsl #2]
 4980 0078 03A8     		add	r0, sp, #12
 4981 007a FFF7FEFF 		bl	encode_one_block
 4982              	.LVL654:
 4983 007e 0346     		mov	r3, r0
 4984 0080 0028     		cmp	r0, #0
 4985 0082 31D0     		beq	.L417
1046:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   }
 4986              		.loc 1 1046 0 discriminator 2
 4987 0084 58F82530 		ldr	r3, [r8, r5, lsl #2]
 4988 0088 B3F90030 		ldrsh	r3, [r3]
 4989 008c 0434     		adds	r4, r4, #4
 4990              	.LVL655:
 4991 008e 0CAA     		add	r2, sp, #48
 4992 0090 02EB8404 		add	r4, r2, r4, lsl #2
 4993              	.LVL656:
 4994 0094 44F8243C 		str	r3, [r4, #-36]
1037:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     ci = cinfo->MCU_membership[blkn];
 4995              		.loc 1 1037 0 discriminator 2
 4996 0098 0135     		adds	r5, r5, #1
 4997              	.LVL657:
 4998 009a CDE7     		b	.L420
 4999              	.LVL658:
 5000              	.L419:
1032:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 	return FALSE;
 5001              		.loc 1 1032 0
 5002 009c B96A     		ldr	r1, [r7, #40]
 5003 009e 03A8     		add	r0, sp, #12
 5004 00a0 FFF7FEFF 		bl	emit_restart_s
 5005              	.LVL659:
 5006 00a4 0346     		mov	r3, r0
 5007 00a6 0028     		cmp	r0, #0
 5008 00a8 C5D1     		bne	.L418
 5009 00aa 1DE0     		b	.L417
 5010              	.LVL660:
 5011              	.L426:
1050:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   cinfo->dest->free_in_buffer = state.free_in_buffer;
 5012              		.loc 1 1050 0
ARM GAS  /tmp/cccRWS2v.s 			page 129


 5013 00ac B369     		ldr	r3, [r6, #24]
 5014 00ae 039A     		ldr	r2, [sp, #12]
 5015 00b0 1A60     		str	r2, [r3]
1051:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   ASSIGN_STATE(entropy->saved, state.cur);
 5016              		.loc 1 1051 0
 5017 00b2 B369     		ldr	r3, [r6, #24]
 5018 00b4 049A     		ldr	r2, [sp, #16]
 5019 00b6 5A60     		str	r2, [r3, #4]
1052:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 5020              		.loc 1 1052 0
 5021 00b8 07F10C04 		add	r4, r7, #12
 5022 00bc 05AD     		add	r5, sp, #20
 5023              	.LVL661:
 5024 00be 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 5025 00c0 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 5026 00c2 95E80300 		ldm	r5, {r0, r1}
 5027 00c6 84E80300 		stm	r4, {r0, r1}
1055:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     if (entropy->restarts_to_go == 0) {
 5028              		.loc 1 1055 0
 5029 00ca D6F8EC30 		ldr	r3, [r6, #236]
 5030 00ce 7BB1     		cbz	r3, .L424
1056:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       entropy->restarts_to_go = cinfo->restart_interval;
 5031              		.loc 1 1056 0
 5032 00d0 7A6A     		ldr	r2, [r7, #36]
 5033 00d2 2AB9     		cbnz	r2, .L423
1057:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       entropy->next_restart_num++;
 5034              		.loc 1 1057 0
 5035 00d4 7B62     		str	r3, [r7, #36]
1058:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       entropy->next_restart_num &= 7;
 5036              		.loc 1 1058 0
 5037 00d6 BB6A     		ldr	r3, [r7, #40]
 5038 00d8 0133     		adds	r3, r3, #1
1059:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     }
 5039              		.loc 1 1059 0
 5040 00da 03F00703 		and	r3, r3, #7
 5041 00de BB62     		str	r3, [r7, #40]
 5042              	.L423:
1061:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   }
 5043              		.loc 1 1061 0
 5044 00e0 7B6A     		ldr	r3, [r7, #36]
 5045 00e2 013B     		subs	r3, r3, #1
 5046 00e4 7B62     		str	r3, [r7, #36]
1064:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** }
 5047              		.loc 1 1064 0
 5048 00e6 0123     		movs	r3, #1
 5049              	.L417:
1065:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 5050              		.loc 1 1065 0
 5051 00e8 1846     		mov	r0, r3
 5052 00ea 0CB0     		add	sp, sp, #48
 5053              	.LCFI43:
 5054              		.cfi_remember_state
 5055              		.cfi_def_cfa_offset 24
 5056              		@ sp needed
 5057 00ec BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 5058              	.LVL662:
 5059              	.L424:
ARM GAS  /tmp/cccRWS2v.s 			page 130


 5060              	.LCFI44:
 5061              		.cfi_restore_state
1064:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** }
 5062              		.loc 1 1064 0
 5063 00f0 0123     		movs	r3, #1
 5064 00f2 F9E7     		b	.L417
 5065              		.cfi_endproc
 5066              	.LFE21:
 5068              		.section	.text.encode_mcu_AC_refine,"ax",%progbits
 5069              		.align	1
 5070              		.syntax unified
 5071              		.thumb
 5072              		.thumb_func
 5073              		.fpu fpv5-sp-d16
 5075              	encode_mcu_AC_refine:
 5076              	.LFB19:
 787:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   huff_entropy_ptr entropy = (huff_entropy_ptr) cinfo->entropy;
 5077              		.loc 1 787 0
 5078              		.cfi_startproc
 5079              		@ args = 0, pretend = 0, frame = 280
 5080              		@ frame_needed = 0, uses_anonymous_args = 0
 5081              	.LVL663:
 5082 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 5083              	.LCFI45:
 5084              		.cfi_def_cfa_offset 36
 5085              		.cfi_offset 4, -36
 5086              		.cfi_offset 5, -32
 5087              		.cfi_offset 6, -28
 5088              		.cfi_offset 7, -24
 5089              		.cfi_offset 8, -20
 5090              		.cfi_offset 9, -16
 5091              		.cfi_offset 10, -12
 5092              		.cfi_offset 11, -8
 5093              		.cfi_offset 14, -4
 5094 0004 C7B0     		sub	sp, sp, #284
 5095              	.LCFI46:
 5096              		.cfi_def_cfa_offset 320
 5097 0006 0390     		str	r0, [sp, #12]
 5098 0008 0D46     		mov	r5, r1
 788:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   register int temp;
 5099              		.loc 1 788 0
 5100 000a D0F8A441 		ldr	r4, [r0, #420]
 5101              	.LVL664:
 799:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   entropy->free_in_buffer = cinfo->dest->free_in_buffer;
 5102              		.loc 1 799 0
 5103 000e 8369     		ldr	r3, [r0, #24]
 5104 0010 1B68     		ldr	r3, [r3]
 5105 0012 2367     		str	r3, [r4, #112]
 800:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 5106              		.loc 1 800 0
 5107 0014 8369     		ldr	r3, [r0, #24]
 5108 0016 5B68     		ldr	r3, [r3, #4]
 5109 0018 6367     		str	r3, [r4, #116]
 803:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     if (entropy->restarts_to_go == 0)
 5110              		.loc 1 803 0
 5111 001a D0F8EC30 		ldr	r3, [r0, #236]
 5112 001e 0BB1     		cbz	r3, .L428
ARM GAS  /tmp/cccRWS2v.s 			page 131


 804:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       emit_restart_e(entropy, entropy->next_restart_num);
 5113              		.loc 1 804 0
 5114 0020 636A     		ldr	r3, [r4, #36]
 5115 0022 8BB1     		cbz	r3, .L465
 5116              	.LVL665:
 5117              	.L428:
 807:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   Al = cinfo->Al;
 5118              		.loc 1 807 0
 5119 0024 039B     		ldr	r3, [sp, #12]
 5120 0026 D3F86C01 		ldr	r0, [r3, #364]
 5121 002a 0290     		str	r0, [sp, #8]
 5122              	.LVL666:
 808:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   natural_order = cinfo->natural_order;
 5123              		.loc 1 808 0
 5124 002c D3F87411 		ldr	r1, [r3, #372]
 5125              	.LVL667:
 809:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 5126              		.loc 1 809 0
 5127 0030 D3F87C71 		ldr	r7, [r3, #380]
 5128 0034 0497     		str	r7, [sp, #16]
 5129              	.LVL668:
 812:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 5130              		.loc 1 812 0
 5131 0036 2E68     		ldr	r6, [r5]
 5132 0038 0596     		str	r6, [sp, #20]
 5133              	.LVL669:
 818:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     temp = (*block)[natural_order[k]];
 5134              		.loc 1 818 0
 5135 003a D3F86881 		ldr	r8, [r3, #360]
 5136              	.LVL670:
 5137 003e 4246     		mov	r2, r8
 817:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   for (k = cinfo->Ss; k <= Se; k++) {
 5138              		.loc 1 817 0
 5139 0040 4FF0000A 		mov	r10, #0
 5140 0044 3D46     		mov	r5, r7
 5141              	.LVL671:
 818:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     temp = (*block)[natural_order[k]];
 5142              		.loc 1 818 0
 5143 0046 0BE0     		b	.L429
 5144              	.LVL672:
 5145              	.L465:
 805:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 5146              		.loc 1 805 0
 5147 0048 A16A     		ldr	r1, [r4, #40]
 5148              	.LVL673:
 5149 004a 2046     		mov	r0, r4
 5150              	.LVL674:
 5151 004c FFF7FEFF 		bl	emit_restart_e
 5152              	.LVL675:
 5153 0050 E8E7     		b	.L428
 5154              	.LVL676:
 5155              	.L430:
 826:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     absvalues[k] = temp;	/* save abs value for main pass */
 5156              		.loc 1 826 0
 5157 0052 0B41     		asrs	r3, r3, r1
 5158              	.LVL677:
 827:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     if (temp == 1)
ARM GAS  /tmp/cccRWS2v.s 			page 132


 5159              		.loc 1 827 0
 5160 0054 06AF     		add	r7, sp, #24
 5161 0056 47F82230 		str	r3, [r7, r2, lsl #2]
 828:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       EOB = k;			/* EOB = index of last newly-nonzero coef */
 5162              		.loc 1 828 0
 5163 005a 012B     		cmp	r3, #1
 5164 005c 0AD0     		beq	.L466
 5165              	.LVL678:
 5166              	.L431:
 818:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     temp = (*block)[natural_order[k]];
 5167              		.loc 1 818 0 discriminator 2
 5168 005e 0132     		adds	r2, r2, #1
 5169              	.LVL679:
 5170              	.L429:
 818:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     temp = (*block)[natural_order[k]];
 5171              		.loc 1 818 0 is_stmt 0 discriminator 1
 5172 0060 8242     		cmp	r2, r0
 5173 0062 09DC     		bgt	.L467
 819:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     /* We must apply the point transform by Al.  For AC coefficients this
 5174              		.loc 1 819 0 is_stmt 1
 5175 0064 55F82230 		ldr	r3, [r5, r2, lsl #2]
 5176 0068 36F91330 		ldrsh	r3, [r6, r3, lsl #1]
 5177              	.LVL680:
 824:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       temp = -temp;		/* temp is abs value of input */
 5178              		.loc 1 824 0
 5179 006c 002B     		cmp	r3, #0
 5180 006e F0DA     		bge	.L430
 825:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     temp >>= Al;		/* apply the point transform */
 5181              		.loc 1 825 0
 5182 0070 5B42     		negs	r3, r3
 5183              	.LVL681:
 5184 0072 EEE7     		b	.L430
 5185              	.L466:
 829:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   }
 5186              		.loc 1 829 0
 5187 0074 9246     		mov	r10, r2
 5188              	.LVL682:
 5189 0076 F2E7     		b	.L431
 5190              	.LVL683:
 5191              	.L467:
 836:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 5192              		.loc 1 836 0
 5193 0078 D4F88820 		ldr	r2, [r4, #136]
 5194              	.LVL684:
 5195 007c D4F88430 		ldr	r3, [r4, #132]
 5196 0080 02EB0309 		add	r9, r2, r3
 5197              	.LVL685:
 835:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   BR_buffer = entropy->bit_buffer + entropy->BE; /* Append bits to buffer */
 5198              		.loc 1 835 0
 5199 0084 0023     		movs	r3, #0
 5200 0086 0093     		str	r3, [sp]
 834:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   BR = 0;			/* BR = count of buffered bits added now */
 5201              		.loc 1 834 0
 5202 0088 1F46     		mov	r7, r3
 838:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     if ((temp = absvalues[k]) == 0) {
 5203              		.loc 1 838 0
 5204 008a 78E0     		b	.L433
ARM GAS  /tmp/cccRWS2v.s 			page 133


 5205              	.LVL686:
 5206              	.L436:
 5207              	.LBB176:
 5208              	.LBB177:
 5209              	.LBB178:
 429:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     emit_bits_e(entropy, tbl->ehufco[symbol], tbl->ehufsi[symbol]);
 5210              		.loc 1 429 0
 5211 008c 0E33     		adds	r3, r3, #14
 5212              	.LVL687:
 5213 008e 04EB8303 		add	r3, r4, r3, lsl #2
 5214 0092 5B68     		ldr	r3, [r3, #4]
 5215              	.LVL688:
 430:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   }
 5216              		.loc 1 430 0
 5217 0094 D3F8C053 		ldr	r5, [r3, #960]
 5218 0098 93F8F0B4 		ldrb	fp, [r3, #1264]	@ zero_extendqisi2
 5219              	.LVL689:
 5220              	.LBB179:
 5221              	.LBB180:
 351:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 5222              		.loc 1 351 0
 5223 009c 2669     		ldr	r6, [r4, #16]
 5224              	.LVL690:
 354:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     ERREXIT(entropy->cinfo, JERR_HUFF_MISSING_CODE);
 5225              		.loc 1 354 0
 5226 009e BBF1000F 		cmp	fp, #0
 5227 00a2 07D1     		bne	.L438
 355:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 5228              		.loc 1 355 0
 5229 00a4 A36F     		ldr	r3, [r4, #120]
 5230              	.LVL691:
 5231 00a6 1B68     		ldr	r3, [r3]
 5232 00a8 2922     		movs	r2, #41
 5233 00aa 5A61     		str	r2, [r3, #20]
 5234              	.LVL692:
 5235 00ac A06F     		ldr	r0, [r4, #120]
 5236 00ae 0368     		ldr	r3, [r0]
 5237 00b0 1B68     		ldr	r3, [r3]
 5238 00b2 9847     		blx	r3
 5239              	.LVL693:
 5240              	.L438:
 357:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     return;			/* do nothing if we're only getting stats */
 5241              		.loc 1 357 0
 5242 00b4 E36E     		ldr	r3, [r4, #108]
 5243 00b6 002B     		cmp	r3, #0
 5244 00b8 32D1     		bne	.L437
 360:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   
 5245              		.loc 1 360 0
 5246 00ba 0123     		movs	r3, #1
 5247 00bc 03FA0BF3 		lsl	r3, r3, fp
 5248 00c0 013B     		subs	r3, r3, #1
 5249 00c2 1D40     		ands	r5, r5, r3
 5250              	.LVL694:
 362:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 5251              		.loc 1 362 0
 5252 00c4 5E44     		add	r6, r6, fp
 5253              	.LVL695:
ARM GAS  /tmp/cccRWS2v.s 			page 134


 364:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 5254              		.loc 1 364 0
 5255 00c6 C6F11803 		rsb	r3, r6, #24
 5256 00ca 9D40     		lsls	r5, r5, r3
 5257              	.LVL696:
 367:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 5258              		.loc 1 367 0
 5259 00cc E368     		ldr	r3, [r4, #12]
 5260 00ce 1D43     		orrs	r5, r5, r3
 5261              	.LVL697:
 5262 00d0 05E0     		b	.L439
 5263              	.LVL698:
 5264              	.L469:
 5265              	.LBB181:
 372:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     if (c == 0xFF) {		/* need to stuff a zero byte? */
 5266              		.loc 1 372 0
 5267 00d2 2046     		mov	r0, r4
 5268 00d4 FFF7FEFF 		bl	dump_buffer_e
 5269              	.LVL699:
 5270 00d8 0FE0     		b	.L440
 5271              	.L441:
 376:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     put_bits -= 8;
 5272              		.loc 1 376 0
 5273 00da 2D02     		lsls	r5, r5, #8
 5274              	.LVL700:
 377:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   }
 5275              		.loc 1 377 0
 5276 00dc 083E     		subs	r6, r6, #8
 5277              	.LVL701:
 5278              	.L439:
 5279              	.LBE181:
 369:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     int c = (int) ((put_buffer >> 16) & 0xFF);
 5280              		.loc 1 369 0
 5281 00de 072E     		cmp	r6, #7
 5282 00e0 1CDD     		ble	.L468
 5283              	.LBB182:
 370:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 5284              		.loc 1 370 0
 5285 00e2 C5F3074B 		ubfx	fp, r5, #16, #8
 5286              	.LVL702:
 372:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     if (c == 0xFF) {		/* need to stuff a zero byte? */
 5287              		.loc 1 372 0
 5288 00e6 236F     		ldr	r3, [r4, #112]
 5289 00e8 5A1C     		adds	r2, r3, #1
 5290 00ea 2267     		str	r2, [r4, #112]
 5291 00ec 83F800B0 		strb	fp, [r3]
 5292 00f0 636F     		ldr	r3, [r4, #116]
 5293 00f2 013B     		subs	r3, r3, #1
 5294 00f4 6367     		str	r3, [r4, #116]
 5295 00f6 002B     		cmp	r3, #0
 5296 00f8 EBD0     		beq	.L469
 5297              	.L440:
 373:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       emit_byte_e(entropy, 0);
 5298              		.loc 1 373 0
 5299 00fa BBF1FF0F 		cmp	fp, #255
 5300 00fe ECD1     		bne	.L441
 374:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     }
ARM GAS  /tmp/cccRWS2v.s 			page 135


 5301              		.loc 1 374 0
 5302 0100 236F     		ldr	r3, [r4, #112]
 5303 0102 5A1C     		adds	r2, r3, #1
 5304 0104 2267     		str	r2, [r4, #112]
 5305 0106 0022     		movs	r2, #0
 5306 0108 1A70     		strb	r2, [r3]
 5307 010a 636F     		ldr	r3, [r4, #116]
 5308 010c 013B     		subs	r3, r3, #1
 5309 010e 6367     		str	r3, [r4, #116]
 5310 0110 002B     		cmp	r3, #0
 5311 0112 E2D1     		bne	.L441
 5312 0114 2046     		mov	r0, r4
 5313 0116 FFF7FEFF 		bl	dump_buffer_e
 5314              	.LVL703:
 5315 011a DEE7     		b	.L441
 5316              	.LVL704:
 5317              	.L468:
 5318              	.LBE182:
 380:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   entropy->saved.put_bits = put_bits;
 5319              		.loc 1 380 0
 5320 011c E560     		str	r5, [r4, #12]
 381:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** }
 5321              		.loc 1 381 0
 5322 011e 2661     		str	r6, [r4, #16]
 5323              	.LVL705:
 5324              	.L437:
 5325              	.LBE180:
 5326              	.LBE179:
 5327              	.LBE178:
 5328              	.LBE177:
 5329              	.LBE176:
 850:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       /* Emit buffered correction bits that must be associated with ZRL */
 5330              		.loc 1 850 0
 5331 0120 103F     		subs	r7, r7, #16
 5332              	.LVL706:
 852:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       BR_buffer = entropy->bit_buffer; /* BE bits are gone now */
 5333              		.loc 1 852 0
 5334 0122 009A     		ldr	r2, [sp]
 5335 0124 4946     		mov	r1, r9
 5336 0126 2046     		mov	r0, r4
 5337 0128 FFF7FEFF 		bl	emit_buffered_bits
 5338              	.LVL707:
 853:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       BR = 0;
 5339              		.loc 1 853 0
 5340 012c D4F88890 		ldr	r9, [r4, #136]
 5341              	.LVL708:
 854:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     }
 5342              		.loc 1 854 0
 5343 0130 0023     		movs	r3, #0
 5344 0132 0093     		str	r3, [sp]
 5345              	.LVL709:
 5346              	.L434:
 845:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       /* emit any pending EOBRUN and the BE correction bits */
 5347              		.loc 1 845 0
 5348 0134 0F2F     		cmp	r7, #15
 5349 0136 D4BF     		ite	le
 5350 0138 0023     		movle	r3, #0
ARM GAS  /tmp/cccRWS2v.s 			page 136


 5351 013a 0123     		movgt	r3, #1
 5352 013c D045     		cmp	r8, r10
 5353 013e C8BF     		it	gt
 5354 0140 0023     		movgt	r3, #0
 5355 0142 83B1     		cbz	r3, .L470
 847:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       /* Emit ZRL */
 5356              		.loc 1 847 0
 5357 0144 2046     		mov	r0, r4
 5358 0146 FFF7FEFF 		bl	emit_eobrun
 5359              	.LVL710:
 849:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       r -= 16;
 5360              		.loc 1 849 0
 5361 014a E36F     		ldr	r3, [r4, #124]
 5362              	.LVL711:
 5363              	.LBB184:
 5364              	.LBB183:
 426:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     entropy->ac_count_ptrs[tbl_no][symbol]++;
 5365              		.loc 1 426 0
 5366 014c E26E     		ldr	r2, [r4, #108]
 5367 014e 002A     		cmp	r2, #0
 5368 0150 9CD0     		beq	.L436
 427:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   else {
 5369              		.loc 1 427 0
 5370 0152 1633     		adds	r3, r3, #22
 5371              	.LVL712:
 5372 0154 04EB8303 		add	r3, r4, r3, lsl #2
 5373 0158 5A68     		ldr	r2, [r3, #4]
 5374 015a D2F8C033 		ldr	r3, [r2, #960]
 5375 015e 0133     		adds	r3, r3, #1
 5376 0160 C2F8C033 		str	r3, [r2, #960]
 5377              	.LVL713:
 5378 0164 DCE7     		b	.L437
 5379              	.LVL714:
 5380              	.L470:
 5381              	.LBE183:
 5382              	.LBE184:
 862:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       /* The correction bit is the next bit of the absolute value. */
 5383              		.loc 1 862 0
 5384 0166 019B     		ldr	r3, [sp, #4]
 5385 0168 012B     		cmp	r3, #1
 5386 016a 14DD     		ble	.L444
 5387              	.LVL715:
 864:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       continue;
 5388              		.loc 1 864 0
 5389 016c 03F00103 		and	r3, r3, #1
 5390 0170 009A     		ldr	r2, [sp]
 5391 0172 09F80230 		strb	r3, [r9, r2]
 5392 0176 531C     		adds	r3, r2, #1
 5393              	.LVL716:
 5394 0178 0093     		str	r3, [sp]
 5395              	.LVL717:
 5396              	.L435:
 838:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     if ((temp = absvalues[k]) == 0) {
 5397              		.loc 1 838 0 discriminator 2
 5398 017a 08F10108 		add	r8, r8, #1
 5399              	.LVL718:
 5400              	.L433:
ARM GAS  /tmp/cccRWS2v.s 			page 137


 838:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     if ((temp = absvalues[k]) == 0) {
 5401              		.loc 1 838 0 is_stmt 0 discriminator 1
 5402 017e 029B     		ldr	r3, [sp, #8]
 5403 0180 9845     		cmp	r8, r3
 5404 0182 00F3A680 		bgt	.L471
 839:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       r++;
 5405              		.loc 1 839 0 is_stmt 1
 5406 0186 06AB     		add	r3, sp, #24
 5407 0188 53F82830 		ldr	r3, [r3, r8, lsl #2]
 5408 018c 0193     		str	r3, [sp, #4]
 5409              	.LVL719:
 5410 018e 002B     		cmp	r3, #0
 5411 0190 D0D1     		bne	.L434
 840:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       continue;
 5412              		.loc 1 840 0
 5413 0192 0137     		adds	r7, r7, #1
 5414              	.LVL720:
 841:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     }
 5415              		.loc 1 841 0
 5416 0194 F1E7     		b	.L435
 5417              	.LVL721:
 5418              	.L444:
 869:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 5419              		.loc 1 869 0
 5420 0196 2046     		mov	r0, r4
 5421 0198 FFF7FEFF 		bl	emit_eobrun
 5422              	.LVL722:
 872:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 5423              		.loc 1 872 0
 5424 019c E36F     		ldr	r3, [r4, #124]
 5425 019e 3F01     		lsls	r7, r7, #4
 5426              	.LVL723:
 5427 01a0 0137     		adds	r7, r7, #1
 5428              	.LVL724:
 5429              	.LBB185:
 5430              	.LBB186:
 426:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     entropy->ac_count_ptrs[tbl_no][symbol]++;
 5431              		.loc 1 426 0
 5432 01a2 E26E     		ldr	r2, [r4, #108]
 5433 01a4 F2B1     		cbz	r2, .L445
 427:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   else {
 5434              		.loc 1 427 0
 5435 01a6 1633     		adds	r3, r3, #22
 5436              	.LVL725:
 5437 01a8 04EB8303 		add	r3, r4, r3, lsl #2
 5438 01ac 5A68     		ldr	r2, [r3, #4]
 5439 01ae 52F82730 		ldr	r3, [r2, r7, lsl #2]
 5440 01b2 0133     		adds	r3, r3, #1
 5441 01b4 42F82730 		str	r3, [r2, r7, lsl #2]
 5442              	.LVL726:
 5443              	.L446:
 5444              	.LBE186:
 5445              	.LBE185:
 875:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     emit_bits_e(entropy, (unsigned int) temp, 1);
 5446              		.loc 1 875 0
 5447 01b8 049B     		ldr	r3, [sp, #16]
 5448 01ba 53F82830 		ldr	r3, [r3, r8, lsl #2]
ARM GAS  /tmp/cccRWS2v.s 			page 138


 5449 01be 059A     		ldr	r2, [sp, #20]
 5450 01c0 32F91330 		ldrsh	r3, [r2, r3, lsl #1]
 5451 01c4 DB43     		mvns	r3, r3
 5452 01c6 DB0F     		lsrs	r3, r3, #31
 5453              	.LVL727:
 5454              	.LBB193:
 5455              	.LBB194:
 351:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 5456              		.loc 1 351 0
 5457 01c8 2669     		ldr	r6, [r4, #16]
 5458              	.LVL728:
 357:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     return;			/* do nothing if we're only getting stats */
 5459              		.loc 1 357 0
 5460 01ca E26E     		ldr	r2, [r4, #108]
 5461 01cc 002A     		cmp	r2, #0
 5462 01ce 75D1     		bne	.L452
 360:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   
 5463              		.loc 1 360 0
 5464 01d0 03F00103 		and	r3, r3, #1
 5465              	.LVL729:
 362:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 5466              		.loc 1 362 0
 5467 01d4 0136     		adds	r6, r6, #1
 5468              	.LVL730:
 364:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 5469              		.loc 1 364 0
 5470 01d6 C6F11805 		rsb	r5, r6, #24
 5471 01da 03FA05F5 		lsl	r5, r3, r5
 5472              	.LVL731:
 367:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 5473              		.loc 1 367 0
 5474 01de E368     		ldr	r3, [r4, #12]
 5475 01e0 1D43     		orrs	r5, r5, r3
 5476              	.LVL732:
 5477 01e2 4CE0     		b	.L453
 5478              	.LVL733:
 5479              	.L445:
 5480              	.LBE194:
 5481              	.LBE193:
 5482              	.LBB198:
 5483              	.LBB192:
 5484              	.LBB187:
 429:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     emit_bits_e(entropy, tbl->ehufco[symbol], tbl->ehufsi[symbol]);
 5485              		.loc 1 429 0
 5486 01e4 0E33     		adds	r3, r3, #14
 5487              	.LVL734:
 5488 01e6 04EB8303 		add	r3, r4, r3, lsl #2
 5489 01ea 5B68     		ldr	r3, [r3, #4]
 5490              	.LVL735:
 430:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   }
 5491              		.loc 1 430 0
 5492 01ec 53F82750 		ldr	r5, [r3, r7, lsl #2]
 5493 01f0 1F44     		add	r7, r7, r3
 5494              	.LVL736:
 5495 01f2 97F80074 		ldrb	r7, [r7, #1024]	@ zero_extendqisi2
 5496              	.LVL737:
 5497              	.LBB188:
ARM GAS  /tmp/cccRWS2v.s 			page 139


 5498              	.LBB189:
 351:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 5499              		.loc 1 351 0
 5500 01f6 2669     		ldr	r6, [r4, #16]
 5501              	.LVL738:
 354:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     ERREXIT(entropy->cinfo, JERR_HUFF_MISSING_CODE);
 5502              		.loc 1 354 0
 5503 01f8 3FB9     		cbnz	r7, .L447
 355:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 5504              		.loc 1 355 0
 5505 01fa A36F     		ldr	r3, [r4, #120]
 5506              	.LVL739:
 5507 01fc 1B68     		ldr	r3, [r3]
 5508 01fe 2922     		movs	r2, #41
 5509 0200 5A61     		str	r2, [r3, #20]
 5510              	.LVL740:
 5511 0202 A06F     		ldr	r0, [r4, #120]
 5512 0204 0368     		ldr	r3, [r0]
 5513 0206 1B68     		ldr	r3, [r3]
 5514 0208 9847     		blx	r3
 5515              	.LVL741:
 5516              	.L447:
 357:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     return;			/* do nothing if we're only getting stats */
 5517              		.loc 1 357 0
 5518 020a E36E     		ldr	r3, [r4, #108]
 5519 020c 002B     		cmp	r3, #0
 5520 020e D3D1     		bne	.L446
 360:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   
 5521              		.loc 1 360 0
 5522 0210 0123     		movs	r3, #1
 5523 0212 BB40     		lsls	r3, r3, r7
 5524 0214 013B     		subs	r3, r3, #1
 5525 0216 1D40     		ands	r5, r5, r3
 5526              	.LVL742:
 362:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 5527              		.loc 1 362 0
 5528 0218 3E44     		add	r6, r6, r7
 5529              	.LVL743:
 364:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 5530              		.loc 1 364 0
 5531 021a C6F11803 		rsb	r3, r6, #24
 5532 021e 9D40     		lsls	r5, r5, r3
 5533              	.LVL744:
 367:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 5534              		.loc 1 367 0
 5535 0220 E368     		ldr	r3, [r4, #12]
 5536 0222 1D43     		orrs	r5, r5, r3
 5537              	.LVL745:
 5538 0224 05E0     		b	.L448
 5539              	.LVL746:
 5540              	.L473:
 5541              	.LBB190:
 372:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     if (c == 0xFF) {		/* need to stuff a zero byte? */
 5542              		.loc 1 372 0
 5543 0226 2046     		mov	r0, r4
 5544 0228 FFF7FEFF 		bl	dump_buffer_e
 5545              	.LVL747:
ARM GAS  /tmp/cccRWS2v.s 			page 140


 5546 022c 0EE0     		b	.L449
 5547              	.L450:
 376:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     put_bits -= 8;
 5548              		.loc 1 376 0
 5549 022e 2D02     		lsls	r5, r5, #8
 5550              	.LVL748:
 377:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   }
 5551              		.loc 1 377 0
 5552 0230 083E     		subs	r6, r6, #8
 5553              	.LVL749:
 5554              	.L448:
 5555              	.LBE190:
 369:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     int c = (int) ((put_buffer >> 16) & 0xFF);
 5556              		.loc 1 369 0
 5557 0232 072E     		cmp	r6, #7
 5558 0234 1ADD     		ble	.L472
 5559              	.LBB191:
 370:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 5560              		.loc 1 370 0
 5561 0236 C5F30747 		ubfx	r7, r5, #16, #8
 5562              	.LVL750:
 372:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     if (c == 0xFF) {		/* need to stuff a zero byte? */
 5563              		.loc 1 372 0
 5564 023a 236F     		ldr	r3, [r4, #112]
 5565 023c 5A1C     		adds	r2, r3, #1
 5566 023e 2267     		str	r2, [r4, #112]
 5567 0240 1F70     		strb	r7, [r3]
 5568 0242 636F     		ldr	r3, [r4, #116]
 5569 0244 013B     		subs	r3, r3, #1
 5570 0246 6367     		str	r3, [r4, #116]
 5571 0248 002B     		cmp	r3, #0
 5572 024a ECD0     		beq	.L473
 5573              	.L449:
 373:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       emit_byte_e(entropy, 0);
 5574              		.loc 1 373 0
 5575 024c FF2F     		cmp	r7, #255
 5576 024e EED1     		bne	.L450
 374:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     }
 5577              		.loc 1 374 0
 5578 0250 236F     		ldr	r3, [r4, #112]
 5579 0252 5A1C     		adds	r2, r3, #1
 5580 0254 2267     		str	r2, [r4, #112]
 5581 0256 0022     		movs	r2, #0
 5582 0258 1A70     		strb	r2, [r3]
 5583 025a 636F     		ldr	r3, [r4, #116]
 5584 025c 013B     		subs	r3, r3, #1
 5585 025e 6367     		str	r3, [r4, #116]
 5586 0260 002B     		cmp	r3, #0
 5587 0262 E4D1     		bne	.L450
 5588 0264 2046     		mov	r0, r4
 5589 0266 FFF7FEFF 		bl	dump_buffer_e
 5590              	.LVL751:
 5591 026a E0E7     		b	.L450
 5592              	.LVL752:
 5593              	.L472:
 5594              	.LBE191:
 380:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   entropy->saved.put_bits = put_bits;
ARM GAS  /tmp/cccRWS2v.s 			page 141


 5595              		.loc 1 380 0
 5596 026c E560     		str	r5, [r4, #12]
 381:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** }
 5597              		.loc 1 381 0
 5598 026e 2661     		str	r6, [r4, #16]
 5599 0270 A2E7     		b	.L446
 5600              	.LVL753:
 5601              	.L475:
 5602              	.LBE189:
 5603              	.LBE188:
 5604              	.LBE187:
 5605              	.LBE192:
 5606              	.LBE198:
 5607              	.LBB199:
 5608              	.LBB197:
 5609              	.LBB195:
 372:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     if (c == 0xFF) {		/* need to stuff a zero byte? */
 5610              		.loc 1 372 0
 5611 0272 2046     		mov	r0, r4
 5612 0274 FFF7FEFF 		bl	dump_buffer_e
 5613              	.LVL754:
 5614 0278 0EE0     		b	.L454
 5615              	.L455:
 376:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     put_bits -= 8;
 5616              		.loc 1 376 0
 5617 027a 2D02     		lsls	r5, r5, #8
 5618              	.LVL755:
 377:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   }
 5619              		.loc 1 377 0
 5620 027c 083E     		subs	r6, r6, #8
 5621              	.LVL756:
 5622              	.L453:
 5623              	.LBE195:
 369:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     int c = (int) ((put_buffer >> 16) & 0xFF);
 5624              		.loc 1 369 0
 5625 027e 072E     		cmp	r6, #7
 5626 0280 1ADD     		ble	.L474
 5627              	.LBB196:
 370:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 5628              		.loc 1 370 0
 5629 0282 C5F30747 		ubfx	r7, r5, #16, #8
 5630              	.LVL757:
 372:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     if (c == 0xFF) {		/* need to stuff a zero byte? */
 5631              		.loc 1 372 0
 5632 0286 236F     		ldr	r3, [r4, #112]
 5633 0288 5A1C     		adds	r2, r3, #1
 5634 028a 2267     		str	r2, [r4, #112]
 5635 028c 1F70     		strb	r7, [r3]
 5636 028e 636F     		ldr	r3, [r4, #116]
 5637 0290 013B     		subs	r3, r3, #1
 5638 0292 6367     		str	r3, [r4, #116]
 5639 0294 002B     		cmp	r3, #0
 5640 0296 ECD0     		beq	.L475
 5641              	.L454:
 373:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       emit_byte_e(entropy, 0);
 5642              		.loc 1 373 0
 5643 0298 FF2F     		cmp	r7, #255
ARM GAS  /tmp/cccRWS2v.s 			page 142


 5644 029a EED1     		bne	.L455
 374:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     }
 5645              		.loc 1 374 0
 5646 029c 236F     		ldr	r3, [r4, #112]
 5647 029e 5A1C     		adds	r2, r3, #1
 5648 02a0 2267     		str	r2, [r4, #112]
 5649 02a2 0022     		movs	r2, #0
 5650 02a4 1A70     		strb	r2, [r3]
 5651 02a6 636F     		ldr	r3, [r4, #116]
 5652 02a8 013B     		subs	r3, r3, #1
 5653 02aa 6367     		str	r3, [r4, #116]
 5654 02ac 002B     		cmp	r3, #0
 5655 02ae E4D1     		bne	.L455
 5656 02b0 2046     		mov	r0, r4
 5657 02b2 FFF7FEFF 		bl	dump_buffer_e
 5658              	.LVL758:
 5659 02b6 E0E7     		b	.L455
 5660              	.LVL759:
 5661              	.L474:
 5662              	.LBE196:
 380:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   entropy->saved.put_bits = put_bits;
 5663              		.loc 1 380 0
 5664 02b8 E560     		str	r5, [r4, #12]
 381:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** }
 5665              		.loc 1 381 0
 5666 02ba 2661     		str	r6, [r4, #16]
 5667              	.LVL760:
 5668              	.L452:
 5669              	.LBE197:
 5670              	.LBE199:
 879:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     BR_buffer = entropy->bit_buffer; /* BE bits are gone now */
 5671              		.loc 1 879 0
 5672 02bc 009A     		ldr	r2, [sp]
 5673 02be 4946     		mov	r1, r9
 5674 02c0 2046     		mov	r0, r4
 5675 02c2 FFF7FEFF 		bl	emit_buffered_bits
 5676              	.LVL761:
 880:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     BR = 0;
 5677              		.loc 1 880 0
 5678 02c6 D4F88890 		ldr	r9, [r4, #136]
 5679              	.LVL762:
 881:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     r = 0;			/* reset zero run length */
 5680              		.loc 1 881 0
 5681 02ca 0023     		movs	r3, #0
 5682 02cc 0093     		str	r3, [sp]
 882:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   }
 5683              		.loc 1 882 0
 5684 02ce 1F46     		mov	r7, r3
 5685 02d0 53E7     		b	.L435
 5686              	.LVL763:
 5687              	.L471:
 885:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     entropy->EOBRUN++;		/* count an EOB */
 5688              		.loc 1 885 0
 5689 02d2 0099     		ldr	r1, [sp]
 5690 02d4 002F     		cmp	r7, #0
 5691 02d6 D8BF     		it	le
 5692 02d8 0029     		cmple	r1, #0
ARM GAS  /tmp/cccRWS2v.s 			page 143


 5693 02da 15D0     		beq	.L458
 886:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     entropy->BE += BR;		/* concat my correction bits to older ones */
 5694              		.loc 1 886 0
 5695 02dc D4F88020 		ldr	r2, [r4, #128]
 5696 02e0 0132     		adds	r2, r2, #1
 5697 02e2 C4F88020 		str	r2, [r4, #128]
 887:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     /* We force out the EOB if we risk either:
 5698              		.loc 1 887 0
 5699 02e6 D4F88430 		ldr	r3, [r4, #132]
 5700 02ea 1944     		add	r1, r1, r3
 5701 02ec 0B46     		mov	r3, r1
 5702 02ee C4F88410 		str	r1, [r4, #132]
 892:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       emit_eobrun(entropy);
 5703              		.loc 1 892 0
 5704 02f2 47F6FF71 		movw	r1, #32767
 5705 02f6 8A42     		cmp	r2, r1
 5706 02f8 03D0     		beq	.L459
 892:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       emit_eobrun(entropy);
 5707              		.loc 1 892 0 is_stmt 0 discriminator 1
 5708 02fa 40F2A932 		movw	r2, #937
 5709 02fe 9342     		cmp	r3, r2
 5710 0300 02D9     		bls	.L458
 5711              	.L459:
 893:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   }
 5712              		.loc 1 893 0 is_stmt 1
 5713 0302 2046     		mov	r0, r4
 5714 0304 FFF7FEFF 		bl	emit_eobrun
 5715              	.LVL764:
 5716              	.L458:
 896:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   cinfo->dest->free_in_buffer = entropy->free_in_buffer;
 5717              		.loc 1 896 0
 5718 0308 0399     		ldr	r1, [sp, #12]
 5719 030a 8B69     		ldr	r3, [r1, #24]
 5720 030c 226F     		ldr	r2, [r4, #112]
 5721 030e 1A60     		str	r2, [r3]
 897:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 5722              		.loc 1 897 0
 5723 0310 8B69     		ldr	r3, [r1, #24]
 5724 0312 626F     		ldr	r2, [r4, #116]
 5725 0314 5A60     		str	r2, [r3, #4]
 900:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     if (entropy->restarts_to_go == 0) {
 5726              		.loc 1 900 0
 5727 0316 D1F8EC30 		ldr	r3, [r1, #236]
 5728 031a 53B1     		cbz	r3, .L460
 901:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       entropy->restarts_to_go = cinfo->restart_interval;
 5729              		.loc 1 901 0
 5730 031c 626A     		ldr	r2, [r4, #36]
 5731 031e 2AB9     		cbnz	r2, .L461
 902:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       entropy->next_restart_num++;
 5732              		.loc 1 902 0
 5733 0320 6362     		str	r3, [r4, #36]
 903:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****       entropy->next_restart_num &= 7;
 5734              		.loc 1 903 0
 5735 0322 A36A     		ldr	r3, [r4, #40]
 5736 0324 0133     		adds	r3, r3, #1
 904:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     }
 5737              		.loc 1 904 0
ARM GAS  /tmp/cccRWS2v.s 			page 144


 5738 0326 03F00703 		and	r3, r3, #7
 5739 032a A362     		str	r3, [r4, #40]
 5740              	.L461:
 906:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   }
 5741              		.loc 1 906 0
 5742 032c 636A     		ldr	r3, [r4, #36]
 5743 032e 013B     		subs	r3, r3, #1
 5744 0330 6362     		str	r3, [r4, #36]
 5745              	.L460:
 910:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
 5746              		.loc 1 910 0
 5747 0332 0120     		movs	r0, #1
 5748 0334 47B0     		add	sp, sp, #284
 5749              	.LCFI47:
 5750              		.cfi_def_cfa_offset 36
 5751              	.LVL765:
 5752              		@ sp needed
 5753 0336 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 5754              		.cfi_endproc
 5755              	.LFE19:
 5757              		.section	.text.jinit_huff_encoder,"ax",%progbits
 5758              		.align	1
 5759              		.global	jinit_huff_encoder
 5760              		.syntax unified
 5761              		.thumb
 5762              		.thumb_func
 5763              		.fpu fpv5-sp-d16
 5765              	jinit_huff_encoder:
 5766              	.LFB28:
1550:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
1551:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
1552:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** /*
1553:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****  * Module initialization routine for Huffman entropy encoding.
1554:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****  */
1555:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
1556:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** GLOBAL(void)
1557:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** jinit_huff_encoder (j_compress_ptr cinfo)
1558:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** {
 5767              		.loc 1 1558 0
 5768              		.cfi_startproc
 5769              		@ args = 0, pretend = 0, frame = 0
 5770              		@ frame_needed = 0, uses_anonymous_args = 0
 5771              	.LVL766:
 5772 0000 10B5     		push	{r4, lr}
 5773              	.LCFI48:
 5774              		.cfi_def_cfa_offset 8
 5775              		.cfi_offset 4, -8
 5776              		.cfi_offset 14, -4
 5777 0002 0446     		mov	r4, r0
1559:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   huff_entropy_ptr entropy;
1560:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   int i;
1561:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
1562:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   entropy = (huff_entropy_ptr)
1563:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     (*cinfo->mem->alloc_small) ((j_common_ptr) cinfo, JPOOL_IMAGE,
 5778              		.loc 1 1563 0
 5779 0004 4368     		ldr	r3, [r0, #4]
 5780 0006 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/cccRWS2v.s 			page 145


1562:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     (*cinfo->mem->alloc_small) ((j_common_ptr) cinfo, JPOOL_IMAGE,
 5781              		.loc 1 1562 0
 5782 0008 8C22     		movs	r2, #140
 5783 000a 0121     		movs	r1, #1
 5784 000c 9847     		blx	r3
 5785              	.LVL767:
1564:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 				SIZEOF(huff_entropy_encoder));
1565:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   cinfo->entropy = (struct jpeg_entropy_encoder *) entropy;
 5786              		.loc 1 1565 0
 5787 000e C4F8A401 		str	r0, [r4, #420]
1566:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   entropy->pub.start_pass = start_pass_huff;
 5788              		.loc 1 1566 0
 5789 0012 114B     		ldr	r3, .L481
 5790 0014 0360     		str	r3, [r0]
 5791              	.LVL768:
1567:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
1568:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   /* Mark tables unallocated */
1569:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   for (i = 0; i < NUM_HUFF_TBLS; i++) {
 5792              		.loc 1 1569 0
 5793 0016 0023     		movs	r3, #0
 5794 0018 15E0     		b	.L477
 5795              	.LVL769:
 5796              	.L478:
1570:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     entropy->dc_derived_tbls[i] = entropy->ac_derived_tbls[i] = NULL;
 5797              		.loc 1 1570 0 discriminator 3
 5798 001a 03F10E01 		add	r1, r3, #14
 5799 001e 00EB8101 		add	r1, r0, r1, lsl #2
 5800 0022 0022     		movs	r2, #0
 5801 0024 4A60     		str	r2, [r1, #4]
 5802 0026 03F10A01 		add	r1, r3, #10
 5803 002a 00EB8101 		add	r1, r0, r1, lsl #2
 5804 002e 4A60     		str	r2, [r1, #4]
1571:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     entropy->dc_count_ptrs[i] = entropy->ac_count_ptrs[i] = NULL;
 5805              		.loc 1 1571 0 discriminator 3
 5806 0030 03F11601 		add	r1, r3, #22
 5807 0034 00EB8101 		add	r1, r0, r1, lsl #2
 5808 0038 4A60     		str	r2, [r1, #4]
 5809 003a 03F11201 		add	r1, r3, #18
 5810 003e 00EB8101 		add	r1, r0, r1, lsl #2
 5811 0042 4A60     		str	r2, [r1, #4]
1569:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     entropy->dc_derived_tbls[i] = entropy->ac_derived_tbls[i] = NULL;
 5812              		.loc 1 1569 0 discriminator 3
 5813 0044 0133     		adds	r3, r3, #1
 5814              	.LVL770:
 5815              	.L477:
1569:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     entropy->dc_derived_tbls[i] = entropy->ac_derived_tbls[i] = NULL;
 5816              		.loc 1 1569 0 is_stmt 0 discriminator 1
 5817 0046 032B     		cmp	r3, #3
 5818 0048 E7DD     		ble	.L478
1572:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   }
1573:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** 
1574:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****   if (cinfo->progressive_mode)
 5819              		.loc 1 1574 0 is_stmt 1
 5820 004a D4F80831 		ldr	r3, [r4, #264]
 5821              	.LVL771:
 5822 004e 13B1     		cbz	r3, .L476
1575:Middlewares/Third_Party/LibJPEG/source/jchuff.c ****     entropy->bit_buffer = NULL;	/* needed only in AC refinement scan */
ARM GAS  /tmp/cccRWS2v.s 			page 146


 5823              		.loc 1 1575 0
 5824 0050 0023     		movs	r3, #0
 5825 0052 C0F88830 		str	r3, [r0, #136]
 5826              	.L476:
1576:Middlewares/Third_Party/LibJPEG/source/jchuff.c **** }
 5827              		.loc 1 1576 0
 5828 0056 10BD     		pop	{r4, pc}
 5829              	.LVL772:
 5830              	.L482:
 5831              		.align	2
 5832              	.L481:
 5833 0058 00000000 		.word	start_pass_huff
 5834              		.cfi_endproc
 5835              	.LFE28:
 5837              		.text
 5838              	.Letext0:
 5839              		.file 2 "/home/jaxc/opt/gcc-arm-none-eabi-7-2018-q2-update/lib/gcc/arm-none-eabi/7.3.1/include/std
 5840              		.file 3 "/home/jaxc/opt/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/lock.h"
 5841              		.file 4 "/home/jaxc/opt/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/_types.h"
 5842              		.file 5 "/home/jaxc/opt/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/reent.h"
 5843              		.file 6 "/home/jaxc/opt/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/stdlib.h"
 5844              		.file 7 "Inc/jmorecfg.h"
 5845              		.file 8 "Middlewares/Third_Party/LibJPEG/include/jpeglib.h"
 5846              		.file 9 "Middlewares/Third_Party/LibJPEG/include/jpegint.h"
 5847              		.file 10 "Middlewares/Third_Party/LibJPEG/include/jerror.h"
 5848              		.file 11 "<built-in>"
ARM GAS  /tmp/cccRWS2v.s 			page 147


DEFINED SYMBOLS
                            *ABS*:0000000000000000 jchuff.c
     /tmp/cccRWS2v.s:18     .text.dump_buffer_s:0000000000000000 $t
     /tmp/cccRWS2v.s:24     .text.dump_buffer_s:0000000000000000 dump_buffer_s
     /tmp/cccRWS2v.s:67     .text.dump_buffer_e:0000000000000000 $t
     /tmp/cccRWS2v.s:73     .text.dump_buffer_e:0000000000000000 dump_buffer_e
     /tmp/cccRWS2v.s:121    .text.htest_one_block:0000000000000000 $t
     /tmp/cccRWS2v.s:127    .text.htest_one_block:0000000000000000 htest_one_block
     /tmp/cccRWS2v.s:310    .text.encode_mcu_gather:0000000000000000 $t
     /tmp/cccRWS2v.s:316    .text.encode_mcu_gather:0000000000000000 encode_mcu_gather
     /tmp/cccRWS2v.s:437    .text.jpeg_make_c_derived_tbl:0000000000000000 $t
     /tmp/cccRWS2v.s:443    .text.jpeg_make_c_derived_tbl:0000000000000000 jpeg_make_c_derived_tbl
     /tmp/cccRWS2v.s:710    .text.start_pass_huff:0000000000000000 $t
     /tmp/cccRWS2v.s:716    .text.start_pass_huff:0000000000000000 start_pass_huff
     /tmp/cccRWS2v.s:1004   .text.start_pass_huff:00000000000001b4 $d
     /tmp/cccRWS2v.s:3790   .text.finish_pass_gather:0000000000000000 finish_pass_gather
     /tmp/cccRWS2v.s:2353   .text.encode_mcu_DC_first:0000000000000000 encode_mcu_DC_first
     /tmp/cccRWS2v.s:3665   .text.finish_pass_huff:0000000000000000 finish_pass_huff
     /tmp/cccRWS2v.s:3011   .text.encode_mcu_AC_first:0000000000000000 encode_mcu_AC_first
     /tmp/cccRWS2v.s:2801   .text.encode_mcu_DC_refine:0000000000000000 encode_mcu_DC_refine
     /tmp/cccRWS2v.s:5075   .text.encode_mcu_AC_refine:0000000000000000 encode_mcu_AC_refine
     /tmp/cccRWS2v.s:4896   .text.encode_mcu_huff:0000000000000000 encode_mcu_huff
     /tmp/cccRWS2v.s:1016   .text.jpeg_gen_optimal_table:0000000000000000 $t
     /tmp/cccRWS2v.s:1022   .text.jpeg_gen_optimal_table:0000000000000000 jpeg_gen_optimal_table
     /tmp/cccRWS2v.s:1395   .text.jpeg_gen_optimal_table:0000000000000214 $d
     /tmp/cccRWS2v.s:1400   .text.emit_buffered_bits:0000000000000000 $t
     /tmp/cccRWS2v.s:1406   .text.emit_buffered_bits:0000000000000000 emit_buffered_bits
     /tmp/cccRWS2v.s:1543   .text.flush_bits_s:0000000000000000 $t
     /tmp/cccRWS2v.s:1549   .text.flush_bits_s:0000000000000000 flush_bits_s
     /tmp/cccRWS2v.s:1677   .text.emit_restart_s:0000000000000000 $t
     /tmp/cccRWS2v.s:1683   .text.emit_restart_s:0000000000000000 emit_restart_s
     /tmp/cccRWS2v.s:1776   .text.flush_bits_e:0000000000000000 $t
     /tmp/cccRWS2v.s:1782   .text.flush_bits_e:0000000000000000 flush_bits_e
     /tmp/cccRWS2v.s:1896   .text.emit_eobrun:0000000000000000 $t
     /tmp/cccRWS2v.s:1902   .text.emit_eobrun:0000000000000000 emit_eobrun
     /tmp/cccRWS2v.s:2242   .text.emit_restart_e:0000000000000000 $t
     /tmp/cccRWS2v.s:2248   .text.emit_restart_e:0000000000000000 emit_restart_e
     /tmp/cccRWS2v.s:2347   .text.encode_mcu_DC_first:0000000000000000 $t
     /tmp/cccRWS2v.s:2795   .text.encode_mcu_DC_refine:0000000000000000 $t
     /tmp/cccRWS2v.s:3005   .text.encode_mcu_AC_first:0000000000000000 $t
     /tmp/cccRWS2v.s:3659   .text.finish_pass_huff:0000000000000000 $t
     /tmp/cccRWS2v.s:3784   .text.finish_pass_gather:0000000000000000 $t
     /tmp/cccRWS2v.s:3956   .text.encode_one_block:0000000000000000 $t
     /tmp/cccRWS2v.s:3962   .text.encode_one_block:0000000000000000 encode_one_block
     /tmp/cccRWS2v.s:4890   .text.encode_mcu_huff:0000000000000000 $t
     /tmp/cccRWS2v.s:5069   .text.encode_mcu_AC_refine:0000000000000000 $t
     /tmp/cccRWS2v.s:5758   .text.jinit_huff_encoder:0000000000000000 $t
     /tmp/cccRWS2v.s:5765   .text.jinit_huff_encoder:0000000000000000 jinit_huff_encoder
     /tmp/cccRWS2v.s:5833   .text.jinit_huff_encoder:0000000000000058 $d

UNDEFINED SYMBOLS
memset
jpeg_alloc_huff_table
